From 84fd016a10f9ac0128178e16f5d5963c21e5fb5c Mon Sep 17 00:00:00 2001
From: Trask Stalnaker <trask.stalnaker@gmail.com>
Date: Mon, 18 Jun 2018 18:55:52 -0700
Subject: [PATCH] Configuration naming improvements

---
 .../org/glowroot/agent/config/AdvancedConfig.java  |  27 +++-
 .../java/org/glowroot/agent/config/ConfigFile.java |   5 +-
 .../org/glowroot/agent/config/ConfigService.java   | 105 ++++++++-----
 ...TransactionConfig.java => SlowTraceConfig.java} |  37 +----
 .../{JvmConfig.java => SystemPropertyConfig.java}  |  14 +-
 .../glowroot/agent/config/ThreadProfileConfig.java |  47 ++++++
 .../{UiConfig.java => UiDefaultsConfig.java}       |  16 +-
 .../glowroot/agent/impl/StackTraceCollector.java   |   6 +-
 .../glowroot/agent/impl/TransactionCollector.java  |  11 +-
 .../glowroot/agent/impl/TransactionService.java    |   2 +-
 .../glowroot/agent/init/ConfigUpdateService.java   |  21 ++-
 .../glowroot/agent/init/EnvironmentCreator.java    |   6 +-
 .../agent/init/NonEmbeddedGlowrootAgentInit.java   |   3 +-
 .../glowroot/agent/live/LiveJvmServiceImpl.java    |   3 +-
 .../impl/ConfigServiceImplDefensiveCheckTest.java  |  12 +-
 .../agent/embedded/init/EmbeddedAgentModule.java   |   2 +-
 .../agent/embedded/repo/ConfigRepositoryImpl.java  |  61 ++++---
 .../agent/tests/ConfiguredInstrumentationIT.java   |   6 +-
 .../org/glowroot/agent/tests/ErrorCaptureIT.java   |   6 +-
 .../org/glowroot/agent/tests/PartialTraceIT.java   |   8 +-
 .../java/org/glowroot/agent/tests/ProfilingIT.java |  20 +--
 .../agent/tests/SetTraceStoreThresholdIT.java      |  13 +-
 .../org/glowroot/agent/tests/ThreadStatsIT.java    |  13 +-
 .../glowroot/agent/tests/TraceThreadStatsIT.java   |  12 +-
 .../glowroot/agent/it/harness/ConfigService.java   |   7 +-
 .../agent/it/harness/impl/ConfigServiceImpl.java   |  37 +++--
 .../glowroot/agent/plugin/executor/ExecutorIT.java |  26 +--
 .../org/glowroot/central/repo/AgentConfigDao.java  |   2 +-
 .../central/repo/ConfigRepositoryImpl.java         |  68 +++++---
 .../org/glowroot/central/repo/SchemaUpgrade.java   |  14 +-
 .../org/glowroot/central/repo/ConfigDaoIT.java     |   4 +-
 .../glowroot/central/repo/ConfigRepositoryIT.java  |  55 +++++--
 .../java/org/glowroot/common/ConfigDefaults.java   |   8 +-
 .../glowroot/common2/repo/ConfigRepository.java    |  27 ++--
 ui/app/index.html                                  |  10 +-
 ui/app/scripts/app.js                              |   4 +-
 ui/app/scripts/controllers/admin/role.js           | 107 +++++++------
 ui/app/scripts/controllers/config.js               |   2 +-
 .../config/{transaction.js => slow-traces.js}      |   6 +-
 .../config/{jvm.js => system-properties.js}        |   8 +-
 .../scripts/controllers/config/thread-profile.js   |  59 +++++++
 .../controllers/config/{ui.js => ui-defaults.js}   |   6 +-
 ui/app/scripts/controllers/navbar.js               |   2 +-
 .../transaction/{profile.js => thread-profile.js}  |   4 +-
 .../controllers/transaction/transaction-log.js     |  29 ++++
 ui/app/scripts/routes.js                           |  48 ++++--
 ui/app/views/admin/role.html                       | 100 +++++++-----
 ui/app/views/config.html                           |  24 +--
 ui/app/views/config/advanced.html                  |  16 ++
 ui/app/views/config/alert-list.html                |   4 +-
 ui/app/views/config/alert.html                     |  36 ++---
 ui/app/views/config/gauge-list.html                |   4 +-
 ui/app/views/config/gauge.html                     |   8 +-
 ui/app/views/config/plugin.html                    |   8 +-
 .../config/{transaction.html => slow-traces.html}  |  48 ++----
 ui/app/views/config/synthetic-monitor-list.html    |   4 +-
 ui/app/views/config/synthetic-monitor.html         |  14 +-
 .../config/{jvm.html => system-properties.html}    |   6 +-
 ui/app/views/config/thread-profile.html            |  58 +++++++
 ui/app/views/config/{ui.html => ui-defaults.html}  |  10 +-
 ui/app/views/transaction/tabs.html                 |  22 +--
 .../{profile.html => thread-profile.html}          |   0
 ui/app/views/transaction/transaction-log.html      |  32 ++++
 .../java/org/glowroot/ui/ConfigJsonService.java    | 175 +++++++++++++--------
 .../main/java/org/glowroot/ui/JvmJsonService.java  |   2 +-
 .../main/java/org/glowroot/ui/LayoutService.java   |  75 +++++----
 .../org/glowroot/ui/TransactionJsonService.java    |   4 +-
 .../test/java/org/glowroot/tests/BasicSmokeIT.java |  18 ++-
 .../src/test/java/org/glowroot/tests/ConfigIT.java |  52 ++++--
 .../glowroot/tests/NoTracesNoProfilesSmokeIT.java  |  18 ++-
 .../test/java/org/glowroot/tests/RoleConfigIT.java |  13 +-
 .../test/java/org/glowroot/tests/WebDriverIT.java  |  11 +-
 .../org/glowroot/tests/admin/RoleConfigPage.java   |  30 ++--
 .../glowroot/tests/config/AdvancedConfigPage.java  |   4 +
 .../org/glowroot/tests/config/ConfigSidebar.java   |  16 +-
 .../glowroot/tests/config/SlowTraceConfigPage.java |  49 ++++++
 ...nfigPage.java => SystemPropertyConfigPage.java} |   6 +-
 ...onfigPage.java => ThreadProfileConfigPage.java} |  12 +-
 wire-api/src/main/protobuf/AgentConfig.proto       |  35 +++--
 79 files changed, 1189 insertions(+), 714 deletions(-)
 rename agent/core/src/main/java/org/glowroot/agent/config/{TransactionConfig.java => SlowTraceConfig.java} (67%)
 rename agent/core/src/main/java/org/glowroot/agent/config/{JvmConfig.java => SystemPropertyConfig.java} (68%)
 create mode 100644 agent/core/src/main/java/org/glowroot/agent/config/ThreadProfileConfig.java
 rename agent/core/src/main/java/org/glowroot/agent/config/{UiConfig.java => UiDefaultsConfig.java} (77%)
 rename ui/app/scripts/controllers/config/{transaction.js => slow-traces.js} (94%)
 rename ui/app/scripts/controllers/config/{jvm.js => system-properties.js} (87%)
 create mode 100644 ui/app/scripts/controllers/config/thread-profile.js
 rename ui/app/scripts/controllers/config/{ui.js => ui-defaults.js} (92%)
 rename ui/app/scripts/controllers/transaction/{profile.js => thread-profile.js} (98%)
 create mode 100644 ui/app/scripts/controllers/transaction/transaction-log.js
 rename ui/app/views/config/{transaction.html => slow-traces.html} (73%)
 rename ui/app/views/config/{jvm.html => system-properties.html} (91%)
 create mode 100644 ui/app/views/config/thread-profile.html
 rename ui/app/views/config/{ui.html => ui-defaults.html} (96%)
 rename ui/app/views/transaction/{profile.html => thread-profile.html} (100%)
 create mode 100644 ui/app/views/transaction/transaction-log.html
 create mode 100644 webdriver-tests/src/test/java/org/glowroot/tests/config/SlowTraceConfigPage.java
 rename webdriver-tests/src/test/java/org/glowroot/tests/config/{JvmConfigPage.java => SystemPropertyConfigPage.java} (89%)
 rename webdriver-tests/src/test/java/org/glowroot/tests/config/{TransactionConfigPage.java => ThreadProfileConfigPage.java} (79%)

diff --git a/agent/core/src/main/java/org/glowroot/agent/config/AdvancedConfig.java b/agent/core/src/main/java/org/glowroot/agent/config/AdvancedConfig.java
index fbcaf1e384..0e7cf7145d 100644
--- a/agent/core/src/main/java/org/glowroot/agent/config/AdvancedConfig.java
+++ b/agent/core/src/main/java/org/glowroot/agent/config/AdvancedConfig.java
@@ -21,6 +21,7 @@ import org.immutables.value.Value;
 
 import org.glowroot.common.ConfigDefaults;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.OptionalBool;
 import org.glowroot.wire.api.model.Proto.OptionalInt32;
 
 @Value.Immutable
@@ -33,9 +34,10 @@ public abstract class AdvancedConfig {
     public static final int TRANSACTION_AGGREGATE_SERVICE_CALLS_HARD_LIMIT_MULTIPLIER = 2;
 
     @Value.Default
-    @JsonInclude(Include.NON_EMPTY)
-    public boolean weavingTimer() {
-        return false;
+    // do not use @JsonInclude NON_EMPTY
+    // need to always write this value to config.json since default value is true
+    public boolean captureThreadStats() {
+        return true;
     }
 
     @Value.Default
@@ -80,9 +82,16 @@ public abstract class AdvancedConfig {
         return 60;
     }
 
+    @Value.Default
+    @JsonInclude(Include.NON_EMPTY)
+    public boolean weavingTimer() {
+        return false;
+    }
+
     public AgentConfig.AdvancedConfig toProto() {
         return AgentConfig.AdvancedConfig.newBuilder()
-                .setWeavingTimer(weavingTimer())
+                .setCaptureThreadStats(OptionalBool.newBuilder()
+                        .setValue(captureThreadStats()))
                 .setImmediatePartialStoreThresholdSeconds(
                         of(immediatePartialStoreThresholdSeconds()))
                 .setMaxTransactionAggregates(of(maxTransactionAggregates()))
@@ -91,12 +100,15 @@ public abstract class AdvancedConfig {
                 .setMaxTraceEntriesPerTransaction(of(maxTraceEntriesPerTransaction()))
                 .setMaxProfileSamplesPerTransaction(of(maxProfileSamplesPerTransaction()))
                 .setMbeanGaugeNotFoundDelaySeconds(of(mbeanGaugeNotFoundDelaySeconds()))
+                .setWeavingTimer(weavingTimer())
                 .build();
     }
 
     public static AdvancedConfig create(AgentConfig.AdvancedConfig config) {
-        ImmutableAdvancedConfig.Builder builder = ImmutableAdvancedConfig.builder()
-                .weavingTimer(config.getWeavingTimer());
+        ImmutableAdvancedConfig.Builder builder = ImmutableAdvancedConfig.builder();
+        if (config.hasCaptureThreadStats()) {
+            builder.captureThreadStats(config.getCaptureThreadStats().getValue());
+        }
         if (config.hasImmediatePartialStoreThresholdSeconds()) {
             builder.immediatePartialStoreThresholdSeconds(
                     config.getImmediatePartialStoreThresholdSeconds().getValue());
@@ -122,7 +134,8 @@ public abstract class AdvancedConfig {
             builder.mbeanGaugeNotFoundDelaySeconds(
                     config.getMbeanGaugeNotFoundDelaySeconds().getValue());
         }
-        return builder.build();
+        return builder.weavingTimer(config.getWeavingTimer())
+                .build();
     }
 
     private static OptionalInt32 of(int value) {
diff --git a/agent/core/src/main/java/org/glowroot/agent/config/ConfigFile.java b/agent/core/src/main/java/org/glowroot/agent/config/ConfigFile.java
index bea521ce20..9a9e2caabe 100644
--- a/agent/core/src/main/java/org/glowroot/agent/config/ConfigFile.java
+++ b/agent/core/src/main/java/org/glowroot/agent/config/ConfigFile.java
@@ -39,8 +39,9 @@ class ConfigFile {
     private static final ObjectMapper mapper = ObjectMappers.create();
 
     private static final List<String> keyOrder =
-            ImmutableList.of("transactions", "jvm", "ui", "userRecording", "advanced", "gauges",
-                    "syntheticMonitors", "alerts", "plugins", "instrumentation");
+            ImmutableList.of("slowTraces", "threadProfile", "gauges", "systemProperties",
+                    "syntheticMonitors", "alerts", "uiDefaults", "plugins", "instrumentation",
+                    "userRecording", "advanced");
 
     private final File file;
     private final ObjectNode rootObjectNode;
diff --git a/agent/core/src/main/java/org/glowroot/agent/config/ConfigService.java b/agent/core/src/main/java/org/glowroot/agent/config/ConfigService.java
index dcbe9a0f9d..ea1ce61888 100644
--- a/agent/core/src/main/java/org/glowroot/agent/config/ConfigService.java
+++ b/agent/core/src/main/java/org/glowroot/agent/config/ConfigService.java
@@ -52,9 +52,10 @@ public class ConfigService {
     private final Set<ConfigListener> configListeners = Sets.newCopyOnWriteArraySet();
     private final Set<ConfigListener> pluginConfigListeners = Sets.newCopyOnWriteArraySet();
 
-    private volatile TransactionConfig transactionConfig;
-    private volatile JvmConfig jvmConfig;
-    private volatile UiConfig uiConfig;
+    private volatile SlowTraceConfig slowTraceConfig;
+    private volatile ThreadProfileConfig threadProfileConfig;
+    private volatile SystemPropertyConfig systemPropertyConfig;
+    private volatile UiDefaultsConfig uiDefaultsConfig;
     private volatile UserRecordingConfig userRecordingConfig;
     private volatile AdvancedConfig advancedConfig;
     private volatile ImmutableList<GaugeConfig> gaugeConfigs;
@@ -81,24 +82,33 @@ public class ConfigService {
     private ConfigService(File confDir, List<PluginDescriptor> pluginDescriptors) {
         configFile = new ConfigFile(new File(confDir, "config.json"));
         this.pluginDescriptors = ImmutableList.copyOf(pluginDescriptors);
-        TransactionConfig transactionConfig =
-                configFile.getConfig("transactions", ImmutableTransactionConfig.class);
-        if (transactionConfig == null) {
-            this.transactionConfig = ImmutableTransactionConfig.builder().build();
+        SlowTraceConfig slowTraceConfig =
+                configFile.getConfig("slowTraces", ImmutableSlowTraceConfig.class);
+        if (slowTraceConfig == null) {
+            this.slowTraceConfig = ImmutableSlowTraceConfig.builder().build();
         } else {
-            this.transactionConfig = transactionConfig;
+            this.slowTraceConfig = slowTraceConfig;
         }
-        JvmConfig jvmConfig = configFile.getConfig("jvm", ImmutableJvmConfig.class);
-        if (jvmConfig == null) {
-            this.jvmConfig = ImmutableJvmConfig.builder().build();
+        ThreadProfileConfig threadProfileConfig =
+                configFile.getConfig("threadProfile", ImmutableThreadProfileConfig.class);
+        if (threadProfileConfig == null) {
+            this.threadProfileConfig = ImmutableThreadProfileConfig.builder().build();
         } else {
-            this.jvmConfig = jvmConfig;
+            this.threadProfileConfig = threadProfileConfig;
         }
-        UiConfig uiConfig = configFile.getConfig("ui", ImmutableUiConfig.class);
-        if (uiConfig == null) {
-            this.uiConfig = ImmutableUiConfig.builder().build();
+        SystemPropertyConfig systemPropertyConfig =
+                configFile.getConfig("systemProperty", ImmutableSystemPropertyConfig.class);
+        if (systemPropertyConfig == null) {
+            this.systemPropertyConfig = ImmutableSystemPropertyConfig.builder().build();
         } else {
-            this.uiConfig = uiConfig;
+            this.systemPropertyConfig = systemPropertyConfig;
+        }
+        UiDefaultsConfig uiDefaultsConfig =
+                configFile.getConfig("uiDefaults", ImmutableUiDefaultsConfig.class);
+        if (uiDefaultsConfig == null) {
+            this.uiDefaultsConfig = ImmutableUiDefaultsConfig.builder().build();
+        } else {
+            this.uiDefaultsConfig = uiDefaultsConfig;
         }
         UserRecordingConfig userRecordingConfig =
                 configFile.getConfig("userRecording", ImmutableUserRecordingConfig.class);
@@ -154,16 +164,20 @@ public class ConfigService {
         }
     }
 
-    public TransactionConfig getTransactionConfig() {
-        return transactionConfig;
+    public SlowTraceConfig getSlowTraceConfig() {
+        return slowTraceConfig;
+    }
+
+    public ThreadProfileConfig getThreadProfileConfig() {
+        return threadProfileConfig;
     }
 
-    public JvmConfig getJvmConfig() {
-        return jvmConfig;
+    public SystemPropertyConfig getSystemPropertyConfig() {
+        return systemPropertyConfig;
     }
 
-    public UiConfig getUiConfig() {
-        return uiConfig;
+    public UiDefaultsConfig getUiDefaultsConfig() {
+        return uiDefaultsConfig;
     }
 
     public UserRecordingConfig getUserRecordingConfig() {
@@ -205,18 +219,19 @@ public class ConfigService {
 
     public AgentConfig getAgentConfig() {
         AgentConfig.Builder builder = AgentConfig.newBuilder()
-                .setTransactionConfig(transactionConfig.toProto());
+                .setSlowTraceConfig(slowTraceConfig.toProto())
+                .setThreadProfileConfig(threadProfileConfig.toProto());
         for (GaugeConfig gaugeConfig : gaugeConfigs) {
             builder.addGaugeConfig(gaugeConfig.toProto());
         }
-        builder.setJvmConfig(jvmConfig.toProto());
+        builder.setSystemPropertyConfig(systemPropertyConfig.toProto());
         for (SyntheticMonitorConfig syntheticMonitorConfig : syntheticMonitorConfigs) {
             builder.addSyntheticMonitorConfig(syntheticMonitorConfig.toProto());
         }
         for (AlertConfig alertConfig : alertConfigs) {
             builder.addAlertConfig(alertConfig.toProto());
         }
-        builder.setUiConfig(uiConfig.toProto());
+        builder.setUiDefaultsConfig(uiDefaultsConfig.toProto());
         for (PluginConfig pluginConfig : pluginConfigs) {
             builder.addPluginConfig(pluginConfig.toProto());
         }
@@ -237,9 +252,15 @@ public class ConfigService {
         pluginConfigListeners.add(listener);
     }
 
-    public void updateTransactionConfig(TransactionConfig config) throws IOException {
-        configFile.writeConfig("transactions", config);
-        transactionConfig = config;
+    public void updateSlowTraceConfig(SlowTraceConfig config) throws IOException {
+        configFile.writeConfig("slowTraces", config);
+        slowTraceConfig = config;
+        notifyConfigListeners();
+    }
+
+    public void updateThreadProfileConfig(ThreadProfileConfig config) throws IOException {
+        configFile.writeConfig("threadProfile", config);
+        threadProfileConfig = config;
         notifyConfigListeners();
     }
 
@@ -249,9 +270,9 @@ public class ConfigService {
         notifyConfigListeners();
     }
 
-    public void updateJvmConfig(JvmConfig config) throws IOException {
-        configFile.writeConfig("jvm", config);
-        jvmConfig = config;
+    public void updateSystemPropertyConfig(SystemPropertyConfig config) throws IOException {
+        configFile.writeConfig("systemProperties", config);
+        systemPropertyConfig = config;
         notifyConfigListeners();
     }
 
@@ -268,9 +289,9 @@ public class ConfigService {
         notifyConfigListeners();
     }
 
-    public void updateUiConfig(UiConfig config) throws IOException {
-        configFile.writeConfig("ui", config);
-        uiConfig = config;
+    public void updateUiDefaultsConfig(UiDefaultsConfig config) throws IOException {
+        configFile.writeConfig("uiDefaults", config);
+        uiDefaultsConfig = config;
         notifyConfigListeners();
     }
 
@@ -328,7 +349,7 @@ public class ConfigService {
 
     @OnlyUsedByTests
     public void setSlowThresholdToZero() throws IOException {
-        transactionConfig = ImmutableTransactionConfig.copyOf(transactionConfig)
+        slowTraceConfig = ImmutableSlowTraceConfig.copyOf(slowTraceConfig)
                 .withSlowThresholdMillis(0);
         writeAll();
         notifyConfigListeners();
@@ -336,11 +357,12 @@ public class ConfigService {
 
     @OnlyUsedByTests
     public void resetConfig() throws IOException {
-        transactionConfig = ImmutableTransactionConfig.builder()
+        slowTraceConfig = ImmutableSlowTraceConfig.builder()
                 .slowThresholdMillis(0)
                 .build();
-        jvmConfig = ImmutableJvmConfig.builder().build();
-        uiConfig = ImmutableUiConfig.builder().build();
+        threadProfileConfig = ImmutableThreadProfileConfig.builder().build();
+        systemPropertyConfig = ImmutableSystemPropertyConfig.builder().build();
+        uiDefaultsConfig = ImmutableUiDefaultsConfig.builder().build();
         userRecordingConfig = ImmutableUserRecordingConfig.builder().build();
         advancedConfig = ImmutableAdvancedConfig.builder().build();
         gaugeConfigs = getDefaultGaugeConfigs();
@@ -357,9 +379,10 @@ public class ConfigService {
     private void writeAll() throws IOException {
         // linked hash map to preserve ordering when writing to config file
         Map<String, Object> configs = Maps.newLinkedHashMap();
-        configs.put("transactions", transactionConfig);
-        configs.put("jvm", jvmConfig);
-        configs.put("ui", uiConfig);
+        configs.put("slowTraces", slowTraceConfig);
+        configs.put("threadProfile", threadProfileConfig);
+        configs.put("jvm", systemPropertyConfig);
+        configs.put("ui", uiDefaultsConfig);
         configs.put("userRecording", userRecordingConfig);
         configs.put("advanced", advancedConfig);
         configs.put("gauges", gaugeConfigs);
diff --git a/agent/core/src/main/java/org/glowroot/agent/config/TransactionConfig.java b/agent/core/src/main/java/org/glowroot/agent/config/SlowTraceConfig.java
similarity index 67%
rename from agent/core/src/main/java/org/glowroot/agent/config/TransactionConfig.java
rename to agent/core/src/main/java/org/glowroot/agent/config/SlowTraceConfig.java
index 51c18c8b4d..d89732b33b 100644
--- a/agent/core/src/main/java/org/glowroot/agent/config/TransactionConfig.java
+++ b/agent/core/src/main/java/org/glowroot/agent/config/SlowTraceConfig.java
@@ -24,7 +24,7 @@ import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig;
 import org.glowroot.wire.api.model.Proto.OptionalInt32;
 
 @Value.Immutable
-public abstract class TransactionConfig {
+public abstract class SlowTraceConfig {
 
     // 0 means mark all transactions as slow
     @Value.Default
@@ -32,27 +32,14 @@ public abstract class TransactionConfig {
         return 2000;
     }
 
-    // 0 means profiling disabled
-    @Value.Default
-    public int profilingIntervalMillis() {
-        return 1000;
-    }
-
-    @Value.Default
-    // do not use @JsonInclude NON_EMPTY
-    // need to always write this value to config.json since default value is true
-    public boolean captureThreadStats() {
-        return true;
-    }
-
     @JsonInclude(Include.NON_EMPTY)
     public abstract ImmutableList<ImmutableSlowThreshold> slowThresholds();
 
-    public AgentConfig.TransactionConfig toProto() {
-        AgentConfig.TransactionConfig.Builder builder = AgentConfig.TransactionConfig.newBuilder()
-                .setSlowThresholdMillis(of(slowThresholdMillis()))
-                .setProfilingIntervalMillis(of(profilingIntervalMillis()))
-                .setCaptureThreadStats(captureThreadStats());
+    public AgentConfig.SlowTraceConfig toProto() {
+        AgentConfig.SlowTraceConfig.Builder builder = AgentConfig.SlowTraceConfig.newBuilder()
+                .setSlowThresholdMillis(OptionalInt32.newBuilder()
+                        .setValue(slowThresholdMillis())
+                        .build());
         for (SlowThreshold slowThreshold : slowThresholds()) {
             builder.addSlowThreshold(AgentConfig.SlowThreshold.newBuilder()
                     .setTransactionType(slowThreshold.transactionType())
@@ -63,15 +50,11 @@ public abstract class TransactionConfig {
         return builder.build();
     }
 
-    public static TransactionConfig create(AgentConfig.TransactionConfig config) {
-        ImmutableTransactionConfig.Builder builder = ImmutableTransactionConfig.builder();
+    public static SlowTraceConfig create(AgentConfig.SlowTraceConfig config) {
+        ImmutableSlowTraceConfig.Builder builder = ImmutableSlowTraceConfig.builder();
         if (config.hasSlowThresholdMillis()) {
             builder.slowThresholdMillis(config.getSlowThresholdMillis().getValue());
         }
-        if (config.hasProfilingIntervalMillis()) {
-            builder.profilingIntervalMillis(config.getProfilingIntervalMillis().getValue());
-        }
-        builder.captureThreadStats(config.getCaptureThreadStats());
         for (AgentConfig.SlowThreshold slowThreshold : config.getSlowThresholdList()) {
             builder.addSlowThresholds(ImmutableSlowThreshold.builder()
                     .transactionType(slowThreshold.getTransactionType())
@@ -82,10 +65,6 @@ public abstract class TransactionConfig {
         return builder.build();
     }
 
-    private static OptionalInt32 of(int value) {
-        return OptionalInt32.newBuilder().setValue(value).build();
-    }
-
     @Value.Immutable
     public abstract static class SlowThreshold {
 
diff --git a/agent/core/src/main/java/org/glowroot/agent/config/JvmConfig.java b/agent/core/src/main/java/org/glowroot/agent/config/SystemPropertyConfig.java
similarity index 68%
rename from agent/core/src/main/java/org/glowroot/agent/config/JvmConfig.java
rename to agent/core/src/main/java/org/glowroot/agent/config/SystemPropertyConfig.java
index 1fb212d1d2..5c78094842 100644
--- a/agent/core/src/main/java/org/glowroot/agent/config/JvmConfig.java
+++ b/agent/core/src/main/java/org/glowroot/agent/config/SystemPropertyConfig.java
@@ -22,21 +22,21 @@ import org.glowroot.common.ConfigDefaults;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig;
 
 @Value.Immutable
-public abstract class JvmConfig {
+public abstract class SystemPropertyConfig {
 
     @Value.Default
     public ImmutableList<String> maskSystemProperties() {
-        return ConfigDefaults.JVM_MASK_SYSTEM_PROPERTIES;
+        return ConfigDefaults.SYSTEM_PROPERTIES_MASK;
     }
 
-    public AgentConfig.JvmConfig toProto() {
-        AgentConfig.JvmConfig.Builder builder =
-                AgentConfig.JvmConfig.newBuilder().addAllMaskSystemProperty(maskSystemProperties());
+    public AgentConfig.SystemPropertyConfig toProto() {
+        AgentConfig.SystemPropertyConfig.Builder builder = AgentConfig.SystemPropertyConfig
+                .newBuilder().addAllMaskSystemProperty(maskSystemProperties());
         return builder.build();
     }
 
-    public static JvmConfig create(AgentConfig.JvmConfig config) {
-        ImmutableJvmConfig.Builder builder = ImmutableJvmConfig.builder()
+    public static SystemPropertyConfig create(AgentConfig.SystemPropertyConfig config) {
+        ImmutableSystemPropertyConfig.Builder builder = ImmutableSystemPropertyConfig.builder()
                 .addAllMaskSystemProperties(config.getMaskSystemPropertyList());
         return builder.build();
     }
diff --git a/agent/core/src/main/java/org/glowroot/agent/config/ThreadProfileConfig.java b/agent/core/src/main/java/org/glowroot/agent/config/ThreadProfileConfig.java
new file mode 100644
index 0000000000..182ec28df5
--- /dev/null
+++ b/agent/core/src/main/java/org/glowroot/agent/config/ThreadProfileConfig.java
@@ -0,0 +1,47 @@
+/*
+ * Copyright 2018 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.glowroot.agent.config;
+
+import org.immutables.value.Value;
+
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig;
+import org.glowroot.wire.api.model.Proto.OptionalInt32;
+
+@Value.Immutable
+public abstract class ThreadProfileConfig {
+
+    // 0 means profiling disabled
+    @Value.Default
+    public int profilingIntervalMillis() {
+        return 1000;
+    }
+
+    public AgentConfig.ThreadProfileConfig toProto() {
+        return AgentConfig.ThreadProfileConfig.newBuilder()
+                .setProfilingIntervalMillis(OptionalInt32.newBuilder()
+                        .setValue(profilingIntervalMillis())
+                        .build())
+                .build();
+    }
+
+    public static ThreadProfileConfig create(AgentConfig.ThreadProfileConfig config) {
+        ImmutableThreadProfileConfig.Builder builder = ImmutableThreadProfileConfig.builder();
+        if (config.hasProfilingIntervalMillis()) {
+            builder.profilingIntervalMillis(config.getProfilingIntervalMillis().getValue());
+        }
+        return builder.build();
+    }
+}
diff --git a/agent/core/src/main/java/org/glowroot/agent/config/UiConfig.java b/agent/core/src/main/java/org/glowroot/agent/config/UiDefaultsConfig.java
similarity index 77%
rename from agent/core/src/main/java/org/glowroot/agent/config/UiConfig.java
rename to agent/core/src/main/java/org/glowroot/agent/config/UiDefaultsConfig.java
index 6add1d12c2..c1a972b1d6 100644
--- a/agent/core/src/main/java/org/glowroot/agent/config/UiConfig.java
+++ b/agent/core/src/main/java/org/glowroot/agent/config/UiDefaultsConfig.java
@@ -22,33 +22,33 @@ import org.glowroot.common.ConfigDefaults;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig;
 
 @Value.Immutable
-public abstract class UiConfig {
+public abstract class UiDefaultsConfig {
 
     @Value.Default
     public String defaultTransactionType() {
-        return ConfigDefaults.UI_DEFAULT_TRANSACTION_TYPE;
+        return ConfigDefaults.UI_DEFAULTS_TRANSACTION_TYPE;
     }
 
     @Value.Default
     public ImmutableList<Double> defaultPercentiles() {
-        return ConfigDefaults.UI_DEFAULT_PERCENTILES;
+        return ConfigDefaults.UI_DEFAULTS_PERCENTILES;
     }
 
     @Value.Default
     public ImmutableList<String> defaultGaugeNames() {
-        return ConfigDefaults.UI_DEFAULT_GAUGE_NAMES;
+        return ConfigDefaults.UI_DEFAULTS_GAUGE_NAMES;
     }
 
-    public AgentConfig.UiConfig toProto() {
-        return AgentConfig.UiConfig.newBuilder()
+    public AgentConfig.UiDefaultsConfig toProto() {
+        return AgentConfig.UiDefaultsConfig.newBuilder()
                 .setDefaultTransactionType(defaultTransactionType())
                 .addAllDefaultPercentile(defaultPercentiles())
                 .addAllDefaultGaugeName(defaultGaugeNames())
                 .build();
     }
 
-    public static UiConfig create(AgentConfig.UiConfig config) {
-        return ImmutableUiConfig.builder()
+    public static UiDefaultsConfig create(AgentConfig.UiDefaultsConfig config) {
+        return ImmutableUiDefaultsConfig.builder()
                 .defaultTransactionType(config.getDefaultTransactionType())
                 .defaultPercentiles(config.getDefaultPercentileList())
                 .addAllDefaultGaugeNames(config.getDefaultGaugeNameList())
diff --git a/agent/core/src/main/java/org/glowroot/agent/impl/StackTraceCollector.java b/agent/core/src/main/java/org/glowroot/agent/impl/StackTraceCollector.java
index 986e642f20..23bce02dfe 100644
--- a/agent/core/src/main/java/org/glowroot/agent/impl/StackTraceCollector.java
+++ b/agent/core/src/main/java/org/glowroot/agent/impl/StackTraceCollector.java
@@ -61,7 +61,8 @@ public class StackTraceCollector {
         configService.addConfigListener(new ConfigListener() {
             @Override
             public void onChange() {
-                int intervalMillis = configService.getTransactionConfig().profilingIntervalMillis();
+                int intervalMillis =
+                        configService.getThreadProfileConfig().profilingIntervalMillis();
                 // TODO report checker framework issue that occurs without checkNotNull
                 if (intervalMillis != checkNotNull(runnable).currIntervalMillis) {
                     checkNotNull(processingThread);
@@ -110,7 +111,8 @@ public class StackTraceCollector {
             // delay for first
             long remainingMillisInInterval = 0;
             while (!closed) {
-                currIntervalMillis = configService.getTransactionConfig().profilingIntervalMillis();
+                currIntervalMillis =
+                        configService.getThreadProfileConfig().profilingIntervalMillis();
                 if (currIntervalMillis <= 0) {
                     try {
                         MILLISECONDS.sleep(Long.MAX_VALUE);
diff --git a/agent/core/src/main/java/org/glowroot/agent/impl/TransactionCollector.java b/agent/core/src/main/java/org/glowroot/agent/impl/TransactionCollector.java
index e14e67b693..5c42791d00 100644
--- a/agent/core/src/main/java/org/glowroot/agent/impl/TransactionCollector.java
+++ b/agent/core/src/main/java/org/glowroot/agent/impl/TransactionCollector.java
@@ -33,8 +33,8 @@ import org.slf4j.LoggerFactory;
 import org.glowroot.agent.collector.Collector;
 import org.glowroot.agent.collector.Collector.TraceReader;
 import org.glowroot.agent.config.ConfigService;
-import org.glowroot.agent.config.TransactionConfig;
-import org.glowroot.agent.config.TransactionConfig.SlowThreshold;
+import org.glowroot.agent.config.SlowTraceConfig;
+import org.glowroot.agent.config.SlowTraceConfig.SlowThreshold;
 import org.glowroot.agent.plugin.api.config.ConfigListener;
 import org.glowroot.agent.util.RateLimitedLogger;
 import org.glowroot.agent.util.ThreadFactories;
@@ -188,9 +188,9 @@ public class TransactionCollector {
 
         @Override
         public void onChange() {
-            TransactionConfig transactionConfig = configService.getTransactionConfig();
+            SlowTraceConfig slowTraceConfig = configService.getSlowTraceConfig();
             Map<String, SlowThresholdsForTypeBuilder> slowThresholds = Maps.newHashMap();
-            for (SlowThreshold slowThreshold : transactionConfig.slowThresholds()) {
+            for (SlowThreshold slowThreshold : slowTraceConfig.slowThresholds()) {
                 String transactionType = slowThreshold.transactionType();
                 SlowThresholdsForTypeBuilder slowThresholdForType =
                         slowThresholds.get(transactionType);
@@ -212,8 +212,7 @@ public class TransactionCollector {
                 builder.put(entry.getKey(), entry.getValue().toImmutable());
             }
             TransactionCollector.this.slowThresholds = ImmutableMap.copyOf(builder);
-            defaultSlowThresholdNanos =
-                    MILLISECONDS.toNanos(transactionConfig.slowThresholdMillis());
+            defaultSlowThresholdNanos = MILLISECONDS.toNanos(slowTraceConfig.slowThresholdMillis());
         }
     }
 
diff --git a/agent/core/src/main/java/org/glowroot/agent/impl/TransactionService.java b/agent/core/src/main/java/org/glowroot/agent/impl/TransactionService.java
index f1018f0e7c..88f11ec412 100644
--- a/agent/core/src/main/java/org/glowroot/agent/impl/TransactionService.java
+++ b/agent/core/src/main/java/org/glowroot/agent/impl/TransactionService.java
@@ -117,7 +117,7 @@ public class TransactionService implements ConfigListener {
     @Override
     public void onChange() {
         AdvancedConfig advancedConfig = configService.getAdvancedConfig();
-        captureThreadStats = configService.getTransactionConfig().captureThreadStats();
+        captureThreadStats = advancedConfig.captureThreadStats();
         maxQueryAggregates = advancedConfig.maxQueryAggregates();
         maxServiceCallAggregates = advancedConfig.maxServiceCallAggregates();
         maxTraceEntries = advancedConfig.maxTraceEntriesPerTransaction();
diff --git a/agent/core/src/main/java/org/glowroot/agent/init/ConfigUpdateService.java b/agent/core/src/main/java/org/glowroot/agent/init/ConfigUpdateService.java
index 2e8f609193..ed1666e90c 100644
--- a/agent/core/src/main/java/org/glowroot/agent/init/ConfigUpdateService.java
+++ b/agent/core/src/main/java/org/glowroot/agent/init/ConfigUpdateService.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2015-2017 the original author or authors.
+ * Copyright 2015-2018 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -28,13 +28,14 @@ import org.glowroot.agent.config.AlertConfig;
 import org.glowroot.agent.config.ConfigService;
 import org.glowroot.agent.config.GaugeConfig;
 import org.glowroot.agent.config.InstrumentationConfig;
-import org.glowroot.agent.config.JvmConfig;
 import org.glowroot.agent.config.PluginCache;
 import org.glowroot.agent.config.PluginConfig;
 import org.glowroot.agent.config.PluginDescriptor;
+import org.glowroot.agent.config.SlowTraceConfig;
 import org.glowroot.agent.config.SyntheticMonitorConfig;
-import org.glowroot.agent.config.TransactionConfig;
-import org.glowroot.agent.config.UiConfig;
+import org.glowroot.agent.config.SystemPropertyConfig;
+import org.glowroot.agent.config.ThreadProfileConfig;
+import org.glowroot.agent.config.UiDefaultsConfig;
 import org.glowroot.agent.config.UserRecordingConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig;
 
@@ -55,10 +56,14 @@ class ConfigUpdateService implements AgentConfigUpdater {
     @Override
     public void update(AgentConfig agentConfig) throws IOException {
         synchronized (lock) {
-            configService.updateTransactionConfig(
-                    TransactionConfig.create(agentConfig.getTransactionConfig()));
-            configService.updateJvmConfig(JvmConfig.create(agentConfig.getJvmConfig()));
-            configService.updateUiConfig(UiConfig.create(agentConfig.getUiConfig()));
+            configService.updateSlowTraceConfig(
+                    SlowTraceConfig.create(agentConfig.getSlowTraceConfig()));
+            configService.updateThreadProfileConfig(
+                    ThreadProfileConfig.create(agentConfig.getThreadProfileConfig()));
+            configService.updateSystemPropertyConfig(
+                    SystemPropertyConfig.create(agentConfig.getSystemPropertyConfig()));
+            configService.updateUiDefaultsConfig(
+                    UiDefaultsConfig.create(agentConfig.getUiDefaultsConfig()));
             configService.updateUserRecordingConfig(
                     UserRecordingConfig.create(agentConfig.getUserRecordingConfig()));
             configService
diff --git a/agent/core/src/main/java/org/glowroot/agent/init/EnvironmentCreator.java b/agent/core/src/main/java/org/glowroot/agent/init/EnvironmentCreator.java
index 351e622ebe..c41fb2f54b 100644
--- a/agent/core/src/main/java/org/glowroot/agent/init/EnvironmentCreator.java
+++ b/agent/core/src/main/java/org/glowroot/agent/init/EnvironmentCreator.java
@@ -32,7 +32,7 @@ import org.checkerframework.checker.nullness.qual.Nullable;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import org.glowroot.agent.config.JvmConfig;
+import org.glowroot.agent.config.SystemPropertyConfig;
 import org.glowroot.agent.live.LiveJvmServiceImpl;
 import org.glowroot.common.util.SystemProperties;
 import org.glowroot.wire.api.model.CollectorServiceOuterClass.Environment;
@@ -47,7 +47,7 @@ public class EnvironmentCreator {
 
     private EnvironmentCreator() {}
 
-    public static Environment create(String glowrootVersion, JvmConfig jvmConfig) {
+    public static Environment create(String glowrootVersion, SystemPropertyConfig jvmConfig) {
         HostInfo hostInfo = createHostInfo();
         RuntimeMXBean runtimeMXBean = ManagementFactory.getRuntimeMXBean();
         ProcessInfo processInfo = createProcessInfo(runtimeMXBean);
@@ -88,7 +88,7 @@ public class EnvironmentCreator {
         return processInfo.build();
     }
 
-    private static JavaInfo createJavaInfo(String glowrootVersion, JvmConfig jvmConfig,
+    private static JavaInfo createJavaInfo(String glowrootVersion, SystemPropertyConfig jvmConfig,
             RuntimeMXBean runtimeMXBean) {
         String jvm = "";
         String javaVmName = StandardSystemProperty.JAVA_VM_NAME.value();
diff --git a/agent/core/src/main/java/org/glowroot/agent/init/NonEmbeddedGlowrootAgentInit.java b/agent/core/src/main/java/org/glowroot/agent/init/NonEmbeddedGlowrootAgentInit.java
index 8d514b214d..e7e82078c3 100644
--- a/agent/core/src/main/java/org/glowroot/agent/init/NonEmbeddedGlowrootAgentInit.java
+++ b/agent/core/src/main/java/org/glowroot/agent/init/NonEmbeddedGlowrootAgentInit.java
@@ -143,7 +143,8 @@ public class NonEmbeddedGlowrootAgentInit implements GlowrootAgentInit {
                 }
                 collectorProxy.setInstance(collector);
                 collector.init(confDir, sharedConfDir,
-                        EnvironmentCreator.create(glowrootVersion, configService.getJvmConfig()),
+                        EnvironmentCreator.create(glowrootVersion,
+                                configService.getSystemPropertyConfig()),
                         configService.getAgentConfig(), agentConfigUpdater);
             }
         };
diff --git a/agent/core/src/main/java/org/glowroot/agent/live/LiveJvmServiceImpl.java b/agent/core/src/main/java/org/glowroot/agent/live/LiveJvmServiceImpl.java
index 006b69307a..2ebe6e48f9 100644
--- a/agent/core/src/main/java/org/glowroot/agent/live/LiveJvmServiceImpl.java
+++ b/agent/core/src/main/java/org/glowroot/agent/live/LiveJvmServiceImpl.java
@@ -274,7 +274,8 @@ public class LiveJvmServiceImpl implements LiveJvmService {
     public Map<String, String> getSystemProperties(String agentId) throws Exception {
         Map<String, String> systemProperties =
                 ManagementFactory.getRuntimeMXBean().getSystemProperties();
-        List<String> maskSystemProperties = configService.getJvmConfig().maskSystemProperties();
+        List<String> maskSystemProperties =
+                configService.getSystemPropertyConfig().maskSystemProperties();
         return SystemProperties.maskSystemProperties(systemProperties, maskSystemProperties);
     }
 
diff --git a/agent/core/src/test/java/org/glowroot/agent/impl/ConfigServiceImplDefensiveCheckTest.java b/agent/core/src/test/java/org/glowroot/agent/impl/ConfigServiceImplDefensiveCheckTest.java
index 94570dd984..26ce4478ad 100644
--- a/agent/core/src/test/java/org/glowroot/agent/impl/ConfigServiceImplDefensiveCheckTest.java
+++ b/agent/core/src/test/java/org/glowroot/agent/impl/ConfigServiceImplDefensiveCheckTest.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2015-2016 the original author or authors.
+ * Copyright 2015-2018 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -19,16 +19,11 @@ import com.google.common.collect.ImmutableList;
 import org.junit.Before;
 import org.junit.Test;
 
-import org.glowroot.agent.config.AdvancedConfig;
 import org.glowroot.agent.config.ConfigService;
-import org.glowroot.agent.config.ImmutableAdvancedConfig;
-import org.glowroot.agent.config.ImmutableTransactionConfig;
 import org.glowroot.agent.config.PluginDescriptor;
-import org.glowroot.agent.config.TransactionConfig;
 
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.when;
 
 public class ConfigServiceImplDefensiveCheckTest {
 
@@ -37,11 +32,6 @@ public class ConfigServiceImplDefensiveCheckTest {
     @Before
     public void beforeEachTest() {
         ConfigService configService = mock(ConfigService.class);
-        TransactionConfig transactionConfig = ImmutableTransactionConfig.builder().build();
-        AdvancedConfig advancedConfig = ImmutableAdvancedConfig.builder().build();
-        when(configService.getTransactionConfig()).thenReturn(transactionConfig);
-        when(configService.getAdvancedConfig()).thenReturn(advancedConfig);
-
         this.configService = ConfigServiceImpl.create(configService,
                 ImmutableList.<PluginDescriptor>of(), "dummy");
     }
diff --git a/agent/embedded/src/main/java/org/glowroot/agent/embedded/init/EmbeddedAgentModule.java b/agent/embedded/src/main/java/org/glowroot/agent/embedded/init/EmbeddedAgentModule.java
index 3c17c4c3e1..a23ac8f14e 100644
--- a/agent/embedded/src/main/java/org/glowroot/agent/embedded/init/EmbeddedAgentModule.java
+++ b/agent/embedded/src/main/java/org/glowroot/agent/embedded/init/EmbeddedAgentModule.java
@@ -197,7 +197,7 @@ class EmbeddedAgentModule {
                         // embedded collector does nothing with agent config parameter
                         collector.init(confDir, sharedConfDir,
                                 EnvironmentCreator.create(glowrootVersion,
-                                        agentModule.getConfigService().getJvmConfig()),
+                                        agentModule.getConfigService().getSystemPropertyConfig()),
                                 AgentConfig.getDefaultInstance(), new AgentConfigUpdater() {
                                     @Override
                                     public void update(AgentConfig agentConfig) {}
diff --git a/agent/embedded/src/main/java/org/glowroot/agent/embedded/repo/ConfigRepositoryImpl.java b/agent/embedded/src/main/java/org/glowroot/agent/embedded/repo/ConfigRepositoryImpl.java
index 90a456c038..96a9dd9e04 100644
--- a/agent/embedded/src/main/java/org/glowroot/agent/embedded/repo/ConfigRepositoryImpl.java
+++ b/agent/embedded/src/main/java/org/glowroot/agent/embedded/repo/ConfigRepositoryImpl.java
@@ -31,12 +31,13 @@ import org.glowroot.agent.config.AlertConfig;
 import org.glowroot.agent.config.ConfigService;
 import org.glowroot.agent.config.GaugeConfig;
 import org.glowroot.agent.config.InstrumentationConfig;
-import org.glowroot.agent.config.JvmConfig;
 import org.glowroot.agent.config.PluginCache;
 import org.glowroot.agent.config.PluginConfig;
 import org.glowroot.agent.config.PluginDescriptor;
-import org.glowroot.agent.config.TransactionConfig;
-import org.glowroot.agent.config.UiConfig;
+import org.glowroot.agent.config.SlowTraceConfig;
+import org.glowroot.agent.config.SystemPropertyConfig;
+import org.glowroot.agent.config.ThreadProfileConfig;
+import org.glowroot.agent.config.UiDefaultsConfig;
 import org.glowroot.agent.config.UserRecordingConfig;
 import org.glowroot.agent.embedded.config.AdminConfigService;
 import org.glowroot.common.util.OnlyUsedByTests;
@@ -101,18 +102,23 @@ public class ConfigRepositoryImpl implements ConfigRepository {
     }
 
     @Override
-    public AgentConfig.TransactionConfig getTransactionConfig(String agentId) {
-        return configService.getTransactionConfig().toProto();
+    public AgentConfig.SlowTraceConfig getSlowTraceConfig(String agentId) {
+        return configService.getSlowTraceConfig().toProto();
     }
 
     @Override
-    public AgentConfig.JvmConfig getJvmConfig(String agentRollupId) {
-        return configService.getJvmConfig().toProto();
+    public AgentConfig.ThreadProfileConfig getThreadProfileConfig(String agentId) {
+        return configService.getThreadProfileConfig().toProto();
     }
 
     @Override
-    public AgentConfig.UiConfig getUiConfig(String agentRollupId) {
-        return configService.getUiConfig().toProto();
+    public AgentConfig.SystemPropertyConfig getSystemPropertyConfig(String agentRollupId) {
+        return configService.getSystemPropertyConfig().toProto();
+    }
+
+    @Override
+    public AgentConfig.UiDefaultsConfig getUiDefaultsConfig(String agentRollupId) {
+        return configService.getUiDefaultsConfig().toProto();
     }
 
     @Override
@@ -340,14 +346,25 @@ public class ConfigRepositoryImpl implements ConfigRepository {
     }
 
     @Override
-    public void updateTransactionConfig(String agentId, AgentConfig.TransactionConfig protoConfig,
+    public void updateSlowTraceConfig(String agentId, AgentConfig.SlowTraceConfig protoConfig,
             String priorVersion) throws Exception {
-        TransactionConfig config = TransactionConfig.create(protoConfig);
+        SlowTraceConfig config = SlowTraceConfig.create(protoConfig);
+        synchronized (writeLock) {
+            String currVersion = Versions.getVersion(configService.getSlowTraceConfig().toProto());
+            checkVersionsEqual(currVersion, priorVersion);
+            configService.updateSlowTraceConfig(config);
+        }
+    }
+
+    @Override
+    public void updateThreadProfileConfig(String agentId,
+            AgentConfig.ThreadProfileConfig protoConfig, String priorVersion) throws Exception {
+        ThreadProfileConfig config = ThreadProfileConfig.create(protoConfig);
         synchronized (writeLock) {
             String currVersion =
-                    Versions.getVersion(configService.getTransactionConfig().toProto());
+                    Versions.getVersion(configService.getThreadProfileConfig().toProto());
             checkVersionsEqual(currVersion, priorVersion);
-            configService.updateTransactionConfig(config);
+            configService.updateThreadProfileConfig(config);
         }
     }
 
@@ -416,14 +433,14 @@ public class ConfigRepositoryImpl implements ConfigRepository {
     }
 
     @Override
-    public void updateJvmConfig(String agentId, AgentConfig.JvmConfig protoConfig,
-            String priorVersion) throws Exception {
-        JvmConfig config = JvmConfig.create(protoConfig);
+    public void updateSystemPropertyConfig(String agentId,
+            AgentConfig.SystemPropertyConfig protoConfig, String priorVersion) throws Exception {
+        SystemPropertyConfig config = SystemPropertyConfig.create(protoConfig);
         synchronized (writeLock) {
             String currVersion =
-                    Versions.getVersion(configService.getJvmConfig().toProto());
+                    Versions.getVersion(configService.getSystemPropertyConfig().toProto());
             checkVersionsEqual(currVersion, priorVersion);
-            configService.updateJvmConfig(config);
+            configService.updateSystemPropertyConfig(config);
         }
     }
 
@@ -505,13 +522,13 @@ public class ConfigRepositoryImpl implements ConfigRepository {
     }
 
     @Override
-    public void updateUiConfig(String agentId, AgentConfig.UiConfig protoConfig,
+    public void updateUiDefaultsConfig(String agentId, AgentConfig.UiDefaultsConfig protoConfig,
             String priorVersion) throws Exception {
-        UiConfig config = UiConfig.create(protoConfig);
+        UiDefaultsConfig config = UiDefaultsConfig.create(protoConfig);
         synchronized (writeLock) {
-            String currVersion = Versions.getVersion(configService.getUiConfig().toProto());
+            String currVersion = Versions.getVersion(configService.getUiDefaultsConfig().toProto());
             checkVersionsEqual(currVersion, priorVersion);
-            configService.updateUiConfig(config);
+            configService.updateUiDefaultsConfig(config);
         }
     }
 
diff --git a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ConfiguredInstrumentationIT.java b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ConfiguredInstrumentationIT.java
index a27b31b8fd..b87b8f9efe 100644
--- a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ConfiguredInstrumentationIT.java
+++ b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ConfiguredInstrumentationIT.java
@@ -33,7 +33,6 @@ import org.glowroot.agent.it.harness.impl.LocalContainer;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.InstrumentationConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.InstrumentationConfig.CaptureKind;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.InstrumentationConfig.MethodModifier;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
 import org.glowroot.wire.api.model.TraceOuterClass.Trace;
 
 import static java.util.concurrent.TimeUnit.SECONDS;
@@ -78,10 +77,7 @@ public class ConfiguredInstrumentationIT {
     @Test
     public void shouldExecute1() throws Exception {
         // given
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(ProtoOptional.of(Integer.MAX_VALUE))
-                        .build());
+        container.getConfigService().setSlowTraceThresholdMillis(Integer.MAX_VALUE);
 
         // when
         Trace trace = container.execute(ShouldExecute1.class);
diff --git a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ErrorCaptureIT.java b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ErrorCaptureIT.java
index 5439ee2a9b..ce9abf4f69 100644
--- a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ErrorCaptureIT.java
+++ b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ErrorCaptureIT.java
@@ -32,7 +32,6 @@ import org.glowroot.agent.tests.app.LevelOne;
 import org.glowroot.agent.tests.app.LogCause;
 import org.glowroot.agent.tests.app.LogError;
 import org.glowroot.agent.tests.plugin.LogCauseAspect.LogCauseAdvice;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
 import org.glowroot.wire.api.model.Proto;
 import org.glowroot.wire.api.model.TraceOuterClass.Trace;
 
@@ -60,10 +59,7 @@ public class ErrorCaptureIT {
     @Test
     public void shouldCaptureError() throws Exception {
         // given
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(ProtoOptional.of(10000))
-                        .build());
+        container.getConfigService().setSlowTraceThresholdMillis(Integer.MAX_VALUE);
 
         // when
         Trace trace = container.execute(ShouldCaptureError.class);
diff --git a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/PartialTraceIT.java b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/PartialTraceIT.java
index 4049712923..169436a88d 100644
--- a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/PartialTraceIT.java
+++ b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/PartialTraceIT.java
@@ -32,8 +32,6 @@ import org.glowroot.agent.it.harness.Containers;
 import org.glowroot.agent.it.harness.TransactionMarker;
 import org.glowroot.agent.tests.app.Pause;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.AdvancedConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
-import org.glowroot.wire.api.model.Proto.OptionalInt32;
 import org.glowroot.wire.api.model.TraceOuterClass.Trace;
 
 import static java.util.concurrent.TimeUnit.MILLISECONDS;
@@ -72,11 +70,7 @@ public class PartialTraceIT {
     private Trace shouldReadPartialTrace(final Class<? extends AppUnderTest> appUnderTest,
             boolean stuckOnNonRoot) throws Exception {
         // given
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(OptionalInt32.newBuilder().setValue(0))
-                        .setProfilingIntervalMillis(ProtoOptional.of(10))
-                        .build());
+        container.getConfigService().setThreadProfileIntervalMillis(10);
         container.getConfigService().updateAdvancedConfig(
                 AdvancedConfig.newBuilder()
                         .setImmediatePartialStoreThresholdSeconds(ProtoOptional.of(1))
diff --git a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ProfilingIT.java b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ProfilingIT.java
index 9bfaa4ed3f..9540ed949d 100644
--- a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ProfilingIT.java
+++ b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ProfilingIT.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2011-2016 the original author or authors.
+ * Copyright 2011-2018 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -26,9 +26,7 @@ import org.glowroot.agent.it.harness.Container;
 import org.glowroot.agent.it.harness.Containers;
 import org.glowroot.agent.it.harness.Threads;
 import org.glowroot.agent.it.harness.TransactionMarker;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UserRecordingConfig;
-import org.glowroot.wire.api.model.Proto.OptionalInt32;
 import org.glowroot.wire.api.model.TraceOuterClass.Trace;
 
 import static org.assertj.core.api.Assertions.assertThat;
@@ -59,7 +57,7 @@ public class ProfilingIT {
     @Test
     public void shouldReadProfile() throws Exception {
         // given
-        setProfilingIntervalMillis(20);
+        container.getConfigService().setThreadProfileIntervalMillis(20);
         // when
         Trace trace = container.execute(ShouldGenerateTraceWithProfile.class);
         // then
@@ -70,7 +68,7 @@ public class ProfilingIT {
     @Test
     public void shouldNotReadProfile() throws Exception {
         // given
-        setProfilingIntervalMillis(0);
+        container.getConfigService().setThreadProfileIntervalMillis(0);
         // when
         Trace trace = container.execute(ShouldGenerateTraceWithProfile.class);
         // then
@@ -85,7 +83,7 @@ public class ProfilingIT {
                 .setProfilingIntervalMillis(ProtoOptional.of(20))
                 .build();
         container.getConfigService().updateUserRecordingConfig(userRecordingConfig);
-        setProfilingIntervalMillis(0);
+        container.getConfigService().setThreadProfileIntervalMillis(0);
 
         // when
         Trace trace = container.execute(ShouldGenerateTraceWithProfileForAble.class);
@@ -103,7 +101,7 @@ public class ProfilingIT {
                 .setProfilingIntervalMillis(ProtoOptional.of(20))
                 .build();
         container.getConfigService().updateUserRecordingConfig(userRecordingConfig);
-        setProfilingIntervalMillis(0);
+        container.getConfigService().setThreadProfileIntervalMillis(0);
 
         // when
         Trace trace = container.execute(ShouldGenerateTraceWithProfileForAble.class);
@@ -112,14 +110,6 @@ public class ProfilingIT {
         assertThat(trace.getHeader().getMainThreadProfileSampleCount()).isZero();
     }
 
-    private static void setProfilingIntervalMillis(int millis) throws Exception {
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(OptionalInt32.newBuilder().setValue(0))
-                        .setProfilingIntervalMillis(ProtoOptional.of(millis))
-                        .build());
-    }
-
     public static class ShouldGenerateTraceWithProfile implements AppUnderTest, TransactionMarker {
         @Override
         public void executeApp() throws InterruptedException {
diff --git a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/SetTraceStoreThresholdIT.java b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/SetTraceStoreThresholdIT.java
index f7cffb8dce..54d9545d26 100644
--- a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/SetTraceStoreThresholdIT.java
+++ b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/SetTraceStoreThresholdIT.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2015-2016 the original author or authors.
+ * Copyright 2015-2018 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -26,7 +26,6 @@ import org.glowroot.agent.it.harness.Container;
 import org.glowroot.agent.it.harness.Containers;
 import org.glowroot.agent.it.harness.TransactionMarker;
 import org.glowroot.agent.tests.app.LevelOne;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
 
 import static java.util.concurrent.TimeUnit.MILLISECONDS;
 
@@ -60,10 +59,7 @@ public class SetTraceStoreThresholdIT {
     @Test
     public void shouldReadTrace() throws Exception {
         // given
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(ProtoOptional.of(Integer.MAX_VALUE))
-                        .build());
+        container.getConfigService().setSlowTraceThresholdMillis(Integer.MAX_VALUE);
         // when
         container.execute(SetLargeAndThenSmallTraceStoreThreshold.class);
         // then
@@ -73,10 +69,7 @@ public class SetTraceStoreThresholdIT {
     @Test
     public void shouldReadTrace2() throws Exception {
         // given
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(ProtoOptional.of(Integer.MAX_VALUE))
-                        .build());
+        container.getConfigService().setSlowTraceThresholdMillis(Integer.MAX_VALUE);
         // when
         container.execute(SetSmallAndThenLargeTraceStoreThreshold.class);
         // then
diff --git a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ThreadStatsIT.java b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ThreadStatsIT.java
index 746a2f5eab..c0574bcac0 100644
--- a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ThreadStatsIT.java
+++ b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/ThreadStatsIT.java
@@ -27,8 +27,8 @@ import org.glowroot.agent.it.harness.Container;
 import org.glowroot.agent.it.harness.Containers;
 import org.glowroot.agent.it.harness.TransactionMarker;
 import org.glowroot.agent.tests.app.LevelOne;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
-import org.glowroot.wire.api.model.Proto.OptionalInt32;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.AdvancedConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.OptionalBool;
 import org.glowroot.wire.api.model.TraceOuterClass.Trace;
 
 import static org.assertj.core.api.Assertions.assertThat;
@@ -170,12 +170,9 @@ public class ThreadStatsIT {
     }
 
     private static void disableCaptureThreadStats() throws Exception {
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(OptionalInt32.newBuilder().setValue(0))
-                        .setProfilingIntervalMillis(OptionalInt32.newBuilder().setValue(1000))
-                        .setCaptureThreadStats(false)
-                        .build());
+        container.getConfigService().updateAdvancedConfig(AdvancedConfig.newBuilder()
+                .setCaptureThreadStats(OptionalBool.newBuilder().setValue(false))
+                .build());
     }
 
     public static class Normal implements AppUnderTest {
diff --git a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/TraceThreadStatsIT.java b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/TraceThreadStatsIT.java
index 59ba1ea207..13a2e22866 100644
--- a/agent/integration-tests/src/test/java/org/glowroot/agent/tests/TraceThreadStatsIT.java
+++ b/agent/integration-tests/src/test/java/org/glowroot/agent/tests/TraceThreadStatsIT.java
@@ -30,8 +30,8 @@ import org.glowroot.agent.it.harness.AppUnderTest;
 import org.glowroot.agent.it.harness.Container;
 import org.glowroot.agent.it.harness.Containers;
 import org.glowroot.agent.it.harness.TransactionMarker;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
-import org.glowroot.wire.api.model.Proto.OptionalInt32;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.AdvancedConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.OptionalBool;
 import org.glowroot.wire.api.model.TraceOuterClass.Trace;
 
 import static java.util.concurrent.TimeUnit.MILLISECONDS;
@@ -91,11 +91,9 @@ public class TraceThreadStatsIT {
     }
 
     private static void enableCaptureThreadStats() throws Exception {
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(OptionalInt32.newBuilder().setValue(0))
-                        .setCaptureThreadStats(true)
-                        .build());
+        container.getConfigService().updateAdvancedConfig(AdvancedConfig.newBuilder()
+                .setCaptureThreadStats(OptionalBool.newBuilder().setValue(true))
+                .build());
     }
 
     public static class ShouldUseCpu implements AppUnderTest, TransactionMarker {
diff --git a/agent/it-harness/src/main/java/org/glowroot/agent/it/harness/ConfigService.java b/agent/it-harness/src/main/java/org/glowroot/agent/it/harness/ConfigService.java
index 01746c4731..6a1319aa51 100644
--- a/agent/it-harness/src/main/java/org/glowroot/agent/it/harness/ConfigService.java
+++ b/agent/it-harness/src/main/java/org/glowroot/agent/it/harness/ConfigService.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2015-2016 the original author or authors.
+ * Copyright 2015-2018 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -19,12 +19,13 @@ import java.util.List;
 
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.AdvancedConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.InstrumentationConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UserRecordingConfig;
 
 public interface ConfigService {
 
-    void updateTransactionConfig(TransactionConfig config) throws Exception;
+    void setSlowTraceThresholdMillis(int slowTraceThresholdMillis) throws Exception;
+
+    void setThreadProfileIntervalMillis(int threadProfileIntervalMillis) throws Exception;
 
     void updateUserRecordingConfig(UserRecordingConfig config) throws Exception;
 
diff --git a/agent/it-harness/src/main/java/org/glowroot/agent/it/harness/impl/ConfigServiceImpl.java b/agent/it-harness/src/main/java/org/glowroot/agent/it/harness/impl/ConfigServiceImpl.java
index 77cc08c240..2b5210f73a 100644
--- a/agent/it-harness/src/main/java/org/glowroot/agent/it/harness/impl/ConfigServiceImpl.java
+++ b/agent/it-harness/src/main/java/org/glowroot/agent/it/harness/impl/ConfigServiceImpl.java
@@ -31,7 +31,8 @@ import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.Instrumenta
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.MBeanAttribute;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.PluginConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.PluginProperty;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SlowTraceConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.ThreadProfileConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UserRecordingConfig;
 import org.glowroot.wire.api.model.Proto.OptionalInt32;
 
@@ -46,10 +47,22 @@ class ConfigServiceImpl implements ConfigService {
     }
 
     @Override
-    public void updateTransactionConfig(TransactionConfig config) throws Exception {
+    public void setSlowTraceThresholdMillis(int slowTraceThresholdMillis) throws Exception {
         AgentConfig agentConfig = server.getAgentConfig();
         server.updateAgentConfig(agentConfig.toBuilder()
-                .setTransactionConfig(config)
+                .setSlowTraceConfig(SlowTraceConfig.newBuilder()
+                        .setSlowThresholdMillis(OptionalInt32.newBuilder()
+                                .setValue(slowTraceThresholdMillis)))
+                .build());
+    }
+
+    @Override
+    public void setThreadProfileIntervalMillis(int threadProfileIntervalMillis) throws Exception {
+        AgentConfig agentConfig = server.getAgentConfig();
+        server.updateAgentConfig(agentConfig.toBuilder()
+                .setThreadProfileConfig(ThreadProfileConfig.newBuilder()
+                        .setProfilingIntervalMillis(OptionalInt32.newBuilder()
+                                .setValue(threadProfileIntervalMillis)))
                 .build());
     }
 
@@ -112,14 +125,15 @@ class ConfigServiceImpl implements ConfigService {
     void setSlowThresholdToZero() throws Exception {
         AgentConfig agentConfig = server.getAgentConfig();
         server.updateAgentConfig(agentConfig.toBuilder()
-                .setTransactionConfig(agentConfig.getTransactionConfig().toBuilder()
+                .setSlowTraceConfig(agentConfig.getSlowTraceConfig().toBuilder()
                         .setSlowThresholdMillis(of(0)))
                 .build());
     }
 
     void resetConfig() throws Exception {
         AgentConfig.Builder builder = AgentConfig.newBuilder()
-                .setTransactionConfig(getDefaultTransactionConfig())
+                .setSlowTraceConfig(getDefaultSlowTraceConfig())
+                .setThreadProfileConfig(getDefaultThreadProfileConfig())
                 .setAdvancedConfig(getDefaultAdvancedConfig());
         builder.addAllGaugeConfig(getDefaultGaugeConfigs());
         for (PluginConfig pluginConfig : server.getAgentConfig().getPluginConfigList()) {
@@ -190,12 +204,17 @@ class ConfigServiceImpl implements ConfigService {
                 .build());
     }
 
-    private static TransactionConfig getDefaultTransactionConfig() {
+    private static SlowTraceConfig getDefaultSlowTraceConfig() {
         // TODO this needs to be kept in sync with default values
-        return TransactionConfig.newBuilder()
-                .setProfilingIntervalMillis(of(1000))
+        return SlowTraceConfig.newBuilder()
                 .setSlowThresholdMillis(of(0))
-                .setCaptureThreadStats(true)
+                .build();
+    }
+
+    private static ThreadProfileConfig getDefaultThreadProfileConfig() {
+        // TODO this needs to be kept in sync with default values
+        return ThreadProfileConfig.newBuilder()
+                .setProfilingIntervalMillis(of(1000))
                 .build();
     }
 
diff --git a/agent/plugins/executor-plugin/src/test/java/org/glowroot/agent/plugin/executor/ExecutorIT.java b/agent/plugins/executor-plugin/src/test/java/org/glowroot/agent/plugin/executor/ExecutorIT.java
index d41b36f07b..c910da0a24 100644
--- a/agent/plugins/executor-plugin/src/test/java/org/glowroot/agent/plugin/executor/ExecutorIT.java
+++ b/agent/plugins/executor-plugin/src/test/java/org/glowroot/agent/plugin/executor/ExecutorIT.java
@@ -37,8 +37,6 @@ import org.glowroot.agent.it.harness.Container;
 import org.glowroot.agent.it.harness.Containers;
 import org.glowroot.agent.it.harness.TraceEntryMarker;
 import org.glowroot.agent.it.harness.TransactionMarker;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
-import org.glowroot.wire.api.model.Proto.OptionalInt32;
 import org.glowroot.wire.api.model.TraceOuterClass.Trace;
 
 import static java.util.concurrent.TimeUnit.MILLISECONDS;
@@ -155,11 +153,7 @@ public class ExecutorIT {
     @Test
     public void shouldCaptureInvokeAll() throws Exception {
         // given
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(OptionalInt32.newBuilder().setValue(0))
-                        .setProfilingIntervalMillis(OptionalInt32.newBuilder().setValue(20).build())
-                        .build());
+        container.getConfigService().setThreadProfileIntervalMillis(20);
         // when
         Trace trace = container.execute(DoInvokeAll.class);
         // then
@@ -169,11 +163,7 @@ public class ExecutorIT {
     @Test
     public void shouldCaptureInvokeAllWithTimeout() throws Exception {
         // given
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(OptionalInt32.newBuilder().setValue(0))
-                        .setProfilingIntervalMillis(OptionalInt32.newBuilder().setValue(20).build())
-                        .build());
+        container.getConfigService().setThreadProfileIntervalMillis(20);
         // when
         Trace trace = container.execute(DoInvokeAllWithTimeout.class);
         // then
@@ -183,11 +173,7 @@ public class ExecutorIT {
     @Test
     public void shouldCaptureInvokeAny() throws Exception {
         // given
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(OptionalInt32.newBuilder().setValue(0))
-                        .setProfilingIntervalMillis(OptionalInt32.newBuilder().setValue(20).build())
-                        .build());
+        container.getConfigService().setThreadProfileIntervalMillis(20);
         // when
         Trace trace = container.execute(DoInvokeAny.class);
         // then
@@ -197,11 +183,7 @@ public class ExecutorIT {
     @Test
     public void shouldCaptureInvokeAnyWithTimeout() throws Exception {
         // given
-        container.getConfigService().updateTransactionConfig(
-                TransactionConfig.newBuilder()
-                        .setSlowThresholdMillis(OptionalInt32.newBuilder().setValue(0))
-                        .setProfilingIntervalMillis(OptionalInt32.newBuilder().setValue(20).build())
-                        .build());
+        container.getConfigService().setThreadProfileIntervalMillis(20);
         // when
         Trace trace = container.execute(DoInvokeAnyWithTimeout.class);
         // then
diff --git a/central/src/main/java/org/glowroot/central/repo/AgentConfigDao.java b/central/src/main/java/org/glowroot/central/repo/AgentConfigDao.java
index 07a319457e..f97d20d53d 100644
--- a/central/src/main/java/org/glowroot/central/repo/AgentConfigDao.java
+++ b/central/src/main/java/org/glowroot/central/repo/AgentConfigDao.java
@@ -169,7 +169,7 @@ public class AgentConfigDao {
                 boundStatement.setString(i++, loopAgentRollupId);
                 AdvancedConfig advancedConfig = updatedAgentConfig.getAdvancedConfig();
                 boundStatement.setBytes(i++, ByteBuffer.wrap(AgentConfig.newBuilder()
-                        .setUiConfig(updatedAgentConfig.getUiConfig())
+                        .setUiDefaultsConfig(updatedAgentConfig.getUiDefaultsConfig())
                         .setAdvancedConfig(AdvancedConfig.newBuilder()
                                 .setMaxQueryAggregates(advancedConfig.getMaxQueryAggregates())
                                 .setMaxServiceCallAggregates(
diff --git a/central/src/main/java/org/glowroot/central/repo/ConfigRepositoryImpl.java b/central/src/main/java/org/glowroot/central/repo/ConfigRepositoryImpl.java
index 4e2fa58087..355f9e25b1 100644
--- a/central/src/main/java/org/glowroot/central/repo/ConfigRepositoryImpl.java
+++ b/central/src/main/java/org/glowroot/central/repo/ConfigRepositoryImpl.java
@@ -69,13 +69,14 @@ import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.AlertConfig
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.GaugeConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.GeneralConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.InstrumentationConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.JvmConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.PluginConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.PluginProperty;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.PluginProperty.Value.ValCase;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SlowTraceConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SyntheticMonitorConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SystemPropertyConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.ThreadProfileConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiDefaultsConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UserRecordingConfig;
 
 import static com.google.common.base.Preconditions.checkState;
@@ -135,31 +136,40 @@ public class ConfigRepositoryImpl implements ConfigRepository {
     }
 
     @Override
-    public TransactionConfig getTransactionConfig(String agentId) throws Exception {
+    public SlowTraceConfig getSlowTraceConfig(String agentId) throws Exception {
         AgentConfig agentConfig = agentConfigDao.read(agentId);
         if (agentConfig == null) {
             throw new AgentConfigNotFoundException(agentId);
         }
-        return agentConfig.getTransactionConfig();
+        return agentConfig.getSlowTraceConfig();
     }
 
     @Override
-    public JvmConfig getJvmConfig(String agentId) throws Exception {
+    public ThreadProfileConfig getThreadProfileConfig(String agentId) throws Exception {
         AgentConfig agentConfig = agentConfigDao.read(agentId);
         if (agentConfig == null) {
             throw new AgentConfigNotFoundException(agentId);
         }
-        return agentConfig.getJvmConfig();
+        return agentConfig.getThreadProfileConfig();
+    }
+
+    @Override
+    public SystemPropertyConfig getSystemPropertyConfig(String agentId) throws Exception {
+        AgentConfig agentConfig = agentConfigDao.read(agentId);
+        if (agentConfig == null) {
+            throw new AgentConfigNotFoundException(agentId);
+        }
+        return agentConfig.getSystemPropertyConfig();
     }
 
     // central supports ui config on rollups
     @Override
-    public UiConfig getUiConfig(String agentRollupId) throws Exception {
+    public UiDefaultsConfig getUiDefaultsConfig(String agentRollupId) throws Exception {
         AgentConfig agentConfig = agentConfigDao.read(agentRollupId);
         if (agentConfig == null) {
             throw new AgentConfigNotFoundException(agentRollupId);
         }
-        return agentConfig.getUiConfig();
+        return agentConfig.getUiDefaultsConfig();
     }
 
     @Override
@@ -449,17 +459,35 @@ public class ConfigRepositoryImpl implements ConfigRepository {
     }
 
     @Override
-    public void updateTransactionConfig(String agentId, TransactionConfig config,
+    public void updateSlowTraceConfig(String agentId, SlowTraceConfig config,
+            String priorVersion) throws Exception {
+        agentConfigDao.update(agentId, new AgentConfigUpdater() {
+            @Override
+            public AgentConfig updateAgentConfig(AgentConfig agentConfig) throws Exception {
+                String existingVersion = Versions.getVersion(agentConfig.getSlowTraceConfig());
+                if (!priorVersion.equals(existingVersion)) {
+                    throw new OptimisticLockException();
+                }
+                return agentConfig.toBuilder()
+                        .setSlowTraceConfig(config)
+                        .build();
+            }
+        });
+        notifyAgentConfigListeners(agentId);
+    }
+
+    @Override
+    public void updateThreadProfileConfig(String agentId, ThreadProfileConfig config,
             String priorVersion) throws Exception {
         agentConfigDao.update(agentId, new AgentConfigUpdater() {
             @Override
             public AgentConfig updateAgentConfig(AgentConfig agentConfig) throws Exception {
-                String existingVersion = Versions.getVersion(agentConfig.getTransactionConfig());
+                String existingVersion = Versions.getVersion(agentConfig.getThreadProfileConfig());
                 if (!priorVersion.equals(existingVersion)) {
                     throw new OptimisticLockException();
                 }
                 return agentConfig.toBuilder()
-                        .setTransactionConfig(config)
+                        .setThreadProfileConfig(config)
                         .build();
             }
         });
@@ -550,17 +578,17 @@ public class ConfigRepositoryImpl implements ConfigRepository {
     }
 
     @Override
-    public void updateJvmConfig(String agentId, JvmConfig config, String priorVersion)
-            throws Exception {
+    public void updateSystemPropertyConfig(String agentId, SystemPropertyConfig config,
+            String priorVersion) throws Exception {
         agentConfigDao.update(agentId, new AgentConfigUpdater() {
             @Override
             public AgentConfig updateAgentConfig(AgentConfig agentConfig) throws Exception {
-                String existingVersion = Versions.getVersion(agentConfig.getJvmConfig());
+                String existingVersion = Versions.getVersion(agentConfig.getSystemPropertyConfig());
                 if (!priorVersion.equals(existingVersion)) {
                     throw new OptimisticLockException();
                 }
                 return agentConfig.toBuilder()
-                        .setJvmConfig(config)
+                        .setSystemPropertyConfig(config)
                         .build();
             }
         });
@@ -751,17 +779,17 @@ public class ConfigRepositoryImpl implements ConfigRepository {
 
     // central supports ui config on rollups
     @Override
-    public void updateUiConfig(String agentRollupId, UiConfig config, String priorVersion)
-            throws Exception {
+    public void updateUiDefaultsConfig(String agentRollupId, UiDefaultsConfig config,
+            String priorVersion) throws Exception {
         agentConfigDao.update(agentRollupId, new AgentConfigUpdater() {
             @Override
             public AgentConfig updateAgentConfig(AgentConfig agentConfig) throws Exception {
-                String existingVersion = Versions.getVersion(agentConfig.getUiConfig());
+                String existingVersion = Versions.getVersion(agentConfig.getUiDefaultsConfig());
                 if (!priorVersion.equals(existingVersion)) {
                     throw new OptimisticLockException();
                 }
                 return agentConfig.toBuilder()
-                        .setUiConfig(config)
+                        .setUiDefaultsConfig(config)
                         .build();
             }
         });
diff --git a/central/src/main/java/org/glowroot/central/repo/SchemaUpgrade.java b/central/src/main/java/org/glowroot/central/repo/SchemaUpgrade.java
index 874d5ab38b..847b28b4ef 100644
--- a/central/src/main/java/org/glowroot/central/repo/SchemaUpgrade.java
+++ b/central/src/main/java/org/glowroot/central/repo/SchemaUpgrade.java
@@ -83,7 +83,7 @@ import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.AlertConfig
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.AlertConfig.AlertCondition.SyntheticMonitorCondition;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.GeneralConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.OldAlertConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiDefaultsConfig;
 import org.glowroot.wire.api.model.Proto.OptionalInt32;
 
 import static com.google.common.base.Preconditions.checkNotNull;
@@ -870,9 +870,9 @@ public class SchemaUpgrade {
         }
 
         AgentConfig defaultAgentConfig = AgentConfig.newBuilder()
-                .setUiConfig(UiConfig.newBuilder()
-                        .setDefaultTransactionType(ConfigDefaults.UI_DEFAULT_TRANSACTION_TYPE)
-                        .addAllDefaultPercentile(ConfigDefaults.UI_DEFAULT_PERCENTILES))
+                .setUiDefaultsConfig(UiDefaultsConfig.newBuilder()
+                        .setDefaultTransactionType(ConfigDefaults.UI_DEFAULTS_TRANSACTION_TYPE)
+                        .addAllDefaultPercentile(ConfigDefaults.UI_DEFAULTS_PERCENTILES))
                 .setAdvancedConfig(AdvancedConfig.newBuilder()
                         .setMaxQueryAggregates(OptionalInt32.newBuilder()
                                 .setValue(ConfigDefaults.ADVANCED_MAX_QUERY_AGGREGATES))
@@ -909,7 +909,7 @@ public class SchemaUpgrade {
                     AgentConfig agentConfig = AgentConfig.parseFrom(checkNotNull(row.getBytes(0)));
                     AdvancedConfig advancedConfig = agentConfig.getAdvancedConfig();
                     AgentConfig updatedAgentConfig = AgentConfig.newBuilder()
-                            .setUiConfig(agentConfig.getUiConfig())
+                            .setUiDefaultsConfig(agentConfig.getUiDefaultsConfig())
                             .setAdvancedConfig(AdvancedConfig.newBuilder()
                                     .setMaxQueryAggregates(advancedConfig.getMaxQueryAggregates())
                                     .setMaxServiceCallAggregates(
@@ -1132,8 +1132,8 @@ public class SchemaUpgrade {
                 continue;
             }
             AgentConfig agentConfig = oldAgentConfig.toBuilder()
-                    .setUiConfig(oldAgentConfig.getUiConfig().toBuilder()
-                            .addAllDefaultGaugeName(ConfigDefaults.UI_DEFAULT_GAUGE_NAMES))
+                    .setUiDefaultsConfig(oldAgentConfig.getUiDefaultsConfig().toBuilder()
+                            .addAllDefaultGaugeName(ConfigDefaults.UI_DEFAULTS_GAUGE_NAMES))
                     .build();
             BoundStatement boundStatement = insertPS.bind();
             int i = 0;
diff --git a/central/src/test/java/org/glowroot/central/repo/ConfigDaoIT.java b/central/src/test/java/org/glowroot/central/repo/ConfigDaoIT.java
index ab28cd7c11..732ad8241a 100644
--- a/central/src/test/java/org/glowroot/central/repo/ConfigDaoIT.java
+++ b/central/src/test/java/org/glowroot/central/repo/ConfigDaoIT.java
@@ -24,7 +24,7 @@ import org.junit.Test;
 import org.glowroot.central.util.ClusterManager;
 import org.glowroot.central.util.Session;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SlowTraceConfig;
 import org.glowroot.wire.api.model.Proto.OptionalInt32;
 
 import static org.assertj.core.api.Assertions.assertThat;
@@ -76,7 +76,7 @@ public class ConfigDaoIT {
         AgentConfig agentConfig = AgentConfig.getDefaultInstance();
         agentConfigDao.store("a", agentConfig);
         agentConfigDao.store("a", AgentConfig.newBuilder()
-                .setTransactionConfig(TransactionConfig.newBuilder()
+                .setSlowTraceConfig(SlowTraceConfig.newBuilder()
                         .setSlowThresholdMillis(OptionalInt32.newBuilder()
                                 .setValue(1234)))
                 .build());
diff --git a/central/src/test/java/org/glowroot/central/repo/ConfigRepositoryIT.java b/central/src/test/java/org/glowroot/central/repo/ConfigRepositoryIT.java
index ad71154262..51a875834e 100644
--- a/central/src/test/java/org/glowroot/central/repo/ConfigRepositoryIT.java
+++ b/central/src/test/java/org/glowroot/central/repo/ConfigRepositoryIT.java
@@ -54,10 +54,12 @@ import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.GaugeConfig
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.InstrumentationConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.InstrumentationConfig.CaptureKind;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.InstrumentationConfig.MethodModifier;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.JvmConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.MBeanAttribute;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.OptionalBool;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SlowTraceConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SystemPropertyConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.ThreadProfileConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiDefaultsConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UserRecordingConfig;
 import org.glowroot.wire.api.model.Proto.OptionalInt32;
 
@@ -105,21 +107,38 @@ public class ConfigRepositoryIT {
     }
 
     @Test
-    public void shouldUpdateTransactionConfig() throws Exception {
+    public void shouldUpdateSlowTraceConfig() throws Exception {
         // given
         String agentId = UUID.randomUUID().toString();
         agentConfigDao.store(agentId, AgentConfig.getDefaultInstance());
-        TransactionConfig config = configRepository.getTransactionConfig(agentId);
-        TransactionConfig updatedConfig = TransactionConfig.newBuilder()
+        SlowTraceConfig config = configRepository.getSlowTraceConfig(agentId);
+        SlowTraceConfig updatedConfig = SlowTraceConfig.newBuilder()
                 .setSlowThresholdMillis(OptionalInt32.newBuilder().setValue(1234))
+                .build();
+
+        // when
+        configRepository.updateSlowTraceConfig(agentId, updatedConfig,
+                Versions.getVersion(config));
+        config = configRepository.getSlowTraceConfig(agentId);
+
+        // then
+        assertThat(config).isEqualTo(updatedConfig);
+    }
+
+    @Test
+    public void shouldUpdateThreadProfileConfig() throws Exception {
+        // given
+        String agentId = UUID.randomUUID().toString();
+        agentConfigDao.store(agentId, AgentConfig.getDefaultInstance());
+        ThreadProfileConfig config = configRepository.getThreadProfileConfig(agentId);
+        ThreadProfileConfig updatedConfig = ThreadProfileConfig.newBuilder()
                 .setProfilingIntervalMillis(OptionalInt32.newBuilder().setValue(2345))
-                .setCaptureThreadStats(true)
                 .build();
 
         // when
-        configRepository.updateTransactionConfig(agentId, updatedConfig,
+        configRepository.updateThreadProfileConfig(agentId, updatedConfig,
                 Versions.getVersion(config));
-        config = configRepository.getTransactionConfig(agentId);
+        config = configRepository.getThreadProfileConfig(agentId);
 
         // then
         assertThat(config).isEqualTo(updatedConfig);
@@ -130,17 +149,17 @@ public class ConfigRepositoryIT {
         // given
         String agentId = UUID.randomUUID().toString();
         agentConfigDao.store(agentId, AgentConfig.getDefaultInstance());
-        JvmConfig config = configRepository.getJvmConfig(agentId);
-        JvmConfig updatedConfig = JvmConfig.newBuilder()
+        SystemPropertyConfig config = configRepository.getSystemPropertyConfig(agentId);
+        SystemPropertyConfig updatedConfig = SystemPropertyConfig.newBuilder()
                 .addMaskSystemProperty("x")
                 .addMaskSystemProperty("y")
                 .addMaskSystemProperty("z")
                 .build();
 
         // when
-        configRepository.updateJvmConfig(agentId, updatedConfig,
+        configRepository.updateSystemPropertyConfig(agentId, updatedConfig,
                 Versions.getVersion(config));
-        config = configRepository.getJvmConfig(agentId);
+        config = configRepository.getSystemPropertyConfig(agentId);
 
         // then
         assertThat(config).isEqualTo(updatedConfig);
@@ -151,8 +170,8 @@ public class ConfigRepositoryIT {
         // given
         String agentId = UUID.randomUUID().toString();
         agentConfigDao.store(agentId, AgentConfig.getDefaultInstance());
-        UiConfig config = configRepository.getUiConfig(agentId);
-        UiConfig updatedConfig = UiConfig.newBuilder()
+        UiDefaultsConfig config = configRepository.getUiDefaultsConfig(agentId);
+        UiDefaultsConfig updatedConfig = UiDefaultsConfig.newBuilder()
                 .setDefaultTransactionType("xyz")
                 .addDefaultPercentile(99.0)
                 .addDefaultPercentile(99.9)
@@ -160,8 +179,9 @@ public class ConfigRepositoryIT {
                 .build();
 
         // when
-        configRepository.updateUiConfig(agentId, updatedConfig, Versions.getVersion(config));
-        config = configRepository.getUiConfig(agentId);
+        configRepository.updateUiDefaultsConfig(agentId, updatedConfig,
+                Versions.getVersion(config));
+        config = configRepository.getUiDefaultsConfig(agentId);
 
         // then
         assertThat(config).isEqualTo(updatedConfig);
@@ -197,6 +217,7 @@ public class ConfigRepositoryIT {
         AdvancedConfig config = configRepository.getAdvancedConfig(agentId);
         AdvancedConfig updatedConfig = AdvancedConfig.newBuilder()
                 .setWeavingTimer(true)
+                .setCaptureThreadStats(OptionalBool.newBuilder().setValue(true))
                 .setImmediatePartialStoreThresholdSeconds(OptionalInt32.newBuilder().setValue(1))
                 .setMaxTransactionAggregates(OptionalInt32.newBuilder().setValue(2))
                 .setMaxQueryAggregates(OptionalInt32.newBuilder().setValue(3))
diff --git a/common/src/main/java/org/glowroot/common/ConfigDefaults.java b/common/src/main/java/org/glowroot/common/ConfigDefaults.java
index 7b22e58e88..06706100a7 100644
--- a/common/src/main/java/org/glowroot/common/ConfigDefaults.java
+++ b/common/src/main/java/org/glowroot/common/ConfigDefaults.java
@@ -19,13 +19,13 @@ import com.google.common.collect.ImmutableList;
 
 public final class ConfigDefaults {
 
-    public static final ImmutableList<String> JVM_MASK_SYSTEM_PROPERTIES =
+    public static final ImmutableList<String> SYSTEM_PROPERTIES_MASK =
             ImmutableList.of("*password*");
 
-    public static final String UI_DEFAULT_TRANSACTION_TYPE = "Web";
-    public static final ImmutableList<Double> UI_DEFAULT_PERCENTILES =
+    public static final String UI_DEFAULTS_TRANSACTION_TYPE = "Web";
+    public static final ImmutableList<Double> UI_DEFAULTS_PERCENTILES =
             ImmutableList.of(50.0, 95.0, 99.0);
-    public static final ImmutableList<String> UI_DEFAULT_GAUGE_NAMES =
+    public static final ImmutableList<String> UI_DEFAULTS_GAUGE_NAMES =
             ImmutableList.of("java.lang:type=Memory:HeapMemoryUsage.used");
 
     public static final int ADVANCED_MAX_TRANSACTION_AGGREGATES = 500;
diff --git a/common2/src/main/java/org/glowroot/common2/repo/ConfigRepository.java b/common2/src/main/java/org/glowroot/common2/repo/ConfigRepository.java
index 7ca2ea9f73..4f2614f86b 100644
--- a/common2/src/main/java/org/glowroot/common2/repo/ConfigRepository.java
+++ b/common2/src/main/java/org/glowroot/common2/repo/ConfigRepository.java
@@ -43,12 +43,13 @@ import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.AlertConfig
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.GaugeConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.GeneralConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.InstrumentationConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.JvmConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.PluginConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.PluginProperty;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SlowTraceConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SyntheticMonitorConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SystemPropertyConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.ThreadProfileConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiDefaultsConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UserRecordingConfig;
 
 import static java.util.concurrent.TimeUnit.HOURS;
@@ -81,12 +82,14 @@ public interface ConfigRepository {
 
     GeneralConfig getGeneralConfig(String agentRollupId) throws Exception;
 
-    TransactionConfig getTransactionConfig(String agentId) throws Exception;
+    SlowTraceConfig getSlowTraceConfig(String agentId) throws Exception;
 
-    JvmConfig getJvmConfig(String agentId) throws Exception;
+    ThreadProfileConfig getThreadProfileConfig(String agentId) throws Exception;
+
+    SystemPropertyConfig getSystemPropertyConfig(String agentId) throws Exception;
 
     // central supports ui config on rollups
-    UiConfig getUiConfig(String agentRollupId) throws Exception;
+    UiDefaultsConfig getUiDefaultsConfig(String agentRollupId) throws Exception;
 
     UserRecordingConfig getUserRecordingConfig(String agentId) throws Exception;
 
@@ -166,7 +169,10 @@ public interface ConfigRepository {
     void updateGeneralConfig(String agentId, GeneralConfig config, String priorVersion)
             throws Exception;
 
-    void updateTransactionConfig(String agentId, TransactionConfig config, String priorVersion)
+    void updateSlowTraceConfig(String agentId, SlowTraceConfig config, String priorVersion)
+            throws Exception;
+
+    void updateThreadProfileConfig(String agentId, ThreadProfileConfig config, String priorVersion)
             throws Exception;
 
     void insertGaugeConfig(String agentId, GaugeConfig config) throws Exception;
@@ -176,7 +182,8 @@ public interface ConfigRepository {
 
     void deleteGaugeConfig(String agentId, String version) throws Exception;
 
-    void updateJvmConfig(String agentId, JvmConfig config, String priorVersion) throws Exception;
+    void updateSystemPropertyConfig(String agentId, SystemPropertyConfig config,
+            String priorVersion) throws Exception;
 
     // central supports synthetic monitor configs on rollups
     // returns id
@@ -202,8 +209,8 @@ public interface ConfigRepository {
     void deleteAlertConfig(String agentRollupId, String version) throws Exception;
 
     // central supports ui config on rollups
-    void updateUiConfig(String agentRollupId, UiConfig uiConfig, String priorVersion)
-            throws Exception;
+    void updateUiDefaultsConfig(String agentRollupId, UiDefaultsConfig uiConfig,
+            String priorVersion) throws Exception;
 
     // only name, type and value of properties is used
     void updatePluginConfig(String agentId, String pluginId, List<PluginProperty> properties,
diff --git a/ui/app/index.html b/ui/app/index.html
index cf80f13018..008d8a33f2 100644
--- a/ui/app/index.html
+++ b/ui/app/index.html
@@ -344,7 +344,8 @@
 <script src="scripts/controllers/transaction/traces.js"></script>
 <script src="scripts/controllers/transaction/queries.js"></script>
 <script src="scripts/controllers/transaction/service-calls.js"></script>
-<script src="scripts/controllers/transaction/profile.js"></script>
+<script src="scripts/controllers/transaction/thread-profile.js"></script>
+<script src="scripts/controllers/transaction/transaction-log.js"></script>
 <script src="scripts/controllers/transaction/flame-graph.js"></script>
 <script src="scripts/controllers/transaction/error-messages.js"></script>
 <script src="scripts/controllers/jvm.js"></script>
@@ -364,15 +365,16 @@
 <script src="scripts/controllers/report/adhoc.js"></script>
 <script src="scripts/controllers/config.js"></script>
 <script src="scripts/controllers/config/general.js"></script>
-<script src="scripts/controllers/config/transaction.js"></script>
+<script src="scripts/controllers/config/slow-traces.js"></script>
+<script src="scripts/controllers/config/thread-profile.js"></script>
 <script src="scripts/controllers/config/gauge-list.js"></script>
 <script src="scripts/controllers/config/gauge.js"></script>
-<script src="scripts/controllers/config/jvm.js"></script>
+<script src="scripts/controllers/config/system-properties.js"></script>
 <script src="scripts/controllers/config/synthetic-monitor-list.js"></script>
 <script src="scripts/controllers/config/synthetic-monitor.js"></script>
 <script src="scripts/controllers/config/alert-list.js"></script>
 <script src="scripts/controllers/config/alert.js"></script>
-<script src="scripts/controllers/config/ui.js"></script>
+<script src="scripts/controllers/config/ui-defaults.js"></script>
 <script src="scripts/controllers/config/plugin-list.js"></script>
 <script src="scripts/controllers/config/plugin.js"></script>
 <script src="scripts/controllers/config/instrumentation-list.js"></script>
diff --git a/ui/app/scripts/app.js b/ui/app/scripts/app.js
index 29d8436c7c..5336cc41df 100644
--- a/ui/app/scripts/app.js
+++ b/ui/app/scripts/app.js
@@ -466,8 +466,8 @@ glowroot.run([
       //   display: 'Breakdown metric count'
       // },
       // {
-      //   id: 'transaction:profile-sample-count',
-      //   display: 'Profile sample count'
+      //   id: 'transaction:thread-profile-sample-count',
+      //   display: 'Thread profile sample count'
       // },
       {
         id: 'transaction:count',
diff --git a/ui/app/scripts/controllers/admin/role.js b/ui/app/scripts/controllers/admin/role.js
index 88eb98c2de..bb3066f694 100644
--- a/ui/app/scripts/controllers/admin/role.js
+++ b/ui/app/scripts/controllers/admin/role.js
@@ -116,8 +116,8 @@ glowroot.controller('AdminRoleCtrl', [
         permissionBlock.transaction.queries = true;
       } else if (permission === 'agent:transaction:serviceCalls') {
         permissionBlock.transaction.serviceCalls = true;
-      } else if (permission === 'agent:transaction:profile') {
-        permissionBlock.transaction.profile = true;
+      } else if (permission === 'agent:transaction:threadProfile') {
+        permissionBlock.transaction.threadProfile = true;
       } else if (permission === 'agent:error') {
         permissionBlock.error._ = true;
       } else if (permission === 'agent:error:overview') {
@@ -154,20 +154,22 @@ glowroot.controller('AdminRoleCtrl', [
         permissionBlock.config.edit._ = true;
       } else if ($scope.layout.central && permission === 'agent:config:edit:general') {
         permissionBlock.config.edit.general = true;
-      } else if (permission === 'agent:config:edit:transaction') {
-        permissionBlock.config.edit.transaction = true;
-      } else if (permission === 'agent:config:edit:gauge') {
-        permissionBlock.config.edit.gauge = true;
-      } else if (permission === 'agent:config:edit:jvm') {
-        permissionBlock.config.edit.jvm = true;
-      } else if ($scope.layout.central && permission === 'agent:config:edit:syntheticMonitor') {
-        permissionBlock.config.edit.syntheticMonitor = true;
-      } else if (permission === 'agent:config:edit:alert') {
-        permissionBlock.config.edit.alert = true;
-      } else if (permission === 'agent:config:edit:ui') {
-        permissionBlock.config.edit.ui = true;
-      } else if (permission === 'agent:config:edit:plugin') {
-        permissionBlock.config.edit.plugin = true;
+      } else if (permission === 'agent:config:edit:slowTraces') {
+        permissionBlock.config.edit.slowTraces = true;
+      } else if (permission === 'agent:config:edit:threadProfile') {
+        permissionBlock.config.edit.threadProfile = true;
+      } else if (permission === 'agent:config:edit:gauges') {
+        permissionBlock.config.edit.gauges = true;
+      } else if (permission === 'agent:config:edit:systemProperties') {
+        permissionBlock.config.edit.systemProperties = true;
+      } else if ($scope.layout.central && permission === 'agent:config:edit:syntheticMonitors') {
+        permissionBlock.config.edit.syntheticMonitors = true;
+      } else if (permission === 'agent:config:edit:alerts') {
+        permissionBlock.config.edit.alerts = true;
+      } else if (permission === 'agent:config:edit:uiDefaults') {
+        permissionBlock.config.edit.uiDefaults = true;
+      } else if (permission === 'agent:config:edit:plugins') {
+        permissionBlock.config.edit.plugins = true;
       } else if (permission === 'agent:config:edit:instrumentation') {
         permissionBlock.config.edit.instrumentation = true;
       } else if (permission === 'agent:config:edit:advanced') {
@@ -181,7 +183,7 @@ glowroot.controller('AdminRoleCtrl', [
         permissionsObj.transaction.traces = false;
         permissionsObj.transaction.queries = false;
         permissionsObj.transaction.serviceCalls = false;
-        permissionsObj.transaction.profile = false;
+        permissionsObj.transaction.threadProfile = false;
       }
       if (permissionsObj.error._) {
         permissionsObj.error.overview = false;
@@ -205,17 +207,17 @@ glowroot.controller('AdminRoleCtrl', [
         if ($scope.layout.central) {
           permissionsObj.config.edit.general = false;
         }
-        permissionsObj.config.edit.transaction = false;
-        permissionsObj.config.edit.gauge = false;
-        permissionsObj.config.edit.jvm = false;
+        permissionsObj.config.edit.slowTraces = false;
+        permissionsObj.config.edit.threadProfile = false;
+        permissionsObj.config.edit.gauges = false;
+        permissionsObj.config.edit.systemProperties = false;
         if ($scope.layout.central) {
-          permissionsObj.config.edit.syntheticMonitor = false;
+          permissionsObj.config.edit.syntheticMonitors = false;
         }
-        permissionsObj.config.edit.alert = false;
-        permissionsObj.config.edit.ui = false;
-        permissionsObj.config.edit.plugin = false;
+        permissionsObj.config.edit.alerts = false;
+        permissionsObj.config.edit.uiDefaults = false;
+        permissionsObj.config.edit.plugins = false;
         permissionsObj.config.edit.instrumentation = false;
-        permissionsObj.config.edit.reweave = false;
         permissionsObj.config.edit.advanced = false;
       }
       if (permissionsObj.admin && permissionsObj.admin._) {
@@ -229,7 +231,7 @@ glowroot.controller('AdminRoleCtrl', [
         return false;
       }
       return permissionsObj.transaction.traces || permissionsObj.transaction.queries
-          || permissionsObj.transaction.serviceCalls || permissionsObj.transaction.profile;
+          || permissionsObj.transaction.serviceCalls || permissionsObj.transaction.threadProfile;
     };
 
     $scope.viewConfigRequired = function (permissionsObj) {
@@ -237,10 +239,11 @@ glowroot.controller('AdminRoleCtrl', [
         return false;
       }
       return permissionsObj.config.edit._ || ($scope.layout.central && permissionsObj.config.edit.general)
-          || permissionsObj.config.edit.transaction || permissionsObj.config.edit.gauge
-          || permissionsObj.config.edit.jvm || ($scope.layout.central && permissionsObj.config.edit.syntheticMonitor)
-          || permissionsObj.config.edit.alert || permissionsObj.config.edit.ui || permissionsObj.config.edit.plugin
-          || permissionsObj.config.edit.instrumentation || permissionsObj.config.edit.reweave
+          || permissionsObj.config.edit.slowTraces || permissionsObj.config.edit.threadProfile
+          || permissionsObj.config.edit.gauges || permissionsObj.config.edit.systemProperties
+          || ($scope.layout.central && permissionsObj.config.edit.syntheticMonitors)
+          || permissionsObj.config.edit.alerts || permissionsObj.config.edit.uiDefaults
+          || permissionsObj.config.edit.plugins || permissionsObj.config.edit.instrumentation
           || permissionsObj.config.edit.advanced;
     };
 
@@ -261,8 +264,8 @@ glowroot.controller('AdminRoleCtrl', [
       if (permissionsObj.transaction.serviceCalls) {
         permissions.push('agent:transaction:serviceCalls');
       }
-      if (permissionsObj.transaction.profile) {
-        permissions.push('agent:transaction:profile');
+      if (permissionsObj.transaction.threadProfile) {
+        permissions.push('agent:transaction:threadProfile');
       }
       if (permissionsObj.error._) {
         permissions.push('agent:error');
@@ -318,26 +321,29 @@ glowroot.controller('AdminRoleCtrl', [
       if ($scope.layout.central && permissionsObj.config.edit.general) {
         permissions.push('agent:config:edit:general');
       }
-      if (permissionsObj.config.edit.transaction) {
-        permissions.push('agent:config:edit:transaction');
+      if (permissionsObj.config.edit.slowTraces) {
+        permissions.push('agent:config:edit:slowTraces');
       }
-      if (permissionsObj.config.edit.gauge) {
-        permissions.push('agent:config:edit:gauge');
+      if (permissionsObj.config.edit.threadProfile) {
+        permissions.push('agent:config:edit:threadProfile');
       }
-      if (permissionsObj.config.edit.jvm) {
-        permissions.push('agent:config:edit:jvm');
+      if (permissionsObj.config.edit.gauges) {
+        permissions.push('agent:config:edit:gauges');
       }
-      if ($scope.layout.central && permissionsObj.config.edit.syntheticMonitor) {
-        permissions.push('agent:config:edit:syntheticMonitor');
+      if (permissionsObj.config.edit.systemProperties) {
+        permissions.push('agent:config:edit:systemProperties');
       }
-      if (permissionsObj.config.edit.alert) {
-        permissions.push('agent:config:edit:alert');
+      if ($scope.layout.central && permissionsObj.config.edit.syntheticMonitors) {
+        permissions.push('agent:config:edit:syntheticMonitors');
       }
-      if (permissionsObj.config.edit.ui) {
-        permissions.push('agent:config:edit:ui');
+      if (permissionsObj.config.edit.alerts) {
+        permissions.push('agent:config:edit:alerts');
       }
-      if (permissionsObj.config.edit.plugin) {
-        permissions.push('agent:config:edit:plugin');
+      if (permissionsObj.config.edit.uiDefaults) {
+        permissions.push('agent:config:edit:uiDefaults');
+      }
+      if (permissionsObj.config.edit.plugins) {
+        permissions.push('agent:config:edit:plugins');
       }
       if (permissionsObj.config.edit.instrumentation) {
         permissions.push('agent:config:edit:instrumentation');
@@ -441,11 +447,12 @@ glowroot.controller('AdminRoleCtrl', [
           view: false,
           edit: {
             _: false,
-            transaction: false,
-            gauge: false,
+            slowTraces: false,
+            threadProfile: false,
+            gauges: false,
             jvm: false,
-            alert: false,
-            ui: false,
+            alerts: false,
+            uiDefaults: false,
             plugin: false,
             instrumentation: false,
             advanced: false
diff --git a/ui/app/scripts/controllers/config.js b/ui/app/scripts/controllers/config.js
index cea13d5eb6..087ee0078a 100644
--- a/ui/app/scripts/controllers/config.js
+++ b/ui/app/scripts/controllers/config.js
@@ -82,7 +82,7 @@ glowroot.controller('ConfigCtrl', [
       }
       if ($scope.isRollup(agentRollupId)) {
         if (path !== 'config/general' && path !== 'config/synthetic-monitor-list' && path !== 'config/alert-list'
-            && path !== 'config/ui' && path !== 'config/advanced') {
+            && path !== 'config/ui-defaults' && path !== 'config/advanced') {
           path = 'config/general';
         }
       }
diff --git a/ui/app/scripts/controllers/config/transaction.js b/ui/app/scripts/controllers/config/slow-traces.js
similarity index 94%
rename from ui/app/scripts/controllers/config/transaction.js
rename to ui/app/scripts/controllers/config/slow-traces.js
index 0dbde69500..57dff69c60 100644
--- a/ui/app/scripts/controllers/config/transaction.js
+++ b/ui/app/scripts/controllers/config/slow-traces.js
@@ -16,7 +16,7 @@
 
 /* global glowroot, angular */
 
-glowroot.controller('ConfigTransactionCtrl', [
+glowroot.controller('ConfigSlowTracesCtrl', [
   '$scope',
   '$http',
   'confirmIfHasChanges',
@@ -70,7 +70,7 @@ glowroot.controller('ConfigTransactionCtrl', [
 
     $scope.save = function (deferred) {
       var postData = angular.copy($scope.config);
-      $http.post('backend/config/transaction?agent-id=' + encodeURIComponent($scope.agentId), postData)
+      $http.post('backend/config/slow-traces?agent-id=' + encodeURIComponent($scope.agentId), postData)
           .then(function (response) {
             onNewData(response.data);
             deferred.resolve('Saved');
@@ -79,7 +79,7 @@ glowroot.controller('ConfigTransactionCtrl', [
           });
     };
 
-    $http.get('backend/config/transaction?agent-id=' + encodeURIComponent($scope.agentId))
+    $http.get('backend/config/slow-traces?agent-id=' + encodeURIComponent($scope.agentId))
         .then(function (response) {
           onNewData(response.data);
         }, function (response) {
diff --git a/ui/app/scripts/controllers/config/jvm.js b/ui/app/scripts/controllers/config/system-properties.js
similarity index 87%
rename from ui/app/scripts/controllers/config/jvm.js
rename to ui/app/scripts/controllers/config/system-properties.js
index f3c6d0224d..5cb4b70908 100644
--- a/ui/app/scripts/controllers/config/jvm.js
+++ b/ui/app/scripts/controllers/config/system-properties.js
@@ -1,5 +1,5 @@
 /*
- * Copyright 2017 the original author or authors.
+ * Copyright 2017-2018 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -16,7 +16,7 @@
 
 /* global glowroot, angular */
 
-glowroot.controller('ConfigJvmCtrl', [
+glowroot.controller('ConfigSystemPropertiesCtrl', [
   '$scope',
   '$http',
   'confirmIfHasChanges',
@@ -57,7 +57,7 @@ glowroot.controller('ConfigJvmCtrl', [
 
     $scope.save = function (deferred) {
       var postData = angular.copy($scope.config);
-      $http.post('backend/config/jvm?agent-id=' + encodeURIComponent($scope.agentId), postData)
+      $http.post('backend/config/system-properties?agent-id=' + encodeURIComponent($scope.agentId), postData)
           .then(function (response) {
             onNewData(response.data);
             deferred.resolve('Saved');
@@ -66,7 +66,7 @@ glowroot.controller('ConfigJvmCtrl', [
           });
     };
 
-    $http.get('backend/config/jvm?agent-id=' + encodeURIComponent($scope.agentId))
+    $http.get('backend/config/system-properties?agent-id=' + encodeURIComponent($scope.agentId))
         .then(function (response) {
           onNewData(response.data);
         }, function (response) {
diff --git a/ui/app/scripts/controllers/config/thread-profile.js b/ui/app/scripts/controllers/config/thread-profile.js
new file mode 100644
index 0000000000..cabbba4ce0
--- /dev/null
+++ b/ui/app/scripts/controllers/config/thread-profile.js
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2018 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/* global glowroot, angular */
+
+glowroot.controller('ConfigThreadProfileCtrl', [
+  '$scope',
+  '$http',
+  'confirmIfHasChanges',
+  'httpErrors',
+  function ($scope, $http, confirmIfHasChanges, httpErrors) {
+
+    if ($scope.hideMainContent()) {
+      return;
+    }
+
+    function onNewData(data) {
+      $scope.loaded = true;
+      $scope.config = data;
+      $scope.originalConfig = angular.copy(data);
+    }
+
+    $scope.hasChanges = function () {
+      return $scope.originalConfig && !angular.equals($scope.config, $scope.originalConfig);
+    };
+    $scope.$on('$locationChangeStart', confirmIfHasChanges($scope));
+
+    $scope.save = function (deferred) {
+      var postData = angular.copy($scope.config);
+      $http.post('backend/config/thread-profile?agent-id=' + encodeURIComponent($scope.agentId), postData)
+          .then(function (response) {
+            onNewData(response.data);
+            deferred.resolve('Saved');
+          }, function (response) {
+            httpErrors.handle(response, $scope, deferred);
+          });
+    };
+
+    $http.get('backend/config/thread-profile?agent-id=' + encodeURIComponent($scope.agentId))
+        .then(function (response) {
+          onNewData(response.data);
+        }, function (response) {
+          httpErrors.handle(response, $scope);
+        });
+  }
+]);
diff --git a/ui/app/scripts/controllers/config/ui.js b/ui/app/scripts/controllers/config/ui-defaults.js
similarity index 92%
rename from ui/app/scripts/controllers/config/ui.js
rename to ui/app/scripts/controllers/config/ui-defaults.js
index fc7747827c..39860212ba 100644
--- a/ui/app/scripts/controllers/config/ui.js
+++ b/ui/app/scripts/controllers/config/ui-defaults.js
@@ -16,7 +16,7 @@
 
 /* global glowroot, angular */
 
-glowroot.controller('ConfigUiCtrl', [
+glowroot.controller('ConfigUiDefaultsCtrl', [
   '$scope',
   '$http',
   '$rootScope',
@@ -91,7 +91,7 @@ glowroot.controller('ConfigUiCtrl', [
 
     $scope.save = function (deferred) {
       var postData = angular.copy($scope.config);
-      $http.post('backend/config/ui?agent-rollup-id=' + encodeURIComponent($scope.agentRollupId), postData)
+      $http.post('backend/config/ui-defaults?agent-rollup-id=' + encodeURIComponent($scope.agentRollupId), postData)
           .then(function (response) {
             onNewData(response.data);
             deferred.resolve('Saved');
@@ -100,7 +100,7 @@ glowroot.controller('ConfigUiCtrl', [
           });
     };
 
-    $http.get('backend/config/ui?agent-rollup-id=' + encodeURIComponent($scope.agentRollupId))
+    $http.get('backend/config/ui-defaults?agent-rollup-id=' + encodeURIComponent($scope.agentRollupId))
         .then(function (response) {
           onNewData(response.data);
         }, function (response) {
diff --git a/ui/app/scripts/controllers/navbar.js b/ui/app/scripts/controllers/navbar.js
index 255b78475c..91de90b383 100644
--- a/ui/app/scripts/controllers/navbar.js
+++ b/ui/app/scripts/controllers/navbar.js
@@ -90,7 +90,7 @@ glowroot.controller('NavbarCtrl', [
       } else if ($scope.layout.central) {
         return 'config/general';
       } else {
-        return 'config/transaction';
+        return 'config/slow-traces';
       }
     };
 
diff --git a/ui/app/scripts/controllers/transaction/profile.js b/ui/app/scripts/controllers/transaction/thread-profile.js
similarity index 98%
rename from ui/app/scripts/controllers/transaction/profile.js
rename to ui/app/scripts/controllers/transaction/thread-profile.js
index 19d7d18ad6..16f3db98a6 100644
--- a/ui/app/scripts/controllers/transaction/profile.js
+++ b/ui/app/scripts/controllers/transaction/thread-profile.js
@@ -16,7 +16,7 @@
 
 /* global glowroot, HandlebarsRendering, gtParseIncludesExcludes, $ */
 
-glowroot.controller('TransactionProfileCtrl', [
+glowroot.controller('TransactionThreadProfileCtrl', [
   '$scope',
   '$http',
   '$location',
@@ -26,7 +26,7 @@ glowroot.controller('TransactionProfileCtrl', [
   'httpErrors',
   function ($scope, $http, $location, locationChanges, charts, queryStrings, httpErrors) {
 
-    $scope.$parent.activeTabItem = 'profile';
+    $scope.$parent.activeTabItem = 'thread-profile';
 
     if ($scope.hideMainContent()) {
       return;
diff --git a/ui/app/scripts/controllers/transaction/transaction-log.js b/ui/app/scripts/controllers/transaction/transaction-log.js
new file mode 100644
index 0000000000..f0f9f4af17
--- /dev/null
+++ b/ui/app/scripts/controllers/transaction/transaction-log.js
@@ -0,0 +1,29 @@
+/*
+ * Copyright 2018 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+/* global glowroot */
+
+glowroot.controller('TransactionTransactionLogCtrl', [
+  '$scope',
+  function ($scope) {
+
+    $scope.$parent.activeTabItem = 'transaction-log';
+
+    if ($scope.hideMainContent()) {
+      return;
+    }
+  }
+]);
diff --git a/ui/app/scripts/routes.js b/ui/app/scripts/routes.js
index 476d579dc1..c89309b5ca 100644
--- a/ui/app/scripts/routes.js
+++ b/ui/app/scripts/routes.js
@@ -122,7 +122,7 @@ glowroot.config([
           return 'jvm/gauges';
         }
       } else if ($rootScope.layout.showNavbarConfig) {
-        return $rootScope.layout.central ? 'config/general' : 'config/transaction';
+        return $rootScope.layout.central ? 'config/general' : 'config/slow-traces';
       } else if ($rootScope.layout.adminView) {
         return $rootScope.layout.central ? 'admin/user-list' : 'admin/general';
       } else if ($rootScope.layout.loggedIn && !$rootScope.layout.ldap) {
@@ -240,8 +240,8 @@ glowroot.config([
         }
       }
     });
-    $stateProvider.state('transaction.detail.services', {
-      url: '/services?transaction-type&transaction-name',
+    $stateProvider.state('transaction.detail.serviceCalls', {
+      url: '/service-calls?transaction-type&transaction-name',
       views: {
         'main@transaction': {
           templateUrl: 'views/transaction/service-calls.html',
@@ -253,8 +253,17 @@ glowroot.config([
       url: '/thread-profile?transaction-type&transaction-name',
       views: {
         'main@transaction': {
-          templateUrl: 'views/transaction/profile.html',
-          controller: 'TransactionProfileCtrl'
+          templateUrl: 'views/transaction/thread-profile.html',
+          controller: 'TransactionThreadProfileCtrl'
+        }
+      }
+    });
+    $stateProvider.state('transaction.detail.transactionLog', {
+      url: '/transaction-log?transaction-type&transaction-name',
+      views: {
+        'main@transaction': {
+          templateUrl: 'views/transaction/transaction-log.html',
+          controller: 'TransactionTransactionLogCtrl'
         }
       }
     });
@@ -456,10 +465,15 @@ glowroot.config([
       templateUrl: 'views/config/general.html',
       controller: 'ConfigGeneralCtrl'
     });
-    $stateProvider.state('config.transaction', {
-      url: '/transaction',
-      templateUrl: 'views/config/transaction.html',
-      controller: 'ConfigTransactionCtrl'
+    $stateProvider.state('config.slowTraces', {
+      url: '/slow-traces',
+      templateUrl: 'views/config/slow-traces.html',
+      controller: 'ConfigSlowTracesCtrl'
+    });
+    $stateProvider.state('config.threadProfile', {
+      url: '/thread-profile',
+      templateUrl: 'views/config/thread-profile.html',
+      controller: 'ConfigThreadProfileCtrl'
     });
     $stateProvider.state('config.gaugeList', {
       url: '/gauge-list',
@@ -471,10 +485,10 @@ glowroot.config([
       templateUrl: 'views/config/gauge.html',
       controller: 'ConfigGaugeCtrl'
     });
-    $stateProvider.state('config.jvm', {
-      url: '/jvm',
-      templateUrl: 'views/config/jvm.html',
-      controller: 'ConfigJvmCtrl'
+    $stateProvider.state('config.systemProperties', {
+      url: '/system-properties',
+      templateUrl: 'views/config/system-properties.html',
+      controller: 'ConfigSystemPropertiesCtrl'
     });
     $stateProvider.state('config.syntheticMonitorList', {
       url: '/synthetic-monitor-list',
@@ -496,10 +510,10 @@ glowroot.config([
       templateUrl: 'views/config/alert.html',
       controller: 'ConfigAlertCtrl'
     });
-    $stateProvider.state('config.ui', {
-      url: '/ui',
-      templateUrl: 'views/config/ui.html',
-      controller: 'ConfigUiCtrl'
+    $stateProvider.state('config.uiDefaults', {
+      url: '/ui-defaults',
+      templateUrl: 'views/config/ui-defaults.html',
+      controller: 'ConfigUiDefaultsCtrl'
     });
     $stateProvider.state('config.pluginList', {
       url: '/plugin-list',
diff --git a/ui/app/views/admin/role.html b/ui/app/views/admin/role.html
index 56460128c5..28fbcb2fcb 100644
--- a/ui/app/views/admin/role.html
+++ b/ui/app/views/admin/role.html
@@ -101,8 +101,8 @@
             <label ng-class="{'gt-label-disabled': page.permissions.transaction._}"
                    style="margin-left: 30px;">
               <input type="checkbox"
-                     ng-model="page.permissions.transaction.profile"
-                     ng-disabled="page.permissions.transaction._ || !layout.adminEdit">Profile
+                     ng-model="page.permissions.transaction.threadProfile"
+                     ng-disabled="page.permissions.transaction._ || !layout.adminEdit">Thread profile
             </label>
           </div>
           <div class="checkbox">
@@ -246,15 +246,23 @@
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.transaction"
-                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Transactions
+                     ng-model="page.permissions.config.edit.slowTraces"
+                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Slow traces
             </label>
           </div>
           <div class="checkbox">
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.gauge"
+                     ng-model="page.permissions.config.edit.threadProfile"
+                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Thread profile
+            </label>
+          </div>
+          <div class="checkbox">
+            <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
+                   style="margin-left: 60px;">
+              <input type="checkbox"
+                     ng-model="page.permissions.config.edit.gauges"
                      ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Gauges
             </label>
           </div>
@@ -262,15 +270,15 @@
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.jvm"
-                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">JVM
+                     ng-model="page.permissions.config.edit.systemProperties"
+                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">System Properties
             </label>
           </div>
           <div class="checkbox">
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.alert"
+                     ng-model="page.permissions.config.edit.alerts"
                      ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Alerts
             </label>
           </div>
@@ -278,15 +286,15 @@
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.ui"
-                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">UI
+                     ng-model="page.permissions.config.edit.uiDefaults"
+                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">UI Defaults
             </label>
           </div>
           <div class="checkbox">
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.plugin"
+                     ng-model="page.permissions.config.edit.plugins"
                      ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Plugins
             </label>
           </div>
@@ -403,8 +411,8 @@
             <label ng-class="{'gt-label-disabled': page.permissions.transaction._}"
                    style="margin-left: 30px;">
               <input type="checkbox"
-                     ng-model="page.permissions.transaction.profile"
-                     ng-disabled="page.permissions.transaction._ || !layout.adminEdit">Profile
+                     ng-model="page.permissions.transaction.threadProfile"
+                     ng-disabled="page.permissions.transaction._ || !layout.adminEdit">Thread profile
             </label>
           </div>
           <div class="checkbox">
@@ -536,7 +544,8 @@
                      ng-model="page.permissions.config.view"
                      ng-disabled="page.permissions.config._ || !layout.adminEdit"
                      ng-required="viewConfigRequired(page.permissions)">
-              View (General, Transactions, Gauges, Synthetic monitors, Alerts, UI, Plugins, Instrumentation, Advanced)
+              View (General, Slow traces, Thread profile, Gauges, System properties, Synthetic monitors, Alerts, UI
+              Defaults, Plugins, Instrumentation, Advanced)
               <span ng-if="!page.permissions.config.view && viewConfigRequired(page.permissions)"
                     style="font-style: italic;">
                 -- required for edit permission
@@ -563,15 +572,23 @@
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.transaction"
-                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Transactions
+                     ng-model="page.permissions.config.edit.slowTraces"
+                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Slow traces
+            </label>
+          </div>
+          <div class="checkbox">
+            <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
+                   style="margin-left: 60px;">
+              <input type="checkbox"
+                     ng-model="page.permissions.config.edit.threadProfile"
+                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Thread profile
             </label>
           </div>
           <div class="checkbox">
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.gauge"
+                     ng-model="page.permissions.config.edit.gauges"
                      ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Gauges
             </label>
           </div>
@@ -579,15 +596,15 @@
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.jvm"
-                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">JVM
+                     ng-model="page.permissions.config.edit.systemProperties"
+                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">System Properties
             </label>
           </div>
           <div class="checkbox">
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.syntheticMonitor"
+                     ng-model="page.permissions.config.edit.syntheticMonitors"
                      ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Synthetic
               monitors
             </label>
@@ -596,7 +613,7 @@
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.alert"
+                     ng-model="page.permissions.config.edit.alerts"
                      ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Alerts
             </label>
           </div>
@@ -604,15 +621,15 @@
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.ui"
-                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">UI
+                     ng-model="page.permissions.config.edit.uiDefaults"
+                     ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">UI Defaults
             </label>
           </div>
           <div class="checkbox">
             <label ng-class="{'gt-label-disabled': page.permissions.config._ || page.permissions.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="page.permissions.config.edit.plugin"
+                     ng-model="page.permissions.config.edit.plugins"
                      ng-disabled="page.permissions.config._ || page.permissions.config.edit._ || !layout.adminEdit">Plugins
             </label>
           </div>
@@ -750,8 +767,8 @@
             <label ng-class="{'gt-label-disabled': permissionBlock.transaction._}"
                    style="margin-left: 30px;">
               <input type="checkbox"
-                     ng-model="permissionBlock.transaction.profile"
-                     ng-disabled="permissionBlock.transaction._ || !layout.adminEdit">Profile
+                     ng-model="permissionBlock.transaction.threadProfile"
+                     ng-disabled="permissionBlock.transaction._ || !layout.adminEdit">Thread profile
             </label>
           </div>
           <div class="checkbox">
@@ -883,7 +900,8 @@
                      ng-model="permissionBlock.config.view"
                      ng-disabled="permissionBlock.config._ || !layout.adminEdit"
                      ng-required="viewConfigRequired(permissionBlock)">
-              View (General, Transactions, Gauges, Synthetic monitors, Alerts, UI, Plugins, Instrumentation, Advanced)
+              View (General, Slow traces, Thread profile, Gauges, System properties, Synthetic monitors, Alerts, UI
+              Defaults, Plugins, Instrumentation, Advanced)
               <span ng-if="!permissionBlock.config.view && viewConfigRequired(permissionBlock)"
                     style="font-style: italic;">
                 -- required for edit permission
@@ -910,15 +928,23 @@
             <label ng-class="{'gt-label-disabled': permissionBlock.config._ || permissionBlock.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="permissionBlock.config.edit.transaction"
-                     ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">Transactions
+                     ng-model="permissionBlock.config.edit.slowTraces"
+                     ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">Slow traces
+            </label>
+          </div>
+          <div class="checkbox">
+            <label ng-class="{'gt-label-disabled': permissionBlock.config._ || permissionBlock.config.edit._}"
+                   style="margin-left: 60px;">
+              <input type="checkbox"
+                     ng-model="permissionBlock.config.edit.threadProfile"
+                     ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">Thread profile
             </label>
           </div>
           <div class="checkbox">
             <label ng-class="{'gt-label-disabled': permissionBlock.config._ || permissionBlock.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="permissionBlock.config.edit.gauge"
+                     ng-model="permissionBlock.config.edit.gauges"
                      ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">Gauges
             </label>
           </div>
@@ -926,15 +952,15 @@
             <label ng-class="{'gt-label-disabled': permissionBlock.config._ || permissionBlock.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="permissionBlock.config.edit.jvm"
-                     ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">JVM
+                     ng-model="permissionBlock.config.edit.systemProperties"
+                     ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">System Properties
             </label>
           </div>
           <div class="checkbox">
             <label ng-class="{'gt-label-disabled': permissionBlock.config._ || permissionBlock.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="permissionBlock.config.edit.syntheticMonitor"
+                     ng-model="permissionBlock.config.edit.syntheticMonitors"
                      ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">Synthetic
               monitors
             </label>
@@ -943,7 +969,7 @@
             <label ng-class="{'gt-label-disabled': permissionBlock.config._ || permissionBlock.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="permissionBlock.config.edit.alert"
+                     ng-model="permissionBlock.config.edit.alerts"
                      ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">Alerts
             </label>
           </div>
@@ -951,15 +977,15 @@
             <label ng-class="{'gt-label-disabled': permissionBlock.config._ || permissionBlock.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="permissionBlock.config.edit.ui"
-                     ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">UI
+                     ng-model="permissionBlock.config.edit.uiDefaults"
+                     ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">UI Defaults
             </label>
           </div>
           <div class="checkbox">
             <label ng-class="{'gt-label-disabled': permissionBlock.config._ || permissionBlock.config.edit._}"
                    style="margin-left: 60px;">
               <input type="checkbox"
-                     ng-model="permissionBlock.config.edit.plugin"
+                     ng-model="permissionBlock.config.edit.plugins"
                      ng-disabled="permissionBlock.config._ || permissionBlock.config.edit._ || !layout.adminEdit">Plugins
             </label>
           </div>
diff --git a/ui/app/views/config.html b/ui/app/views/config.html
index 560421edd1..aeb973ab21 100644
--- a/ui/app/views/config.html
+++ b/ui/app/views/config.html
@@ -78,9 +78,15 @@
            ng-if="layout.central">
       </div>
       <div gt-sidebar-item
-           gt-display="Transactions"
-           gt-url="config/transaction{{agentQueryString()}}"
-           gt-active="currentUrl() === 'config/transaction'"
+           gt-display="Slow traces"
+           gt-url="config/slow-traces{{agentQueryString()}}"
+           gt-active="currentUrl() === 'config/slow-traces'"
+           ng-if="!isAgentRollup()">
+      </div>
+      <div gt-sidebar-item
+           gt-display="Thread profile"
+           gt-url="config/thread-profile{{agentQueryString()}}"
+           gt-active="currentUrl() === 'config/thread-profile'"
            ng-if="!isAgentRollup()">
       </div>
       <div gt-sidebar-item
@@ -91,9 +97,9 @@
            ng-if="!isAgentRollup()">
       </div>
       <div gt-sidebar-item
-           gt-display="JVM"
-           gt-url="config/jvm{{agentQueryString()}}"
-           gt-active="currentUrl() === 'config/jvm'"
+           gt-display="System properties"
+           gt-url="config/system-properties{{agentQueryString()}}"
+           gt-active="currentUrl() === 'config/system-properties'"
            ng-if="!isAgentRollup()">
       </div>
       <div gt-sidebar-item
@@ -110,9 +116,9 @@
            gt-sub-active="currentUrl() === 'config/alert'">
       </div>
       <div gt-sidebar-item
-           gt-display="UI"
-           gt-url="config/ui{{agentQueryString()}}"
-           gt-active="currentUrl() === 'config/ui'">
+           gt-display="UI Defaults"
+           gt-url="config/ui-defaults{{agentQueryString()}}"
+           gt-active="currentUrl() === 'config/ui-defaults'">
       </div>
       <div gt-sidebar-item
            gt-display="Plugins"
diff --git a/ui/app/views/config/advanced.html b/ui/app/views/config/advanced.html
index ebd807c6bd..75cc5a0f18 100644
--- a/ui/app/views/config/advanced.html
+++ b/ui/app/views/config/advanced.html
@@ -27,6 +27,22 @@
            name="formCtrl"
            style="padding-top: 15px;">
         <div gt-form-group
+             gt-type="checkbox"
+             gt-label="Thread stats"
+             gt-checkbox-label="Capture JVM thread stats"
+             gt-model="config.captureThreadStats"
+             gt-disabled="!agentRollup.permissions.config.edit.advanced"
+             gt-col-class1="col-lg-4"
+             gt-col-class2="col-lg-8">
+          <div class="help-block">
+            Capture CPU time, blocked time, waited time and allocated memory if supported by the JVM.
+            <span ng-if="agentRollup.permissions.jvm.capabilities">
+              See <a href="jvm/capabilities">JVM Capabilities</a>.
+            </span>
+            Capturing this data has some overhead (around 5 microseconds per transaction).
+          </div>
+        </div>
+        <div gt-form-group
              gt-label="Immediate partial trace store threshold"
              gt-model="config.immediatePartialStoreThresholdSeconds"
              gt-number="true"
diff --git a/ui/app/views/config/alert-list.html b/ui/app/views/config/alert-list.html
index 528d849d0c..1a027563ac 100644
--- a/ui/app/views/config/alert-list.html
+++ b/ui/app/views/config/alert-list.html
@@ -1,5 +1,5 @@
 <!--
-  Copyright 2012-2017 the original author or authors.
+  Copyright 2012-2018 the original author or authors.
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
@@ -35,7 +35,7 @@
         </div>
         <!-- ng-if="loaded" is used to prevent jitter of seeing this section very briefly
              before it gets pushed down by existing alerts -->
-        <div ng-if="loaded && agentRollup.permissions.config.edit.alert"
+        <div ng-if="loaded && agentRollup.permissions.config.edit.alerts"
              style="margin-top: 30px;">
           <a class="btn btn-primary"
              href="config/alert{{newQueryString()}}">
diff --git a/ui/app/views/config/alert.html b/ui/app/views/config/alert.html
index 2c5c5c251a..08db6742bb 100644
--- a/ui/app/views/config/alert.html
+++ b/ui/app/views/config/alert.html
@@ -49,7 +49,7 @@
               <label>
                 <input type="radio"
                        ng-model="config.condition.conditionType"
-                       ng-disabled="!agentRollup.permissions.config.edit.alert"
+                       ng-disabled="!agentRollup.permissions.config.edit.alerts"
                        value="metric">
                 Metric
               </label>
@@ -58,7 +58,7 @@
               <label>
                 <input type="radio"
                        ng-model="config.condition.conditionType"
-                       ng-disabled="!agentRollup.permissions.config.edit.alert"
+                       ng-disabled="!agentRollup.permissions.config.edit.alerts"
                        value="synthetic-monitor">
                 Synthetic monitor
               </label>
@@ -67,7 +67,7 @@
               <label>
                 <input type="radio"
                        ng-model="config.condition.conditionType"
-                       ng-disabled="!agentRollup.permissions.config.edit.alert"
+                       ng-disabled="!agentRollup.permissions.config.edit.alerts"
                        value="heartbeat">
                 Heartbeat
               </label>
@@ -83,7 +83,7 @@
             </label>
             <div class="col-lg-9">
               <select ng-model="config.condition.metric"
-                      ng-disabled="!agentRollup.permissions.config.edit.alert"
+                      ng-disabled="!agentRollup.permissions.config.edit.alerts"
                       ng-required="config.condition.conditionType === 'metric'"
                       class="form-control"
                       name="conditionMetric"
@@ -112,7 +112,7 @@
               <select ng-model="config.condition.transactionType"
                       class="form-control"
                       ng-required="loaded"
-                      ng-disabled="!agentRollup.permissions.config.edit.alert"
+                      ng-disabled="!agentRollup.permissions.config.edit.alerts"
                       name="transactionType"
                       id="transactionType"
                       style="width: auto;">
@@ -134,7 +134,7 @@
           <div gt-form-group
                gt-label="Transaction name"
                gt-model="config.condition.transactionName"
-               gt-disabled="!agentRollup.permissions.config.edit.alert"
+               gt-disabled="!agentRollup.permissions.config.edit.alerts"
                gt-width="30em"
                ng-if="showTransactionTypeAndName()">
             <div class="help-block">
@@ -147,7 +147,7 @@
                gt-number="true"
                gt-pattern="pattern.percentage"
                gt-required="loaded"
-               gt-disabled="!agentRollup.permissions.config.edit.alert"
+               gt-disabled="!agentRollup.permissions.config.edit.alerts"
                gt-width="7em"
                gt-addon="percentile"
                ng-if="config.condition.metric === 'transaction:x-percentile'">
@@ -166,7 +166,7 @@
                        class="form-control"
                        ng-model="page.conditionThreshold"
                        ng-pattern="config.condition.metric === 'error:rate' ? pattern.percentage : pattern.double"
-                       ng-disabled="!agentRollup.permissions.config.edit.alert"
+                       ng-disabled="!agentRollup.permissions.config.edit.alerts"
                        ng-required="loaded"
                        name="conditionThreshold"
                        id="conditionThreshold"
@@ -190,7 +190,7 @@
                gt-label="Lower bound threshold?"
                gt-checkbox-label="Lower bound threshold"
                gt-model="config.condition.lowerBoundThreshold"
-               gt-disabled="!agentRollup.permissions.config.edit.alert">
+               gt-disabled="!agentRollup.permissions.config.edit.alerts">
             <div class="help-block">
               Alert if the {{phraseForValue()}} is less than or equal to the threshold, instead of alerting if the
               {{phraseForValue()}} is greater than or equal to the threshold.
@@ -202,7 +202,7 @@
                gt-number="true"
                gt-pattern="pattern.integer"
                gt-required="loaded"
-               gt-disabled="!agentRollup.permissions.config.edit.alert"
+               gt-disabled="!agentRollup.permissions.config.edit.alerts"
                gt-width="7em"
                gt-addon="minutes">
             <div class="help-block">
@@ -215,7 +215,7 @@
                gt-number="true"
                gt-pattern="pattern.integer"
                gt-required="loaded"
-               gt-disabled="!agentRollup.permissions.config.edit.alert"
+               gt-disabled="!agentRollup.permissions.config.edit.alerts"
                gt-width="7em"
                ng-if="showMinTransactionCount()">
             <div class="help-block">
@@ -231,7 +231,7 @@
                gt-number="true"
                gt-pattern="pattern.integer"
                gt-required="loaded"
-               gt-disabled="!agentRollup.permissions.config.edit.alert"
+               gt-disabled="!agentRollup.permissions.config.edit.alerts"
                gt-width="7em"
                gt-addon="seconds">
             <div class="help-block">
@@ -250,7 +250,7 @@
               <select ng-model="config.condition.syntheticMonitorId"
                       class="form-control"
                       ng-required="loaded"
-                      ng-disabled="!agentRollup.permissions.config.edit.alert"
+                      ng-disabled="!agentRollup.permissions.config.edit.alerts"
                       name="syntheticMonitorId"
                       id="syntheticMonitorId"
                       style="width: auto;">
@@ -275,7 +275,7 @@
                gt-number="true"
                gt-pattern="pattern.integer"
                gt-required="loaded"
-               gt-disabled="!agentRollup.permissions.config.edit.alert"
+               gt-disabled="!agentRollup.permissions.config.edit.alerts"
                gt-width="7em"
                gt-addon="milliseconds">
             <div class="help-block">
@@ -298,7 +298,7 @@
                     id="severity"
                     name="severity"
                     ng-required="loaded"
-                    ng-disabled="!agentRollup.permissions.config.edit.alert"
+                    ng-disabled="!agentRollup.permissions.config.edit.alerts"
                     style="width: auto;">
               <option value="" ng-if="!config.severity"></option>
               <option value="critical">Critical</option>
@@ -315,7 +315,7 @@
              gt-type="textarea"
              gt-label="Email addresses"
              gt-model="page.emailAddresses"
-             gt-disabled="!agentRollup.permissions.config.edit.alert"
+             gt-disabled="!agentRollup.permissions.config.edit.alerts"
              gt-width="30em">
           <div class="help-block">
             Comma separated list of email addresses.
@@ -332,7 +332,7 @@
           </label>
           <div class="col-lg-9 gt-form-group-without-help-block">
             <select ng-model="config.pagerDutyNotification.pagerDutyIntegrationKey"
-                    ng-disabled="!agentRollup.permissions.config.edit.alert"
+                    ng-disabled="!agentRollup.permissions.config.edit.alerts"
                     class="form-control"
                     name="pagerDutyIntegrationKey"
                     id="pagerDutyIntegrationKey"
@@ -353,7 +353,7 @@
         </div>
       </fieldset>
       <div class="form-group gt-form-buttons"
-           ng-if="agentRollup.permissions.config.edit.alert">
+           ng-if="agentRollup.permissions.config.edit.alerts">
         <div class="col-lg-offset-3 col-lg-9 gt-sometimes-legend-padding">
           <div gt-button-group>
             <div gt-button
diff --git a/ui/app/views/config/gauge-list.html b/ui/app/views/config/gauge-list.html
index b1120a5720..b0027e05d3 100644
--- a/ui/app/views/config/gauge-list.html
+++ b/ui/app/views/config/gauge-list.html
@@ -1,5 +1,5 @@
 <!--
-  Copyright 2012-2017 the original author or authors.
+  Copyright 2012-2018 the original author or authors.
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
@@ -38,7 +38,7 @@
         </div>
         <!-- ng-if="loaded" is used to prevent jitter of seeing this section very briefly
              before it gets pushed down by existing gauges -->
-        <div ng-if="loaded && agentRollup.permissions.config.edit.gauge"
+        <div ng-if="loaded && agentRollup.permissions.config.edit.gauges"
              style="margin-top: 30px;">
           <a class="btn btn-primary"
              href="config/gauge{{newQueryString()}}">
diff --git a/ui/app/views/config/gauge.html b/ui/app/views/config/gauge.html
index e8c293566b..b3db3a581f 100644
--- a/ui/app/views/config/gauge.html
+++ b/ui/app/views/config/gauge.html
@@ -52,7 +52,7 @@
                  class="form-control"
                  ng-model="config.mbeanObjectName"
                  ng-required="true"
-                 ng-disabled="!agentRollup.permissions.config.edit.gauge"
+                 ng-disabled="!agentRollup.permissions.config.edit.gauges"
                  uib-typeahead="suggestion for suggestion in mbeanObjectNames($viewValue)"
                  typeahead-on-select="onSelectMBeanObjectName()"
                  ng-blur="onBlurMBeanObjectName()"
@@ -107,7 +107,7 @@
                 <label>
                   <input type="checkbox"
                          ng-model="mbeanAttribute.checked"
-                         ng-disabled="!agentRollup.permissions.config.edit.gauge">
+                         ng-disabled="!agentRollup.permissions.config.edit.gauges">
                   {{mbeanAttribute.name.replace('/', ' / ')}}
                   <span ng-show="!mbeanAttribute.available && !mbeanUnavailable && !mbeanUnmatched"
                         class="gt-red"
@@ -122,7 +122,7 @@
                   <label>
                     <input type="checkbox"
                            ng-model="mbeanAttribute.counter"
-                           ng-disabled="!agentRollup.permissions.config.edit.gauge">
+                           ng-disabled="!agentRollup.permissions.config.edit.gauges">
                     Counter?
                   </label>
                 </div>
@@ -146,7 +146,7 @@
         </div>
       </div>
       <div class="form-group gt-form-buttons"
-           ng-if="agentRollup.permissions.config.edit.gauge">
+           ng-if="agentRollup.permissions.config.edit.gauges">
         <div class="col-lg-offset-3 col-lg-9">
           <div gt-button-group>
             <div gt-button
diff --git a/ui/app/views/config/plugin.html b/ui/app/views/config/plugin.html
index 7ca65f1e49..457a9f3958 100644
--- a/ui/app/views/config/plugin.html
+++ b/ui/app/views/config/plugin.html
@@ -44,7 +44,7 @@
             <div gt-form-group
                  gt-label="{{property.label}}"
                  gt-model="property.value"
-                 gt-disabled="!agentRollup.permissions.config.edit.plugin"
+                 gt-disabled="!agentRollup.permissions.config.edit.plugins"
                  gt-width="25em"
                  ng-class="{ 'gt-form-group-without-help-block': property.description === null }"
                  gt-col-class1="col-lg-4"
@@ -60,7 +60,7 @@
                  gt-label="{{property.label}}"
                  gt-checkbox-label="{{property.checkboxLabel}}"
                  gt-model="property.value"
-                 gt-disabled="!agentRollup.permissions.config.edit.plugin"
+                 gt-disabled="!agentRollup.permissions.config.edit.plugins"
                  ng-class="{ 'gt-form-group-without-help-block': property.description === null }"
                  gt-col-class1="col-lg-4"
                  gt-col-class2="col-lg-8">
@@ -73,7 +73,7 @@
             <div gt-form-group
                  gt-label="{{property.label}}"
                  gt-model="property.value"
-                 gt-disabled="!agentRollup.permissions.config.edit.plugin"
+                 gt-disabled="!agentRollup.permissions.config.edit.plugins"
                  gt-number="true"
                  gt-pattern="pattern.double"
                  gt-width="7em"
@@ -88,7 +88,7 @@
         </div>
       </div>
       <div class="form-group gt-form-buttons"
-           ng-if="agentRollup.permissions.config.edit.plugin">
+           ng-if="agentRollup.permissions.config.edit.plugins">
         <div class="col-lg-offset-4 col-lg-8">
           <div gt-button
                gt-label="Save changes"
diff --git a/ui/app/views/config/transaction.html b/ui/app/views/config/slow-traces.html
similarity index 73%
rename from ui/app/views/config/transaction.html
rename to ui/app/views/config/slow-traces.html
index a63c65f75c..e19699065d 100644
--- a/ui/app/views/config/transaction.html
+++ b/ui/app/views/config/slow-traces.html
@@ -15,7 +15,7 @@
 -->
 <div class="panel panel-default">
   <div class="panel-heading">
-    <h2>Transactions</h2>
+    <h2>Slow traces</h2>
   </div>
   <div class="panel-body">
     <div ng-hide="hideMainContent()">
@@ -27,12 +27,12 @@
            name="formCtrl"
            style="padding-top: 15px;">
         <div gt-form-group
-             gt-label="Slow threshold"
+             gt-label="Threshold"
              gt-model="config.slowThresholdMillis"
              gt-number="true"
              gt-pattern="pattern.integer"
              gt-required="loaded"
-             gt-disabled="!agentRollup.permissions.config.edit.transaction"
+             gt-disabled="!agentRollup.permissions.config.edit.slowTraces"
              gt-width="7em"
              gt-addon="milliseconds">
           <div class="help-block">
@@ -40,34 +40,6 @@
             trace will be stored to disk at its completion.
           </div>
         </div>
-        <div gt-form-group
-             gt-label="Profiling interval"
-             gt-model="config.profilingIntervalMillis"
-             gt-number="true"
-             gt-pattern="pattern.integer"
-             gt-required="loaded"
-             gt-disabled="!agentRollup.permissions.config.edit.transaction"
-             gt-width="7em"
-             gt-addon="milliseconds">
-          <div class="help-block">
-            The interval at which the profiler samples stack traces. Each sampling time is randomized within its given
-            interval in order to avoid periodicity bias.
-          </div>
-        </div>
-        <div gt-form-group
-             gt-type="checkbox"
-             gt-label="Thread stats"
-             gt-checkbox-label="Capture JVM thread stats"
-             gt-model="config.captureThreadStats"
-             gt-disabled="!agentRollup.permissions.config.edit.transaction">
-          <div class="help-block">
-            Capture CPU time, blocked time, waited time and allocated memory if available.
-            <span ng-if="agentRollup.permissions.jvm.capabilities">
-              See <a href="jvm/capabilities">JVM Capabilities</a>.
-            </span>
-            Capturing this data has some overhead (around 5 microseconds per transaction).
-          </div>
-        </div>
         <fieldset ng-repeat="slowThreshold in config.slowThresholds">
           <legend style="margin-bottom: 20px;">Slow threshold override</legend>
           <div class="form-group">
@@ -77,7 +49,7 @@
             </label>
             <div class="col-lg-9">
               <select ng-model="slowThreshold.transactionType"
-                      ng-disabled="!agentRollup.permissions.config.edit.transaction"
+                      ng-disabled="!agentRollup.permissions.config.edit.slowTraces"
                       id="transactionType{{$index}}"
                       class="form-control"
                       style="width: auto;">
@@ -95,7 +67,7 @@
           <div gt-form-group
                gt-label="Transaction name"
                gt-model="slowThreshold.transactionName"
-               gt-disabled="!agentRollup.permissions.config.edit.transaction"
+               gt-disabled="!agentRollup.permissions.config.edit.slowTraces"
                gt-width="40em">
             <div class="help-block">
               The transaction name this override applies to. If empty, this override will apply to all transaction
@@ -108,13 +80,13 @@
                gt-number="true"
                gt-pattern="pattern.integer"
                gt-required="loaded"
-               gt-disabled="!agentRollup.permissions.config.edit.transaction"
+               gt-disabled="!agentRollup.permissions.config.edit.slowTraces"
                gt-width="7em"
                gt-addon="milliseconds"
                class="gt-form-group-without-help-block">
           </div>
           <div class="form-group gt-form-buttons"
-               ng-if="agentRollup.permissions.config.edit.transaction"
+               ng-if="agentRollup.permissions.config.edit.slowTraces"
                style="padding-top: 5px;">
             <div class="col-lg-offset-3 col-lg-9">
               <button class="btn gt-btn-danger"
@@ -125,8 +97,8 @@
             </div>
           </div>
         </fieldset>
-        <fieldset ng-if="agentRollup.permissions.config.edit.transaction">
-          <legend>Add {{config.slowThresholds.length ? 'another' : 'a'}} slow threshold override</legend>
+        <fieldset ng-if="agentRollup.permissions.config.edit.slowTraces">
+          <legend>Add {{config.slowThresholds.length ? 'another' : 'a'}} threshold override</legend>
           <button class="btn btn-default"
                   ng-click="addSlowThreshold()"
                   style="margin-bottom: 23px; margin-left: 14px;">
@@ -134,7 +106,7 @@
           </button>
         </fieldset>
         <div class="form-group gt-form-buttons"
-             ng-if="agentRollup.permissions.config.edit.transaction">
+             ng-if="agentRollup.permissions.config.edit.slowTraces">
           <div class="col-lg-offset-3 col-lg-9">
             <div gt-button
                  gt-label="Save changes"
diff --git a/ui/app/views/config/synthetic-monitor-list.html b/ui/app/views/config/synthetic-monitor-list.html
index 23a3b27ac1..d0c0a8ecbf 100644
--- a/ui/app/views/config/synthetic-monitor-list.html
+++ b/ui/app/views/config/synthetic-monitor-list.html
@@ -1,5 +1,5 @@
 <!--
-  Copyright 2017 the original author or authors.
+  Copyright 2017-2018 the original author or authors.
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
@@ -35,7 +35,7 @@
         </div>
         <!-- ng-if="loaded" is used to prevent jitter of seeing this section very briefly
              before it gets pushed down by existing synthetic monitors -->
-        <div ng-if="loaded && agentRollup.permissions.config.edit.syntheticMonitor"
+        <div ng-if="loaded && agentRollup.permissions.config.edit.syntheticMonitors"
              style="margin-top: 30px;">
           <a class="btn btn-primary"
              href="config/synthetic-monitor{{newQueryString()}}">
diff --git a/ui/app/views/config/synthetic-monitor.html b/ui/app/views/config/synthetic-monitor.html
index 8fccbf243d..703cf22573 100644
--- a/ui/app/views/config/synthetic-monitor.html
+++ b/ui/app/views/config/synthetic-monitor.html
@@ -40,7 +40,7 @@
             <label>
               <input type="radio"
                      ng-model="config.kind"
-                     ng-disabled="!agentRollup.permissions.config.edit.syntheticMonitor"
+                     ng-disabled="!agentRollup.permissions.config.edit.syntheticMonitors"
                      value="ping">
               Ping
             </label>
@@ -49,7 +49,7 @@
             <label>
               <input type="radio"
                      ng-model="config.kind"
-                     ng-disabled="!agentRollup.permissions.config.edit.syntheticMonitor"
+                     ng-disabled="!agentRollup.permissions.config.edit.syntheticMonitors"
                      value="java">
               Java
             </label>
@@ -63,7 +63,7 @@
              gt-model="config.pingUrl"
              gt-pattern="/^https?:\/\//"
              gt-required="loaded"
-             gt-disabled="!agentRollup.permissions.config.edit.syntheticMonitor"
+             gt-disabled="!agentRollup.permissions.config.edit.syntheticMonitors"
              gt-rows="10"
              class="gt-alert-java-class">
           <div class="help-block">
@@ -73,7 +73,7 @@
         <div gt-form-group
              gt-label="Display name"
              gt-model="config.display"
-             gt-disabled="!agentRollup.permissions.config.edit.syntheticMonitor"
+             gt-disabled="!agentRollup.permissions.config.edit.syntheticMonitors"
              gt-width="40em"
              gt-placeholder="Ping {{config.pingUrl ? config.pingUrl : '<url>'}}">
           <div class="help-block">
@@ -85,7 +85,7 @@
         <div gt-form-group
              gt-label="Display name"
              gt-model="config.display"
-             gt-disabled="!agentRollup.permissions.config.edit.syntheticMonitor"
+             gt-disabled="!agentRollup.permissions.config.edit.syntheticMonitors"
              gt-width="40em"
              gt-required="loaded">
           <div class="help-block">
@@ -98,7 +98,7 @@
              gt-label="Java source"
              gt-model="config.javaSource"
              gt-required="loaded"
-             gt-disabled="!agentRollup.permissions.config.edit.syntheticMonitor"
+             gt-disabled="!agentRollup.permissions.config.edit.syntheticMonitors"
              id="gtSyntheticJavaSource"
              class="gt-synthetic-java-source"
              ng-class="{'has-error': !config.javaSource}">
@@ -126,7 +126,7 @@
         </div>
       </div>
       <div class="form-group gt-form-buttons"
-           ng-if="agentRollup.permissions.config.edit.syntheticMonitor">
+           ng-if="agentRollup.permissions.config.edit.syntheticMonitors">
         <div class="col-lg-offset-3 col-lg-9">
           <div gt-button-group>
             <div gt-button
diff --git a/ui/app/views/config/jvm.html b/ui/app/views/config/system-properties.html
similarity index 91%
rename from ui/app/views/config/jvm.html
rename to ui/app/views/config/system-properties.html
index ca30c4d1ea..9ba96b5442 100644
--- a/ui/app/views/config/jvm.html
+++ b/ui/app/views/config/system-properties.html
@@ -15,7 +15,7 @@
 -->
 <div class="panel panel-default">
   <div class="panel-heading">
-    <h2>JVM</h2>
+    <h2>System properties</h2>
   </div>
   <div class="panel-body">
     <div ng-hide="hideMainContent()">
@@ -29,7 +29,7 @@
         <div gt-form-group
              gt-label="Mask system properties"
              gt-model="page.maskSystemProperties"
-             gt-disabled="!agentRollup.permissions.config.edit.jvm"
+             gt-disabled="!agentRollup.permissions.config.edit.systemProperties"
              gt-width="20em">
           <div class="help-block">
             Comma-separated list of sensitive system properties to mask, e.g. passwords. The wildcard '*' is supported
@@ -37,7 +37,7 @@
           </div>
         </div>
         <div class="form-group gt-form-buttons"
-             ng-if="agentRollup.permissions.config.edit.jvm">
+             ng-if="agentRollup.permissions.config.edit.systemProperties">
           <div class="col-lg-offset-3 col-lg-9">
             <div gt-button
                  gt-label="Save changes"
diff --git a/ui/app/views/config/thread-profile.html b/ui/app/views/config/thread-profile.html
new file mode 100644
index 0000000000..525df8b7ee
--- /dev/null
+++ b/ui/app/views/config/thread-profile.html
@@ -0,0 +1,58 @@
+<!--
+  Copyright 2018 the original author or authors.
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+  http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+-->
+<div class="panel panel-default">
+  <div class="panel-heading">
+    <h2>Thread profile</h2>
+  </div>
+  <div class="panel-body">
+    <div ng-hide="hideMainContent()">
+      <div ng-include src="'template/gt-loading-overlay.html'"></div>
+      <div ng-include src="'template/gt-http-error-overlay.html'"></div>
+      <div ng-form
+           gt-form-autofocus-on-first-input
+           class="form-horizontal"
+           name="formCtrl"
+           style="padding-top: 15px;">
+        <div gt-form-group
+             gt-label="Profiling interval"
+             gt-model="config.profilingIntervalMillis"
+             gt-number="true"
+             gt-pattern="pattern.integer"
+             gt-required="loaded"
+             gt-disabled="!agentRollup.permissions.config.edit.threadProfile"
+             gt-width="7em"
+             gt-addon="milliseconds">
+          <div class="help-block">
+            The interval at which the profiler samples stack traces. Each sampling time is randomized within its given
+            interval in order to avoid periodicity bias.
+          </div>
+        </div>
+        <div class="form-group gt-form-buttons"
+             ng-if="agentRollup.permissions.config.edit.threadProfile">
+          <div class="col-lg-offset-3 col-lg-9">
+            <div gt-button
+                 gt-label="Save changes"
+                 gt-click="save(deferred)"
+                 gt-disabled="formCtrl.$invalid">
+            </div>
+          </div>
+        </div>
+      </div>
+    </div>
+  </div>
+</div>
+<!-- each page with confirmation dialog needs its own confirmation dom so that it is deleted on $destroy -->
+<div ng-include="'template/gt-confirmation.html'"></div>
diff --git a/ui/app/views/config/ui.html b/ui/app/views/config/ui-defaults.html
similarity index 96%
rename from ui/app/views/config/ui.html
rename to ui/app/views/config/ui-defaults.html
index c2bca88109..f00f1eca9b 100644
--- a/ui/app/views/config/ui.html
+++ b/ui/app/views/config/ui-defaults.html
@@ -15,7 +15,7 @@
 -->
 <div class="panel panel-default">
   <div class="panel-heading">
-    <h2>UI</h2>
+    <h2>UI Defaults</h2>
   </div>
   <div class="panel-body">
     <div ng-hide="hideMainContent()">
@@ -33,7 +33,7 @@
           </label>
           <div class="col-lg-8">
             <select ng-model="config.defaultTransactionType"
-                    ng-disabled="!agentRollup.permissions.config.edit.ui"
+                    ng-disabled="!agentRollup.permissions.config.edit.uiDefaults"
                     id="defaultTransactionType"
                     class="form-control"
                     style="width: auto;">
@@ -53,7 +53,7 @@
              gt-model="page.defaultPercentiles"
              gt-pattern="pattern.percentageList"
              gt-required="loaded"
-             gt-disabled="!agentRollup.permissions.config.edit.ui"
+             gt-disabled="!agentRollup.permissions.config.edit.uiDefaults"
              gt-width="20em"
              gt-col-class1="col-lg-4"
              gt-col-class2="col-lg-8">
@@ -73,7 +73,7 @@
           <div class="col-lg-8">
             <select multiple
                     ng-model="config.defaultGaugeNames"
-                    ng-disabled="!agentRollup.permissions.config.edit.ui"
+                    ng-disabled="!agentRollup.permissions.config.edit.uiDefaults"
                     id="defaultGaugeNames"
                     class="form-control"
                     style="width: auto; height: 200px; border-top-right-radius: 0; border-bottom-right-radius: 0;">
@@ -89,7 +89,7 @@
           </div>
         </div>
         <div class="form-group gt-form-buttons"
-             ng-if="agentRollup.permissions.config.edit.ui">
+             ng-if="agentRollup.permissions.config.edit.uiDefaults">
           <div class="col-lg-offset-4 col-lg-8">
             <div gt-button
                  gt-label="Save changes"
diff --git a/ui/app/views/transaction/tabs.html b/ui/app/views/transaction/tabs.html
index f30b79138d..304226c8b8 100644
--- a/ui/app/views/transaction/tabs.html
+++ b/ui/app/views/transaction/tabs.html
@@ -34,28 +34,28 @@
   <li role="presentation" ng-class="{active: activeTabItem === 'queries'}">
     <a ng-href="transaction/queries{{tabQueryString()}}"
        ng-click="clickTab('queries', $event)"
-       ng-keydown="keydownTab('tab_traces', 'tab_services', $event)"
+       ng-keydown="keydownTab('tab_traces', 'tab_service_calls', $event)"
        ng-if="agentRollup.permissions.transaction.queries"
        id="tab_queries">
       Queries
     </a>
   </li>
   <li role="presentation" ng-class="{active: activeTabItem === 'service-calls'}">
-    <a ng-href="transaction/services{{tabQueryString()}}"
-       ng-click="clickTab('services', $event)"
-       ng-keydown="keydownTab('tab_queries', 'tab_profile', $event)"
+    <a ng-href="transaction/service-calls{{tabQueryString()}}"
+       ng-click="clickTab('service-calls', $event)"
+       ng-keydown="keydownTab('tab_queries', 'tab_thread_profile', $event)"
        ng-if="agentRollup.permissions.transaction.serviceCalls"
-       id="tab_services">
+       id="tab_service_calls">
       Service calls
     </a>
   </li>
-  <li role="presentation" ng-class="{active: activeTabItem === 'profile'}">
+  <li role="presentation" ng-class="{active: activeTabItem === 'thread-profile'}">
     <a ng-href="transaction/thread-profile{{tabQueryString()}}"
-       ng-click="clickTab('profile', $event)"
-       ng-keydown="keydownTab('tab_services', null, $event)"
-       ng-if="agentRollup.permissions.transaction.profile"
-       id="tab_profile">
-      Continuous profiling
+       ng-click="clickTab('thread-profile', $event)"
+       ng-keydown="keydownTab('tab_service_calls', null, $event)"
+       ng-if="agentRollup.permissions.transaction.threadProfile"
+       id="tab_thread_profile">
+      Thread profile
     </a>
   </li>
 </ul>
diff --git a/ui/app/views/transaction/profile.html b/ui/app/views/transaction/thread-profile.html
similarity index 100%
rename from ui/app/views/transaction/profile.html
rename to ui/app/views/transaction/thread-profile.html
diff --git a/ui/app/views/transaction/transaction-log.html b/ui/app/views/transaction/transaction-log.html
new file mode 100644
index 0000000000..a4a398ccd8
--- /dev/null
+++ b/ui/app/views/transaction/transaction-log.html
@@ -0,0 +1,32 @@
+<!--
+  Copyright 2018 the original author or authors.
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+  http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+-->
+<div style="position: relative; min-height: 100px;">
+  <div ng-include src="'template/gt-http-error-overlay.html'"></div>
+  <div gt-spinner
+       gt-show="showSpinner && !showQueries"
+       class="gt-left-aligned-spinner">
+  </div>
+  <div style="position: absolute; width: 100%; margin-top: 50px;">
+    <div gt-spinner
+         gt-show="showSpinner && showQueries">
+    </div>
+  </div>
+  <!-- negative right position is so overlay will cover view flame graph link which sticks slightly beyond container -->
+  <div class="gt-panel-overlay"
+       ng-show="showSpinner"
+       style="right: -20px;">
+  </div>
+</div>
diff --git a/ui/src/main/java/org/glowroot/ui/ConfigJsonService.java b/ui/src/main/java/org/glowroot/ui/ConfigJsonService.java
index 2ce08da872..c67d49db63 100644
--- a/ui/src/main/java/org/glowroot/ui/ConfigJsonService.java
+++ b/ui/src/main/java/org/glowroot/ui/ConfigJsonService.java
@@ -37,12 +37,14 @@ import org.glowroot.common2.repo.TransactionTypeRepository;
 import org.glowroot.ui.GaugeValueJsonService.GaugeOrdering;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.AdvancedConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.GeneralConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.JvmConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.OptionalBool;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.PluginConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.PluginProperty;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SlowThreshold;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.TransactionConfig;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SlowTraceConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.SystemPropertyConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.ThreadProfileConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiDefaultsConfig;
 import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UserRecordingConfig;
 import org.glowroot.wire.api.model.Proto.OptionalInt32;
 
@@ -71,39 +73,46 @@ class ConfigJsonService {
         return mapper.writeValueAsString(GeneralConfigDto.create(config, agentRollupId));
     }
 
-    @GET(path = "/backend/config/transaction", permission = "agent:config:view:transaction")
-    String getTransactionConfig(@BindAgentId String agentId) throws Exception {
-        TransactionConfig config = configRepository.getTransactionConfig(agentId);
+    @GET(path = "/backend/config/slow-traces", permission = "agent:config:view:slowTraces")
+    String getSlowTraceConfig(@BindAgentId String agentId) throws Exception {
+        SlowTraceConfig config = configRepository.getSlowTraceConfig(agentId);
         List<String> transactionTypes = transactionTypeRepository.read(agentId);
         if (transactionTypes == null) {
             transactionTypes = ImmutableList.of();
         }
-        return mapper.writeValueAsString(ImmutableTransactionConfigResponse.builder()
-                .config(TransactionConfigDto.create(config))
+        return mapper.writeValueAsString(ImmutableSlowTraceConfigResponse.builder()
+                .config(SlowTraceConfigDto.create(config))
                 .defaultTransactionType(
-                        configRepository.getUiConfig(agentId).getDefaultTransactionType())
+                        configRepository.getUiDefaultsConfig(agentId).getDefaultTransactionType())
                 .addAllAllTransactionTypes(transactionTypes)
                 .build());
     }
 
-    @GET(path = "/backend/config/jvm", permission = "agent:config:view:jvm")
-    String getJvmConfig(@BindAgentId String agentId) throws Exception {
-        JvmConfig config = configRepository.getJvmConfig(agentId);
-        return mapper.writeValueAsString(JvmConfigDto.create(config));
+    @GET(path = "/backend/config/thread-profile", permission = "agent:config:view:threadProfile")
+    String getThreadProfileConfig(@BindAgentId String agentId) throws Exception {
+        ThreadProfileConfig config = configRepository.getThreadProfileConfig(agentId);
+        return mapper.writeValueAsString(ThreadProfileConfigDto.create(config));
     }
 
-    // central supports ui config on rollups
-    @GET(path = "/backend/config/ui", permission = "agent:config:view:ui")
-    String getUiConfig(@BindAgentRollupId String agentRollupId) throws Exception {
-        UiConfig config = configRepository.getUiConfig(agentRollupId);
+    @GET(path = "/backend/config/system-properties",
+            permission = "agent:config:view:systemProperties")
+    String getSystemPropertiesConfig(@BindAgentId String agentId) throws Exception {
+        SystemPropertyConfig config = configRepository.getSystemPropertyConfig(agentId);
+        return mapper.writeValueAsString(SystemPropertyConfigDto.create(config));
+    }
+
+    // central supports ui defaults config on rollups
+    @GET(path = "/backend/config/ui-defaults", permission = "agent:config:view:uiDefaults")
+    String getUiDefaultsConfig(@BindAgentRollupId String agentRollupId) throws Exception {
+        UiDefaultsConfig config = configRepository.getUiDefaultsConfig(agentRollupId);
         List<String> transactionTypes = transactionTypeRepository.read(agentRollupId);
         if (transactionTypes == null) {
             transactionTypes = ImmutableList.of();
         }
         List<Gauge> gauges = gaugeValueRepository.getRecentlyActiveGauges(agentRollupId);
         ImmutableList<Gauge> sortedGauges = new GaugeOrdering().immutableSortedCopy(gauges);
-        return mapper.writeValueAsString(ImmutableUiConfigResponse.builder()
-                .config(UiConfigDto.create(config))
+        return mapper.writeValueAsString(ImmutableUiDefaultsConfigResponse.builder()
+                .config(UiDefaultsConfigDto.create(config))
                 .addAllAllTransactionTypes(transactionTypes)
                 .addAllAllGauges(sortedGauges)
                 .build());
@@ -154,40 +163,55 @@ class ConfigJsonService {
         return getGeneralConfig(agentRollupId);
     }
 
-    @POST(path = "/backend/config/transaction", permission = "agent:config:edit:transaction")
-    String updateTransactionConfig(@BindAgentId String agentId,
-            @BindRequest TransactionConfigDto configDto) throws Exception {
+    @POST(path = "/backend/config/slow-traces", permission = "agent:config:edit:slowTraces")
+    String updateSlowTraceConfig(@BindAgentId String agentId,
+            @BindRequest SlowTraceConfigDto configDto) throws Exception {
+        try {
+            configRepository.updateSlowTraceConfig(agentId, configDto.convert(),
+                    configDto.version());
+        } catch (OptimisticLockException e) {
+            throw new JsonServiceException(PRECONDITION_FAILED, e);
+        }
+        return getSlowTraceConfig(agentId);
+    }
+
+    @POST(path = "/backend/config/thread-profile", permission = "agent:config:edit:threadProfile")
+    String updateThreadProfileConfig(@BindAgentId String agentId,
+            @BindRequest ThreadProfileConfigDto configDto) throws Exception {
         try {
-            configRepository.updateTransactionConfig(agentId, configDto.convert(),
+            configRepository.updateThreadProfileConfig(agentId, configDto.convert(),
                     configDto.version());
         } catch (OptimisticLockException e) {
             throw new JsonServiceException(PRECONDITION_FAILED, e);
         }
-        return getTransactionConfig(agentId);
+        return getThreadProfileConfig(agentId);
     }
 
-    @POST(path = "/backend/config/jvm", permission = "agent:config:edit:jvm")
-    String updateJvmConfig(@BindAgentId String agentId, @BindRequest JvmConfigDto configDto)
+    @POST(path = "/backend/config/system-properties",
+            permission = "agent:config:edit:systemProperties")
+    String updateSystemPropertiesConfig(@BindAgentId String agentId,
+            @BindRequest SystemPropertyConfigDto configDto)
             throws Exception {
         try {
-            configRepository.updateJvmConfig(agentId, configDto.convert(), configDto.version());
+            configRepository.updateSystemPropertyConfig(agentId, configDto.convert(),
+                    configDto.version());
         } catch (OptimisticLockException e) {
             throw new JsonServiceException(PRECONDITION_FAILED, e);
         }
-        return getJvmConfig(agentId);
+        return getSystemPropertiesConfig(agentId);
     }
 
-    // central supports ui config on rollups
-    @POST(path = "/backend/config/ui", permission = "agent:config:edit:ui")
-    String updateUiConfig(@BindAgentRollupId String agentRollupId,
-            @BindRequest UiConfigDto configDto) throws Exception {
+    // central supports ui defaults config on rollups
+    @POST(path = "/backend/config/ui-defaults", permission = "agent:config:edit:uiDefaults")
+    String updateUiDefaultsConfig(@BindAgentRollupId String agentRollupId,
+            @BindRequest UiDefaultsConfigDto configDto) throws Exception {
         try {
-            configRepository.updateUiConfig(agentRollupId, configDto.convert(),
+            configRepository.updateUiDefaultsConfig(agentRollupId, configDto.convert(),
                     configDto.version());
         } catch (OptimisticLockException e) {
             throw new JsonServiceException(PRECONDITION_FAILED, e);
         }
-        return getUiConfig(agentRollupId);
+        return getUiDefaultsConfig(agentRollupId);
     }
 
     @POST(path = "/backend/config/plugins", permission = "agent:config:edit:plugins")
@@ -282,26 +306,22 @@ class ConfigJsonService {
     }
 
     @Value.Immutable
-    interface TransactionConfigResponse {
-        ImmutableTransactionConfigDto config();
+    interface SlowTraceConfigResponse {
+        ImmutableSlowTraceConfigDto config();
         String defaultTransactionType();
         List<String> allTransactionTypes();
     }
 
     @Value.Immutable
-    abstract static class TransactionConfigDto {
+    abstract static class SlowTraceConfigDto {
 
         abstract int slowThresholdMillis();
-        abstract int profilingIntervalMillis();
-        abstract boolean captureThreadStats();
         abstract List<ImmutableSlowThresholdDto> slowThresholds();
         abstract String version();
 
-        private TransactionConfig convert() {
-            TransactionConfig.Builder builder = TransactionConfig.newBuilder()
-                    .setSlowThresholdMillis(of(slowThresholdMillis()))
-                    .setProfilingIntervalMillis(of(profilingIntervalMillis()))
-                    .setCaptureThreadStats(captureThreadStats());
+        private SlowTraceConfig convert() {
+            SlowTraceConfig.Builder builder = SlowTraceConfig.newBuilder()
+                    .setSlowThresholdMillis(of(slowThresholdMillis()));
             for (SlowThresholdDto slowThreshold : new SlowThresholdDtoOrdering()
                     .sortedCopy(slowThresholds())) {
                 builder.addSlowThreshold(slowThreshold.convert());
@@ -309,11 +329,9 @@ class ConfigJsonService {
             return builder.build();
         }
 
-        private static ImmutableTransactionConfigDto create(TransactionConfig config) {
-            ImmutableTransactionConfigDto.Builder builder = ImmutableTransactionConfigDto.builder()
+        private static ImmutableSlowTraceConfigDto create(SlowTraceConfig config) {
+            ImmutableSlowTraceConfigDto.Builder builder = ImmutableSlowTraceConfigDto.builder()
                     .slowThresholdMillis(config.getSlowThresholdMillis().getValue())
-                    .profilingIntervalMillis(config.getProfilingIntervalMillis().getValue())
-                    .captureThreadStats(config.getCaptureThreadStats())
                     .version(Versions.getVersion(config));
             for (SlowThreshold slowThreshold : config.getSlowThresholdList()) {
                 builder.addSlowThresholds(SlowThresholdDto.create(slowThreshold));
@@ -363,21 +381,42 @@ class ConfigJsonService {
     }
 
     @Value.Immutable
-    abstract static class JvmConfigDto {
+    abstract static class ThreadProfileConfigDto {
+
+        abstract int profilingIntervalMillis();
+        abstract String version();
+
+        private ThreadProfileConfig convert() {
+            return ThreadProfileConfig.newBuilder()
+                    .setProfilingIntervalMillis(of(profilingIntervalMillis()))
+                    .build();
+        }
+
+        private static ThreadProfileConfigDto create(ThreadProfileConfig config) {
+            return ImmutableThreadProfileConfigDto.builder()
+                    .profilingIntervalMillis(config.getProfilingIntervalMillis().getValue())
+                    .version(Versions.getVersion(config))
+                    .build();
+        }
+    }
+
+    @Value.Immutable
+    abstract static class SystemPropertyConfigDto {
 
         abstract ImmutableList<String> maskSystemProperties();
         abstract String version();
 
-        private JvmConfig convert() {
-            JvmConfig.Builder builder =
-                    JvmConfig.newBuilder().addAllMaskSystemProperty(maskSystemProperties());
+        private SystemPropertyConfig convert() {
+            SystemPropertyConfig.Builder builder = SystemPropertyConfig.newBuilder()
+                    .addAllMaskSystemProperty(maskSystemProperties());
             return builder.build();
         }
 
-        private static JvmConfigDto create(JvmConfig config) {
-            ImmutableJvmConfigDto.Builder builder = ImmutableJvmConfigDto.builder()
-                    .maskSystemProperties(config.getMaskSystemPropertyList())
-                    .version(Versions.getVersion(config));
+        private static SystemPropertyConfigDto create(SystemPropertyConfig config) {
+            ImmutableSystemPropertyConfigDto.Builder builder =
+                    ImmutableSystemPropertyConfigDto.builder()
+                            .maskSystemProperties(config.getMaskSystemPropertyList())
+                            .version(Versions.getVersion(config));
             return builder.build();
         }
     }
@@ -528,7 +567,7 @@ class ConfigJsonService {
     @Value.Immutable
     abstract static class AdvancedConfigDto {
 
-        abstract boolean weavingTimer();
+        abstract boolean captureThreadStats();
         abstract int immediatePartialStoreThresholdSeconds();
         abstract int maxTransactionAggregates();
         abstract int maxQueryAggregates();
@@ -536,11 +575,13 @@ class ConfigJsonService {
         abstract int maxTraceEntriesPerTransaction();
         abstract int maxProfileSamplesPerTransaction();
         abstract int mbeanGaugeNotFoundDelaySeconds();
+        abstract boolean weavingTimer();
         abstract String version();
 
         private AdvancedConfig convert() {
             return AdvancedConfig.newBuilder()
-                    .setWeavingTimer(weavingTimer())
+                    .setCaptureThreadStats(OptionalBool.newBuilder()
+                            .setValue(captureThreadStats()))
                     .setImmediatePartialStoreThresholdSeconds(
                             of(immediatePartialStoreThresholdSeconds()))
                     .setMaxTransactionAggregates(of(maxTransactionAggregates()))
@@ -549,12 +590,13 @@ class ConfigJsonService {
                     .setMaxTraceEntriesPerTransaction(of(maxTraceEntriesPerTransaction()))
                     .setMaxProfileSamplesPerTransaction(of(maxProfileSamplesPerTransaction()))
                     .setMbeanGaugeNotFoundDelaySeconds(of(mbeanGaugeNotFoundDelaySeconds()))
+                    .setWeavingTimer(weavingTimer())
                     .build();
         }
 
         private static AdvancedConfigDto create(AdvancedConfig config) {
             return ImmutableAdvancedConfigDto.builder()
-                    .weavingTimer(config.getWeavingTimer())
+                    .captureThreadStats(config.getCaptureThreadStats().getValue())
                     .immediatePartialStoreThresholdSeconds(
                             config.getImmediatePartialStoreThresholdSeconds().getValue())
                     .maxTransactionAggregates(config.getMaxTransactionAggregates().getValue())
@@ -566,28 +608,29 @@ class ConfigJsonService {
                             config.getMaxProfileSamplesPerTransaction().getValue())
                     .mbeanGaugeNotFoundDelaySeconds(
                             config.getMbeanGaugeNotFoundDelaySeconds().getValue())
+                    .weavingTimer(config.getWeavingTimer())
                     .version(Versions.getVersion(config))
                     .build();
         }
     }
 
     @Value.Immutable
-    interface UiConfigResponse {
-        ImmutableUiConfigDto config();
+    interface UiDefaultsConfigResponse {
+        ImmutableUiDefaultsConfigDto config();
         List<String> allTransactionTypes();
         List<Gauge> allGauges();
     }
 
     @Value.Immutable
-    abstract static class UiConfigDto {
+    abstract static class UiDefaultsConfigDto {
 
         abstract String defaultTransactionType();
         abstract List<Double> defaultPercentiles();
         abstract List<String> defaultGaugeNames();
         abstract String version();
 
-        private UiConfig convert() throws Exception {
-            return UiConfig.newBuilder()
+        private UiDefaultsConfig convert() throws Exception {
+            return UiDefaultsConfig.newBuilder()
                     .setDefaultTransactionType(defaultTransactionType())
                     .addAllDefaultPercentile(
                             Ordering.natural().immutableSortedCopy(defaultPercentiles()))
@@ -595,8 +638,8 @@ class ConfigJsonService {
                     .build();
         }
 
-        private static ImmutableUiConfigDto create(UiConfig config) {
-            return ImmutableUiConfigDto.builder()
+        private static ImmutableUiDefaultsConfigDto create(UiDefaultsConfig config) {
+            return ImmutableUiDefaultsConfigDto.builder()
                     .defaultTransactionType(config.getDefaultTransactionType())
                     .defaultPercentiles(Ordering.natural()
                             .immutableSortedCopy(config.getDefaultPercentileList()))
diff --git a/ui/src/main/java/org/glowroot/ui/JvmJsonService.java b/ui/src/main/java/org/glowroot/ui/JvmJsonService.java
index 219e4f66bf..bb961c1436 100644
--- a/ui/src/main/java/org/glowroot/ui/JvmJsonService.java
+++ b/ui/src/main/java/org/glowroot/ui/JvmJsonService.java
@@ -501,7 +501,7 @@ class JvmJsonService {
 
     private List<String> getJvmMaskSystemProperties(String agentId) throws Exception {
         try {
-            return configRepository.getJvmConfig(agentId).getMaskSystemPropertyList();
+            return configRepository.getSystemPropertyConfig(agentId).getMaskSystemPropertyList();
         } catch (AgentConfigNotFoundException e) {
             return ImmutableList.of();
         }
diff --git a/ui/src/main/java/org/glowroot/ui/LayoutService.java b/ui/src/main/java/org/glowroot/ui/LayoutService.java
index b819f4b1cd..97142f16cf 100644
--- a/ui/src/main/java/org/glowroot/ui/LayoutService.java
+++ b/ui/src/main/java/org/glowroot/ui/LayoutService.java
@@ -39,7 +39,7 @@ import org.glowroot.common2.repo.ConfigRepository.RollupConfig;
 import org.glowroot.common2.repo.TraceAttributeNameRepository;
 import org.glowroot.common2.repo.TransactionTypeRepository;
 import org.glowroot.ui.HttpSessionManager.Authentication;
-import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiConfig;
+import org.glowroot.wire.api.model.AgentConfigOuterClass.AgentConfig.UiDefaultsConfig;
 
 import static java.util.concurrent.TimeUnit.HOURS;
 
@@ -119,14 +119,14 @@ class LayoutService {
     private @Nullable AgentRollupLayout buildAgentRollupLayout(FilteredAgentRollup agentRollup,
             Set<String> transactionTypes, Map<String, List<String>> traceAttributeNames)
             throws Exception {
-        UiConfig uiConfig;
+        UiDefaultsConfig uiConfig;
         try {
-            uiConfig = configRepository.getUiConfig(agentRollup.id());
+            uiConfig = configRepository.getUiDefaultsConfig(agentRollup.id());
         } catch (AgentConfigNotFoundException e) {
-            uiConfig = UiConfig.newBuilder()
-                    .setDefaultTransactionType(ConfigDefaults.UI_DEFAULT_TRANSACTION_TYPE)
-                    .addAllDefaultPercentile(ConfigDefaults.UI_DEFAULT_PERCENTILES)
-                    .addAllDefaultGaugeName(ConfigDefaults.UI_DEFAULT_GAUGE_NAMES)
+            uiConfig = UiDefaultsConfig.newBuilder()
+                    .setDefaultTransactionType(ConfigDefaults.UI_DEFAULTS_TRANSACTION_TYPE)
+                    .addAllDefaultPercentile(ConfigDefaults.UI_DEFAULTS_PERCENTILES)
+                    .addAllDefaultGaugeName(ConfigDefaults.UI_DEFAULTS_GAUGE_NAMES)
                     .build();
         }
         Permissions permissions = agentRollup.permissions();
@@ -171,7 +171,7 @@ class LayoutService {
                 && permissions.error().overview() && permissions.jvm().gauges();
         boolean showNavbarConfig = permissions.config().view();
         // a couple of special cases for embedded ui
-        UiConfig uiConfig = configRepository.getUiConfig(AGENT_ID);
+        UiDefaultsConfig uiConfig = configRepository.getUiDefaultsConfig(AGENT_ID);
         String defaultTransactionType = uiConfig.getDefaultTransactionType();
         Set<String> transactionTypes = Sets.newTreeSet();
         List<String> storedTransactionTypes = transactionTypeRepository.read(AGENT_ID);
@@ -296,8 +296,10 @@ class LayoutService {
                                 "agent:transaction:queries"))
                         .serviceCalls(authentication.isPermittedForAgentRollup(agentRollupId,
                                 "agent:transaction:serviceCalls"))
-                        .profile(authentication.isPermittedForAgentRollup(agentRollupId,
-                                "agent:transaction:profile"))
+                        .threadProfile(authentication.isPermittedForAgentRollup(agentRollupId,
+                                "agent:transaction:threadProfile"))
+                        .transactionLog(authentication.isPermittedForAgentRollup(agentRollupId,
+                                "agent:transaction:transactionLog"))
                         .build())
                 .error(ImmutableErrorPermissions.builder()
                         .overview(authentication.isPermittedForAgentRollup(agentRollupId,
@@ -335,23 +337,25 @@ class LayoutService {
                         .edit(ImmutableEditConfigPermissions.builder()
                                 .general(authentication.isPermittedForAgentRollup(agentRollupId,
                                         "agent:config:edit:general"))
-                                .transaction(authentication.isPermittedForAgentRollup(agentRollupId,
-                                        "agent:config:edit:transaction"))
-                                .gauge(authentication.isPermittedForAgentRollup(agentRollupId,
-                                        "agent:config:edit:gauge"))
-                                .jvm(authentication.isPermittedForAgentRollup(agentRollupId,
-                                        "agent:config:edit:jvm"))
+                                .slowTraces(authentication.isPermittedForAgentRollup(agentRollupId,
+                                        "agent:config:edit:slowTraces"))
+                                .threadProfile(authentication.isPermittedForAgentRollup(
+                                        agentRollupId, "agent:config:edit:threadProfile"))
+                                .gauges(authentication.isPermittedForAgentRollup(agentRollupId,
+                                        "agent:config:edit:gauges"))
+                                .systemProperties(authentication.isPermittedForAgentRollup(
+                                        agentRollupId, "agent:config:edit:systemProperties"))
                                 // central supports synthetic monitor configs on rollups
-                                .syntheticMonitor(authentication.isPermittedForAgentRollup(
-                                        agentRollupId, "agent:config:edit:syntheticMonitor"))
+                                .syntheticMonitors(authentication.isPermittedForAgentRollup(
+                                        agentRollupId, "agent:config:edit:syntheticMonitors"))
                                 // central supports alert configs on rollups
-                                .alert(authentication.isPermittedForAgentRollup(agentRollupId,
-                                        "agent:config:edit:alert"))
-                                // central supports ui config on rollups
-                                .ui(authentication.isPermittedForAgentRollup(agentRollupId,
-                                        "agent:config:edit:ui"))
-                                .plugin(authentication.isPermittedForAgentRollup(agentRollupId,
-                                        "agent:config:edit:plugin"))
+                                .alerts(authentication.isPermittedForAgentRollup(agentRollupId,
+                                        "agent:config:edit:alerts"))
+                                // central supports ui defaults config on rollups
+                                .uiDefaults(authentication.isPermittedForAgentRollup(agentRollupId,
+                                        "agent:config:edit:uiDefaults"))
+                                .plugins(authentication.isPermittedForAgentRollup(agentRollupId,
+                                        "agent:config:edit:plugins"))
                                 .instrumentation(authentication.isPermittedForAgentRollup(
                                         agentRollupId, "agent:config:edit:instrumentation"))
                                 // central supports advanced config on rollups (maxQueryAggregates
@@ -458,10 +462,12 @@ class LayoutService {
         abstract boolean traces();
         abstract boolean queries();
         abstract boolean serviceCalls();
-        abstract boolean profile();
+        abstract boolean threadProfile();
+        abstract boolean transactionLog();
 
         private boolean hasSomeAccess() {
-            return overview() || traces() || queries() || serviceCalls() || profile();
+            return overview() || traces() || queries() || serviceCalls() || threadProfile()
+                    || transactionLog();
         }
     }
 
@@ -505,13 +511,14 @@ class LayoutService {
     @Value.Immutable
     interface EditConfigPermissions {
         boolean general();
-        boolean transaction();
-        boolean gauge();
-        boolean jvm();
-        boolean syntheticMonitor();
-        boolean alert();
-        boolean ui();
-        boolean plugin();
+        boolean slowTraces();
+        boolean threadProfile();
+        boolean gauges();
+        boolean systemProperties();
+        boolean syntheticMonitors();
+        boolean alerts();
+        boolean uiDefaults();
+        boolean plugins();
         boolean instrumentation();
         boolean userRecording();
         boolean advanced();
diff --git a/ui/src/main/java/org/glowroot/ui/TransactionJsonService.java b/ui/src/main/java/org/glowroot/ui/TransactionJsonService.java
index 3a339a3c0f..90cf3304b5 100644
--- a/ui/src/main/java/org/glowroot/ui/TransactionJsonService.java
+++ b/ui/src/main/java/org/glowroot/ui/TransactionJsonService.java
@@ -305,7 +305,7 @@ class TransactionJsonService {
         return sb.toString();
     }
 
-    @GET(path = "/backend/transaction/profile", permission = "agent:transaction:profile")
+    @GET(path = "/backend/transaction/profile", permission = "agent:transaction:threadProfile")
     String getProfile(@BindAgentRollupId String agentRollupId,
             @BindRequest TransactionProfileRequest request) throws Exception {
         TransactionQuery query = toQuery(request, DataKind.PROFILE);
@@ -396,7 +396,7 @@ class TransactionJsonService {
         return sb.toString();
     }
 
-    @GET(path = "/backend/transaction/flame-graph", permission = "agent:transaction:profile")
+    @GET(path = "/backend/transaction/flame-graph", permission = "agent:transaction:threadProfile")
     String getFlameGraph(@BindAgentRollupId String agentRollupId,
             @BindRequest FlameGraphRequest request) throws Exception {
         TransactionQuery query = toQuery(request, DataKind.PROFILE);
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/BasicSmokeIT.java b/webdriver-tests/src/test/java/org/glowroot/tests/BasicSmokeIT.java
index 0f9134364b..6c25344b5d 100644
--- a/webdriver-tests/src/test/java/org/glowroot/tests/BasicSmokeIT.java
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/BasicSmokeIT.java
@@ -56,13 +56,17 @@ public class BasicSmokeIT extends WebDriverIT {
     @BeforeClass
     public static void setUp() throws Exception {
         String content = httpGet("http://localhost:" + getUiPort()
-                + "/backend/config/transaction?agent-id=" + agentId);
+                + "/backend/config/slow-traces?agent-id=" + agentId);
         JsonNode responseNode = new ObjectMapper().readTree(content);
         String version = responseNode.get("config").get("version").asText();
-        httpPost("http://localhost:" + getUiPort()
-                + "/backend/config/transaction?agent-id=" + agentId,
-                "{\"slowThresholdMillis\":0,\"profilingIntervalMillis\":10,"
-                        + "\"captureThreadStats\":false,\"version\":\"" + version + "\"}");
+        httpPost("http://localhost:" + getUiPort() + "/backend/config/slow-traces?agent-id="
+                + agentId, "{\"slowThresholdMillis\":0,\"version\":\"" + version + "\"}");
+        content = httpGet("http://localhost:" + getUiPort()
+                + "/backend/config/thread-profile?agent-id=" + agentId);
+        responseNode = new ObjectMapper().readTree(content);
+        version = responseNode.get("version").asText();
+        httpPost("http://localhost:" + getUiPort() + "/backend/config/thread-profile?agent-id="
+                + agentId, "{\"profilingIntervalMillis\":10,\"version\":\"" + version + "\"}");
         for (int i = 0; i < 3; i++) {
             container.executeNoExpectedTrace(JdbcServlet.class);
             container.executeNoExpectedTrace(ErrorServlet.class);
@@ -135,7 +139,7 @@ public class BasicSmokeIT extends WebDriverIT {
         Utils.withWait(driver, By.partialLinkText("throughput")).click();
         Utils.withWait(driver, By.partialLinkText("Slow traces")).click();
         Utils.withWait(driver, By.partialLinkText("Queries")).click();
-        Utils.withWait(driver, By.partialLinkText("Continuous profiling")).click();
+        Utils.withWait(driver, By.partialLinkText("Thread profile")).click();
         Utils.withWait(driver, By.xpath("//input[@ng-model='filter']")).sendKeys("JdbcServlet");
         Utils.withWait(driver, By.xpath("//button[@ng-click='refresh()']")).click();
         new WebDriverWait(driver, 30).until(ExpectedConditions
@@ -149,7 +153,7 @@ public class BasicSmokeIT extends WebDriverIT {
         Utils.withWait(driver, By.partialLinkText("percentiles")).click();
         Utils.withWait(driver, By.partialLinkText("Slow traces")).click();
         Utils.withWait(driver, By.partialLinkText("Queries")).click();
-        Utils.withWait(driver, By.partialLinkText("Continuous profiling")).click();
+        Utils.withWait(driver, By.partialLinkText("Thread profile")).click();
         Utils.withWait(driver, By.linkText("View flame graph (experimental)")).click();
     }
 
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/ConfigIT.java b/webdriver-tests/src/test/java/org/glowroot/tests/ConfigIT.java
index 27c6529c31..865ba7959e 100644
--- a/webdriver-tests/src/test/java/org/glowroot/tests/ConfigIT.java
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/ConfigIT.java
@@ -21,8 +21,9 @@ import org.openqa.selenium.WebElement;
 
 import org.glowroot.tests.config.AdvancedConfigPage;
 import org.glowroot.tests.config.ConfigSidebar;
-import org.glowroot.tests.config.JvmConfigPage;
-import org.glowroot.tests.config.TransactionConfigPage;
+import org.glowroot.tests.config.SlowTraceConfigPage;
+import org.glowroot.tests.config.SystemPropertyConfigPage;
+import org.glowroot.tests.config.ThreadProfileConfigPage;
 import org.glowroot.tests.config.UiConfigPage;
 import org.glowroot.tests.config.UserRecordingConfigPage;
 import org.glowroot.tests.util.Utils;
@@ -33,24 +34,21 @@ import static org.assertj.core.api.Assertions.assertThat;
 public class ConfigIT extends WebDriverIT {
 
     @Test
-    public void shouldUpdateTransactionConfig() throws Exception {
+    public void shouldUpdateSlowTraceConfig() throws Exception {
         // given
         App app = app();
         GlobalNavbar globalNavbar = globalNavbar();
-        TransactionConfigPage page = new TransactionConfigPage(driver);
+        SlowTraceConfigPage page = new SlowTraceConfigPage(driver);
 
         app.open();
         globalNavbar.getConfigLink().click();
         if (WebDriverSetup.useCentral) {
-            new ConfigSidebar(driver).getTransactionsLink().click();
+            new ConfigSidebar(driver).getSlowTracesLink().click();
         }
 
         // when
         page.getSlowThresholdTextField().clear();
         page.getSlowThresholdTextField().sendKeys("2345");
-        page.getProfilingIntervalTextField().clear();
-        page.getProfilingIntervalTextField().sendKeys("3456");
-        page.getCaptureThreadStatsCheckBox().click();
         page.clickSaveButton();
         // wait for save to finish
         SECONDS.sleep(1);
@@ -59,24 +57,48 @@ public class ConfigIT extends WebDriverIT {
         app.open();
         globalNavbar.getConfigLink().click();
         if (WebDriverSetup.useCentral) {
-            new ConfigSidebar(driver).getTransactionsLink().click();
+            new ConfigSidebar(driver).getSlowTracesLink().click();
         }
         assertThat(page.getSlowThresholdTextField().getAttribute("value")).isEqualTo("2345");
+    }
+
+    @Test
+    public void shouldUpdateThreadProfileConfig() throws Exception {
+        // given
+        App app = app();
+        GlobalNavbar globalNavbar = globalNavbar();
+        ConfigSidebar configSidebar = new ConfigSidebar(driver);
+        ThreadProfileConfigPage page = new ThreadProfileConfigPage(driver);
+
+        app.open();
+        globalNavbar.getConfigLink().click();
+        configSidebar.getThreadProfileLink().click();
+
+        // when
+        page.getProfilingIntervalTextField().clear();
+        page.getProfilingIntervalTextField().sendKeys("3456");
+        page.clickSaveButton();
+        // wait for save to finish
+        SECONDS.sleep(1);
+
+        // then
+        app.open();
+        globalNavbar.getConfigLink().click();
+        configSidebar.getThreadProfileLink().click();
         assertThat(page.getProfilingIntervalTextField().getAttribute("value")).isEqualTo("3456");
-        assertThat(page.getCaptureThreadStatsCheckBox().isSelected()).isFalse();
     }
 
     @Test
-    public void shouldUpdateJvmConfig() throws Exception {
+    public void shouldUpdateSystemPropertyConfig() throws Exception {
         // given
         App app = app();
         GlobalNavbar globalNavbar = globalNavbar();
         ConfigSidebar configSidebar = new ConfigSidebar(driver);
-        JvmConfigPage page = new JvmConfigPage(driver);
+        SystemPropertyConfigPage page = new SystemPropertyConfigPage(driver);
 
         app.open();
         globalNavbar.getConfigLink().click();
-        configSidebar.getJvmLink().click();
+        configSidebar.getSystemPropertiesLink().click();
 
         // when
         page.getMaskSystemPropertiesTextField().clear();
@@ -88,7 +110,7 @@ public class ConfigIT extends WebDriverIT {
         // then
         app.open();
         globalNavbar.getConfigLink().click();
-        configSidebar.getJvmLink().click();
+        configSidebar.getSystemPropertiesLink().click();
         assertThat(page.getMaskSystemPropertiesTextField().getAttribute("value"))
                 .isEqualTo("abc, xyz");
     }
@@ -163,6 +185,7 @@ public class ConfigIT extends WebDriverIT {
         configSidebar.getAdvancedLink().click();
 
         // when
+        page.getCaptureThreadStatsCheckBox().click();
         page.getImmediatePartialStoreThresholdTextField().clear();
         page.getImmediatePartialStoreThresholdTextField().sendKeys("1234");
         page.getMaxTransactionAggregatesTextField().clear();
@@ -183,6 +206,7 @@ public class ConfigIT extends WebDriverIT {
         app.open();
         globalNavbar.getConfigLink().click();
         configSidebar.getAdvancedLink().click();
+        assertThat(page.getCaptureThreadStatsCheckBox().isSelected()).isFalse();
         assertThat(page.getImmediatePartialStoreThresholdTextField().getAttribute("value"))
                 .isEqualTo("1234");
         assertThat(page.getMaxTransactionAggregatesTextField().getAttribute("value"))
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/NoTracesNoProfilesSmokeIT.java b/webdriver-tests/src/test/java/org/glowroot/tests/NoTracesNoProfilesSmokeIT.java
index 06b76dddd9..606f2a3fac 100644
--- a/webdriver-tests/src/test/java/org/glowroot/tests/NoTracesNoProfilesSmokeIT.java
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/NoTracesNoProfilesSmokeIT.java
@@ -50,15 +50,19 @@ public class NoTracesNoProfilesSmokeIT extends WebDriverIT {
         SECONDS.sleep(1);
 
         String content = httpGet("http://localhost:" + getUiPort()
-                + "/backend/config/transaction?agent-id=" + agentId);
+                + "/backend/config/slow-traces?agent-id=" + agentId);
         JsonNode responseNode = new ObjectMapper().readTree(content);
         String version = responseNode.get("config").get("version").asText();
-        httpPost(
-                "http://localhost:" + getUiPort() + "/backend/config/transaction?agent-id="
-                        + agentId,
-                "{\"slowThresholdMillis\":" + Integer.MAX_VALUE
-                        + ",\"profilingIntervalMillis\":0,\"captureThreadStats\":false,"
-                        + "\"version\":\"" + version + "\"}");
+        httpPost("http://localhost:" + getUiPort() + "/backend/config/slow-traces?agent-id="
+                + agentId,
+                "{\"slowThresholdMillis\":" + Integer.MAX_VALUE + ",\"version\":\"" + version
+                        + "\"}");
+        content = httpGet("http://localhost:" + getUiPort()
+                + "/backend/config/thread-profile?agent-id=" + agentId);
+        responseNode = new ObjectMapper().readTree(content);
+        version = responseNode.get("version").asText();
+        httpPost("http://localhost:" + getUiPort() + "/backend/config/thread-profile?agent-id="
+                + agentId, "{\"profilingIntervalMillis\":10,\"version\":\"" + version + "\"}");
         container.executeNoExpectedTrace(JdbcServlet.class);
         // give time for aggregates to be collected
         SECONDS.sleep(5);
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/RoleConfigIT.java b/webdriver-tests/src/test/java/org/glowroot/tests/RoleConfigIT.java
index 59ad8bcda0..f83ec1b6ba 100644
--- a/webdriver-tests/src/test/java/org/glowroot/tests/RoleConfigIT.java
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/RoleConfigIT.java
@@ -68,7 +68,7 @@ public class RoleConfigIT extends WebDriverIT {
         assertThat(rolePage.getTransactionTracesCheckBox().isSelected()).isFalse();
         assertThat(rolePage.getTransactionQueriesCheckBox().isSelected()).isFalse();
         assertThat(rolePage.getTransactionServiceCallsCheckBox().isSelected()).isFalse();
-        assertThat(rolePage.getTransactionProfileCheckBox().isSelected()).isFalse();
+        assertThat(rolePage.getTransactionThreadProfileCheckBox().isSelected()).isFalse();
         assertThat(rolePage.getErrorCheckBox().isSelected()).isFalse();
         assertThat(rolePage.getErrorOverviewCheckBox().isSelected()).isFalse();
         assertThat(rolePage.getErrorTracesCheckBox().isSelected()).isFalse();
@@ -82,11 +82,12 @@ public class RoleConfigIT extends WebDriverIT {
         assertThat(rolePage.getJvmEnvironmentCheckBox().isSelected()).isFalse();
         assertThat(rolePage.getConfigViewCheckBox().isSelected()).isFalse();
         assertThat(rolePage.getConfigEditCheckBox().isSelected()).isFalse();
-        assertThat(rolePage.getConfigEditTransactionCheckBox().isSelected()).isFalse();
-        assertThat(rolePage.getConfigEditGaugeCheckBox().isSelected()).isFalse();
-        assertThat(rolePage.getConfigEditAlertCheckBox().isSelected()).isFalse();
-        assertThat(rolePage.getConfigEditUiCheckBox().isSelected()).isFalse();
-        assertThat(rolePage.getConfigEditPluginCheckBox().isSelected()).isFalse();
+        assertThat(rolePage.getConfigEditSlowTracesCheckBox().isSelected()).isFalse();
+        assertThat(rolePage.getConfigEditThreadProfileCheckBox().isSelected()).isFalse();
+        assertThat(rolePage.getConfigEditGaugesCheckBox().isSelected()).isFalse();
+        assertThat(rolePage.getConfigEditAlertsCheckBox().isSelected()).isFalse();
+        assertThat(rolePage.getConfigEditUiDefaultsCheckBox().isSelected()).isFalse();
+        assertThat(rolePage.getConfigEditPluginsCheckBox().isSelected()).isFalse();
         assertThat(rolePage.getConfigEditInstrumentationCheckBox().isSelected()).isFalse();
         assertThat(rolePage.getConfigEditAdvancedCheckBox().isSelected()).isFalse();
         assertThat(rolePage.getAdminCheckBox().isSelected()).isFalse();
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/WebDriverIT.java b/webdriver-tests/src/test/java/org/glowroot/tests/WebDriverIT.java
index 8c3b9f94b2..38b8442f08 100644
--- a/webdriver-tests/src/test/java/org/glowroot/tests/WebDriverIT.java
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/WebDriverIT.java
@@ -145,16 +145,16 @@ public abstract class WebDriverIT {
     }
 
     private static void resetAllCentralConfig() throws Exception {
-        resetCentralConfig("transaction", false, "{\"slowThresholdMillis\":2000,"
-                + "\"profilingIntervalMillis\":1000,"
-                + "\"captureThreadStats\":true,"
+        resetCentralConfig("slow-traces", false, "{\"slowThresholdMillis\":2000,"
                 + "\"version\":\"$version\"}");
-        resetCentralConfig("ui", true, "{\"defaultTransactionType\":\"Web\","
+        resetCentralConfig("thread-profile", false, "{\"profilingIntervalMillis\":1000,"
+                + "\"version\":\"$version\"}");
+        resetCentralConfig("ui-defaults", true, "{\"defaultTransactionType\":\"Web\","
                 + "\"defaultPercentiles\":[50.0,95.0,99.0],"
                 + "\"defaultGaugeNames\":[\"java.lang:type=Memory:HeapMemoryUsage.used\"],"
                 + "\"version\":\"$version\"}");
         resetCentralConfig("user-recording", false, "{\"version\":\"$version\"}");
-        resetCentralConfig("advanced", true, "{\"weavingTimer\":false,"
+        resetCentralConfig("advanced", true, "{\"captureThreadStats\":true,"
                 + "\"immediatePartialStoreThresholdSeconds\":60,"
                 + "\"maxTransactionAggregates\":500,"
                 + "\"maxQueryAggregates\":500,"
@@ -162,6 +162,7 @@ public abstract class WebDriverIT {
                 + "\"maxTraceEntriesPerTransaction\":2000,"
                 + "\"maxProfileSamplesPerTransaction\":50000,"
                 + "\"mbeanGaugeNotFoundDelaySeconds\":60,"
+                + "\"weavingTimer\":false,"
                 + "\"version\":\"$version\"}");
         deleteAllGauges();
         deleteAllAlerts();
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/admin/RoleConfigPage.java b/webdriver-tests/src/test/java/org/glowroot/tests/admin/RoleConfigPage.java
index 8d0ff07628..4b3665c568 100644
--- a/webdriver-tests/src/test/java/org/glowroot/tests/admin/RoleConfigPage.java
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/admin/RoleConfigPage.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2016-2017 the original author or authors.
+ * Copyright 2016-2018 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -55,8 +55,8 @@ public class RoleConfigPage {
         return withWait(xpath("//input[@ng-model='page.permissions.transaction.serviceCalls']"));
     }
 
-    public WebElement getTransactionProfileCheckBox() {
-        return withWait(xpath("//input[@ng-model='page.permissions.transaction.profile']"));
+    public WebElement getTransactionThreadProfileCheckBox() {
+        return withWait(xpath("//input[@ng-model='page.permissions.transaction.threadProfile']"));
     }
 
     public WebElement getErrorCheckBox() {
@@ -111,24 +111,28 @@ public class RoleConfigPage {
         return withWait(xpath("//input[@ng-model='page.permissions.config.edit._']"));
     }
 
-    public WebElement getConfigEditTransactionCheckBox() {
-        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.transaction']"));
+    public WebElement getConfigEditSlowTracesCheckBox() {
+        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.slowTraces']"));
     }
 
-    public WebElement getConfigEditGaugeCheckBox() {
-        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.gauge']"));
+    public WebElement getConfigEditThreadProfileCheckBox() {
+        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.threadProfile']"));
     }
 
-    public WebElement getConfigEditAlertCheckBox() {
-        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.alert']"));
+    public WebElement getConfigEditGaugesCheckBox() {
+        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.gauges']"));
     }
 
-    public WebElement getConfigEditUiCheckBox() {
-        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.ui']"));
+    public WebElement getConfigEditAlertsCheckBox() {
+        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.alerts']"));
     }
 
-    public WebElement getConfigEditPluginCheckBox() {
-        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.plugin']"));
+    public WebElement getConfigEditUiDefaultsCheckBox() {
+        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.uiDefaults']"));
+    }
+
+    public WebElement getConfigEditPluginsCheckBox() {
+        return withWait(xpath("//input[@ng-model='page.permissions.config.edit.plugins']"));
     }
 
     public WebElement getConfigEditInstrumentationCheckBox() {
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/config/AdvancedConfigPage.java b/webdriver-tests/src/test/java/org/glowroot/tests/config/AdvancedConfigPage.java
index fe3c0d8ad8..2676fbbcc1 100644
--- a/webdriver-tests/src/test/java/org/glowroot/tests/config/AdvancedConfigPage.java
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/config/AdvancedConfigPage.java
@@ -31,6 +31,10 @@ public class AdvancedConfigPage {
         this.driver = driver;
     }
 
+    public WebElement getCaptureThreadStatsCheckBox() {
+        return withWait(xpath("//div[@gt-label='Thread stats']//input"));
+    }
+
     public WebElement getImmediatePartialStoreThresholdTextField() {
         return withWait(xpath("//div[@gt-label='Immediate partial trace store threshold']//input"));
     }
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/config/ConfigSidebar.java b/webdriver-tests/src/test/java/org/glowroot/tests/config/ConfigSidebar.java
index 4a4379d3c3..8b0c780397 100644
--- a/webdriver-tests/src/test/java/org/glowroot/tests/config/ConfigSidebar.java
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/config/ConfigSidebar.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2013-2017 the original author or authors.
+ * Copyright 2013-2018 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -31,16 +31,20 @@ public class ConfigSidebar {
         this.driver = driver;
     }
 
-    public WebElement getTransactionsLink() {
-        return Utils.withWait(driver, getSidebar(), linkText("Transactions"));
+    public WebElement getSlowTracesLink() {
+        return Utils.withWait(driver, getSidebar(), linkText("Slow traces"));
+    }
+
+    public WebElement getThreadProfileLink() {
+        return Utils.withWait(driver, getSidebar(), linkText("Thread profile"));
     }
 
     public WebElement getGaugesLink() {
         return Utils.withWait(driver, getSidebar(), linkText("Gauges"));
     }
 
-    public WebElement getJvmLink() {
-        return Utils.withWait(driver, getSidebar(), linkText("JVM"));
+    public WebElement getSystemPropertiesLink() {
+        return Utils.withWait(driver, getSidebar(), linkText("System properties"));
     }
 
     public WebElement getAlertsLink() {
@@ -48,7 +52,7 @@ public class ConfigSidebar {
     }
 
     public WebElement getUiLink() {
-        return Utils.withWait(driver, getSidebar(), linkText("UI"));
+        return Utils.withWait(driver, getSidebar(), linkText("UI Defaults"));
     }
 
     public WebElement getPluginsLink() {
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/config/SlowTraceConfigPage.java b/webdriver-tests/src/test/java/org/glowroot/tests/config/SlowTraceConfigPage.java
new file mode 100644
index 0000000000..4c65703af9
--- /dev/null
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/config/SlowTraceConfigPage.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright 2013-2018 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.glowroot.tests.config;
+
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+
+import org.glowroot.tests.util.Utils;
+
+import static org.openqa.selenium.By.xpath;
+
+public class SlowTraceConfigPage {
+
+    private final WebDriver driver;
+
+    public SlowTraceConfigPage(WebDriver driver) {
+        this.driver = driver;
+    }
+
+    public WebElement getSlowThresholdTextField() {
+        return withWait(xpath("//div[@gt-label='Threshold']//input"));
+    }
+
+    public void clickSaveButton() {
+        clickWithWait(xpath("//button[normalize-space()='Save changes']"));
+    }
+
+    private WebElement withWait(By by) {
+        return Utils.withWait(driver, by);
+    }
+
+    private void clickWithWait(By by) {
+        Utils.clickWithWait(driver, by);
+    }
+}
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/config/JvmConfigPage.java b/webdriver-tests/src/test/java/org/glowroot/tests/config/SystemPropertyConfigPage.java
similarity index 89%
rename from webdriver-tests/src/test/java/org/glowroot/tests/config/JvmConfigPage.java
rename to webdriver-tests/src/test/java/org/glowroot/tests/config/SystemPropertyConfigPage.java
index e5e2869009..68694eb382 100644
--- a/webdriver-tests/src/test/java/org/glowroot/tests/config/JvmConfigPage.java
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/config/SystemPropertyConfigPage.java
@@ -1,5 +1,5 @@
 /*
- * Copyright 2017 the original author or authors.
+ * Copyright 2017-2018 the original author or authors.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -23,11 +23,11 @@ import org.glowroot.tests.util.Utils;
 
 import static org.openqa.selenium.By.xpath;
 
-public class JvmConfigPage {
+public class SystemPropertyConfigPage {
 
     private final WebDriver driver;
 
-    public JvmConfigPage(WebDriver driver) {
+    public SystemPropertyConfigPage(WebDriver driver) {
         this.driver = driver;
     }
 
diff --git a/webdriver-tests/src/test/java/org/glowroot/tests/config/TransactionConfigPage.java b/webdriver-tests/src/test/java/org/glowroot/tests/config/ThreadProfileConfigPage.java
similarity index 79%
rename from webdriver-tests/src/test/java/org/glowroot/tests/config/TransactionConfigPage.java
rename to webdriver-tests/src/test/java/org/glowroot/tests/config/ThreadProfileConfigPage.java
index 7192889371..1bcf97eadf 100644
--- a/webdriver-tests/src/test/java/org/glowroot/tests/config/TransactionConfigPage.java
+++ b/webdriver-tests/src/test/java/org/glowroot/tests/config/ThreadProfileConfigPage.java
@@ -23,11 +23,11 @@ import org.glowroot.tests.util.Utils;
 
 import static org.openqa.selenium.By.xpath;
 
-public class TransactionConfigPage {
+public class ThreadProfileConfigPage {
 
     private final WebDriver driver;
 
-    public TransactionConfigPage(WebDriver driver) {
+    public ThreadProfileConfigPage(WebDriver driver) {
         this.driver = driver;
     }
 
@@ -35,14 +35,6 @@ public class TransactionConfigPage {
         return withWait(xpath("//div[@gt-label='Profiling interval']//input"));
     }
 
-    public WebElement getSlowThresholdTextField() {
-        return withWait(xpath("//div[@gt-label='Slow threshold']//input"));
-    }
-
-    public WebElement getCaptureThreadStatsCheckBox() {
-        return withWait(xpath("//div[@gt-label='Thread stats']//input"));
-    }
-
     public void clickSaveButton() {
         clickWithWait(xpath("//button[normalize-space()='Save changes']"));
     }
diff --git a/wire-api/src/main/protobuf/AgentConfig.proto b/wire-api/src/main/protobuf/AgentConfig.proto
index 7eac5b37a5..cf398b37ef 100644
--- a/wire-api/src/main/protobuf/AgentConfig.proto
+++ b/wire-api/src/main/protobuf/AgentConfig.proto
@@ -11,9 +11,11 @@ message AgentConfig {
   string agent_version = 1;
 
   GeneralConfig general_config = 16;
-  TransactionConfig transaction_config = 2;
-  JvmConfig jvm_config = 17;
-  UiConfig ui_config = 3;
+  TransactionConfig transaction_config = 2; // deprecated in 0.10.12
+  SlowTraceConfig slow_trace_config = 18;
+  ThreadProfileConfig thread_profile_config = 19;
+  SystemPropertyConfig system_property_config = 17;
+  UiDefaultsConfig ui_defaults_config = 3;
   UserRecordingConfig user_recording_config = 4;
   AdvancedConfig advanced_config = 5;
 
@@ -29,6 +31,7 @@ message AgentConfig {
     string display = 1;
   }
 
+  // deprecated in 0.10.12
   message TransactionConfig {
     OptionalInt32 slow_threshold_millis = 1; // optional used due to non-zero default value
     OptionalInt32 profiling_interval_millis = 2; // optional used due to non-zero default value
@@ -36,17 +39,20 @@ message AgentConfig {
     repeated SlowThreshold slow_threshold = 4;
   }
 
-  message SlowThreshold {
-    string transaction_type = 1;
-    string transaction_name = 2;
-    int32 threshold_millis = 3;
+  message SlowTraceConfig {
+    OptionalInt32 slow_threshold_millis = 1; // optional used due to non-zero default value
+    repeated SlowThreshold slow_threshold = 4;
+  }
+
+  message ThreadProfileConfig {
+    OptionalInt32 profiling_interval_millis = 2; // optional used due to non-zero default value
   }
 
-  message JvmConfig {
+  message SystemPropertyConfig {
     repeated string mask_system_property = 1;
   }
 
-  message UiConfig {
+  message UiDefaultsConfig {
     string default_transaction_type = 1;
     repeated double default_percentile = 2;
     repeated string default_gauge_name = 3;
@@ -60,6 +66,7 @@ message AgentConfig {
   message AdvancedConfig {
     bool weaving_timer = 1;
     // optionals used below due to non-zero default value
+    OptionalBool capture_thread_stats = 9;
     OptionalInt32 immediate_partial_store_threshold_seconds = 2;
     OptionalInt32 max_transaction_aggregates = 3;
     OptionalInt32 max_query_aggregates = 4;
@@ -228,6 +235,16 @@ message AgentConfig {
     }
   }
 
+  message SlowThreshold {
+    string transaction_type = 1;
+    string transaction_name = 2;
+    int32 threshold_millis = 3;
+  }
+
+  message OptionalBool {
+    bool value = 1;
+  }
+
   message MBeanAttribute {
     string name = 1;
     bool counter = 2;
-- 
2.13.0.windows.1

